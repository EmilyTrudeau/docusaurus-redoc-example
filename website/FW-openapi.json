{
    "openapi": "3.0.2",
    "info":
    {
        "title": "FastAPI",
        "version": "0.1.0"
    },
    "paths":
    {
        "/api/acquisitions":
        {
            "get":
            {
                "tags": ["acquisitions"],
                "summary": "Find All",
                "operationId": "get_all_acquisitons",
                "parameters": [
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Filter",
                        "type": "string",
                        "default": []
                    },
                    "name": "filter",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Sort",
                        "type": "string"
                    },
                    "name": "sort",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Limit",
                        "type": "integer",
                        "default": 100
                    },
                    "name": "limit",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Skip",
                        "type": "integer",
                        "default": 0
                    },
                    "name": "skip",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Page",
                        "type": "integer"
                    },
                    "name": "page",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "After Id",
                        "type": "string"
                    },
                    "name": "after_id",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Exhaustive",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "exhaustive",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Join",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    },
                    "name": "join",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "X-Accept-Feature",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    },
                    "name": "x-accept-feature",
                    "in": "header"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Find All Api Acquisitions Get",
                                    "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/Page"
                                    },
                                    {
                                        "type": "array",
                                        "items":
                                        {
                                            "$ref": "#/components/schemas/AcquisitionListOutput"
                                        }
                                    }]
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post":
            {
                "tags": ["acquisitions"],
                "summary": "Create",
                "operationId": "add_acquisition",
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/AcquisitionInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/InsertedId"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/acquisitions/{acquisition_id}":
        {
            "get":
            {
                "tags": ["acquisitions"],
                "summary": "Get By Id",
                "operationId": "get_acquisition",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Acquisition Id",
                        "type": "string"
                    },
                    "name": "acquisition_id",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "X-Accept-Feature",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    },
                    "name": "x-accept-feature",
                    "in": "header"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/AcquisitionOutput"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put":
            {
                "tags": ["acquisitions"],
                "summary": "Modify",
                "operationId": "modify_acquisition",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Acquisition Id",
                        "type": "string"
                    },
                    "name": "acquisition_id",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/AcquisitionModifyInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/ModifiedResult"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete":
            {
                "tags": ["acquisitions"],
                "summary": "Delete",
                "operationId": "delete_acquisition",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Acquisition Id",
                        "type": "string"
                    },
                    "name": "acquisition_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/DeletedResult"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/acquisitions/{cid}/analyses":
        {
            "get":
            {
                "tags": ["acquisitions"],
                "summary": "Get all analyses for an acquisition",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "get_acquisition_analyses",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Filter",
                        "type": "string",
                        "default": []
                    },
                    "name": "filter",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Sort",
                        "type": "string"
                    },
                    "name": "sort",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Limit",
                        "type": "integer",
                        "default": 100
                    },
                    "name": "limit",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Skip",
                        "type": "integer",
                        "default": 0
                    },
                    "name": "skip",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Page",
                        "type": "integer"
                    },
                    "name": "page",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "After Id",
                        "type": "string"
                    },
                    "name": "after_id",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Inflate Job",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "inflate_job",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Join Avatars",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "join_avatars",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Join",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "name": "join",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "X-Accept-Feature",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    },
                    "name": "x-accept-feature",
                    "in": "header"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Acquisitions  Cid  Analyses Get",
                                    "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/Page"
                                    },
                                    {
                                        "type": "array",
                                        "items":
                                        {
                                            "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/AnalysisListOutput"
                                            },
                                            {
                                                "$ref": "#/components/schemas/AnalysisListOutputInflatedJob"
                                            }]
                                        }
                                    }]
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post":
            {
                "tags": ["acquisitions"],
                "summary": "Add an analysis to an acquisition",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "add_acquisition_analysis",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "title": "Analysis",
                                "anyOf": [
                                {
                                    "$ref": "#/components/schemas/AdhocAnalysisInput"
                                },
                                {
                                    "$ref": "#/components/schemas/JobAnalysisInput"
                                }]
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/InsertedId"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/acquisitions/{cid}/{sub_cname}/analyses":
        {
            "get":
            {
                "tags": ["acquisitions"],
                "summary": "Get nested analyses from an acquisition",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "get_acquisition_sub_analyses",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "$ref": "#/components/schemas/SubContainerType"
                    },
                    "name": "sub_cname",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Filter",
                        "type": "string",
                        "default": []
                    },
                    "name": "filter",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Sort",
                        "type": "string"
                    },
                    "name": "sort",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Limit",
                        "type": "integer",
                        "default": 100
                    },
                    "name": "limit",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Skip",
                        "type": "integer",
                        "default": 0
                    },
                    "name": "skip",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Page",
                        "type": "integer"
                    },
                    "name": "page",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "After Id",
                        "type": "string"
                    },
                    "name": "after_id",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Inflate Job",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "inflate_job",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Join Avatars",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "join_avatars",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Join",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "name": "join",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "X-Accept-Feature",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    },
                    "name": "x-accept-feature",
                    "in": "header"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Acquisitions  Cid   Sub Cname  Analyses Get",
                                    "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/Page"
                                    },
                                    {
                                        "type": "array",
                                        "items":
                                        {
                                            "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/AnalysisListOutput"
                                            },
                                            {
                                                "$ref": "#/components/schemas/AnalysisListOutputInflatedJob"
                                            }]
                                        }
                                    }]
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/acquisitions/{cid}/analyses/{analysis_id}":
        {
            "get":
            {
                "tags": ["acquisitions"],
                "summary": "Get an analysis from an acquisition",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "get_acquisition_analysis",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Analysis Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "analysis_id",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Inflate Job",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "inflate_job",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Join Avatars",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "join_avatars",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Join",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "name": "join",
                    "in": "query"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Acquisitions  Cid  Analyses  Analysis Id  Get",
                                    "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/AnalysisOutputInflatedJob"
                                    },
                                    {
                                        "$ref": "#/components/schemas/AnalysisOutput"
                                    }]
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put":
            {
                "tags": ["acquisitions"],
                "summary": "Modify an analysis for an acquisition",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "modify_acquisition_analysis",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Analysis Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "analysis_id",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/AnalysisModifyInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/ModifiedResult"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete":
            {
                "tags": ["acquisitions"],
                "summary": "Delete an analysis from an acquisition",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "delete_acquisition_analysis",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Analysis Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "analysis_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/DeletedResult"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/acquisitions/{cid}/analyses/{analysis_id}/inputs/{filename}":
        {
            "get":
            {
                "tags": ["acquisitions"],
                "summary": "Download an analysis input file from an acquisition",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "download_input_from_acquisition_analysis",
                "parameters": [
                {
                    "description": "24-char hex id",
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex id"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "description": "24-char hex analysis id",
                    "required": true,
                    "schema":
                    {
                        "title": "Analysis Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex analysis id"
                    },
                    "name": "analysis_id",
                    "in": "path"
                },
                {
                    "description": "input filename",
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "pattern": ".+",
                        "type": "string",
                        "description": "input filename"
                    },
                    "name": "filename",
                    "in": "path"
                },
                {
                    "description": "24-char hex ticket id",
                    "required": false,
                    "schema":
                    {
                        "title": "Ticket",
                        "type": "string",
                        "description": "24-char hex ticket id"
                    },
                    "name": "ticket",
                    "in": "query"
                },
                {
                    "description": "get file info only",
                    "required": false,
                    "schema":
                    {
                        "title": "Info",
                        "type": "boolean",
                        "description": "get file info only",
                        "default": false
                    },
                    "name": "info",
                    "in": "query"
                },
                {
                    "description": "get zipfile member",
                    "required": false,
                    "schema":
                    {
                        "title": "Member",
                        "pattern": ".+",
                        "type": "string",
                        "description": "get zipfile member"
                    },
                    "name": "member",
                    "in": "query"
                },
                {
                    "description": "feature flag for view/download",
                    "required": false,
                    "schema":
                    {
                        "title": "View",
                        "type": "boolean",
                        "description": "feature flag for view/download",
                        "default": false
                    },
                    "name": "view",
                    "in": "query"
                },
                {
                    "description": "byte ranges to return",
                    "required": false,
                    "schema":
                    {
                        "title": "Range",
                        "type": "string",
                        "description": "byte ranges to return"
                    },
                    "name": "range",
                    "in": "header"
                },
                {
                    "description": "redirect header",
                    "required": false,
                    "schema":
                    {
                        "title": "X-Accept-Feature",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "description": "redirect header"
                    },
                    "name": "x-accept-feature",
                    "in": "header"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Acquisitions  Cid  Analyses  Analysis Id  Inputs  Filename  Get",
                                    "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/DownloadTicketStub"
                                    },
                                    {
                                        "$ref": "#/components/schemas/ZipfileInfo"
                                    }]
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/acquisitions/{cid}/analyses/{analysis_id}/files/{filename}":
        {
            "get":
            {
                "tags": ["acquisitions"],
                "summary": "Download an analysis output file from an acquisition",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "download_output_from_acquisition_analysis",
                "parameters": [
                {
                    "description": "24-char hex id",
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex id"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "description": "24-char hex analysis id",
                    "required": true,
                    "schema":
                    {
                        "title": "Analysis Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex analysis id"
                    },
                    "name": "analysis_id",
                    "in": "path"
                },
                {
                    "description": "output file name",
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "pattern": ".+",
                        "type": "string",
                        "description": "output file name"
                    },
                    "name": "filename",
                    "in": "path"
                },
                {
                    "description": "24-char hex ticket id",
                    "required": false,
                    "schema":
                    {
                        "title": "Ticket",
                        "type": "string",
                        "description": "24-char hex ticket id"
                    },
                    "name": "ticket",
                    "in": "query"
                },
                {
                    "description": "get file info only",
                    "required": false,
                    "schema":
                    {
                        "title": "Info",
                        "type": "boolean",
                        "description": "get file info only",
                        "default": false
                    },
                    "name": "info",
                    "in": "query"
                },
                {
                    "description": "get zipfile member",
                    "required": false,
                    "schema":
                    {
                        "title": "Member",
                        "pattern": ".+",
                        "type": "string",
                        "description": "get zipfile member"
                    },
                    "name": "member",
                    "in": "query"
                },
                {
                    "description": "feature flag for view/download",
                    "required": false,
                    "schema":
                    {
                        "title": "View",
                        "type": "boolean",
                        "description": "feature flag for view/download",
                        "default": false
                    },
                    "name": "view",
                    "in": "query"
                },
                {
                    "description": "byte ranges to return",
                    "required": false,
                    "schema":
                    {
                        "title": "Range",
                        "type": "string",
                        "description": "byte ranges to return"
                    },
                    "name": "range",
                    "in": "header"
                },
                {
                    "description": "redirect header",
                    "required": false,
                    "schema":
                    {
                        "title": "X-Accept-Feature",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "description": "redirect header"
                    },
                    "name": "x-accept-feature",
                    "in": "header"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Acquisitions  Cid  Analyses  Analysis Id  Files  Filename  Get",
                                    "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/DownloadTicketStub"
                                    },
                                    {
                                        "$ref": "#/components/schemas/ZipfileInfo"
                                    }]
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/acquisitions/{cid}/analyses/{analysis_id}/files":
        {
            "post":
            {
                "tags": ["acquisitions"],
                "summary": "Upload an analysis output file to an acquisition",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "upload_output_to_acquisition_analysis",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Analysis Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "analysis_id",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "multipart/form-data":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/Body_partial_api_acquisitions__cid__analyses__analysis_id__files_post"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Acquisitions  Cid  Analyses  Analysis Id  Files Post",
                                    "type": "array",
                                    "items":
                                    {
                                        "$ref": "#/components/schemas/File"
                                    }
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/acquisitions/{cid}/analyses/{analysis_id}/files/{filename}/info":
        {
            "get":
            {
                "tags": ["acquisitions"],
                "summary": "Get file info from an acquisition",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "get_acquisition_file_info",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "type": "string"
                    },
                    "name": "filename",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Input Fallback",
                        "type": "boolean",
                        "default": true
                    },
                    "name": "input_fallback",
                    "in": "query"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/File"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/acquisitions/{cid}/analyses/{analysis_id}/inputs/{filename}/info":
        {
            "get":
            {
                "tags": ["acquisitions"],
                "summary": "Get file info from an acquisition",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "get_acquisition_file_info",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "type": "string"
                    },
                    "name": "filename",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Input Fallback",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "input_fallback",
                    "in": "query"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/File"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/acquisitions/{cid}/analyses/{analysis_id}/notes":
        {
            "post":
            {
                "tags": ["acquisitions"],
                "summary": "Add a note to an acquisition",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "add_acquisition_analysis_note",
                "parameters": [
                {
                    "description": "24-char hex id",
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex id"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "description": "24-char hex analysis id",
                    "required": true,
                    "schema":
                    {
                        "title": "Analysis Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex analysis id"
                    },
                    "name": "analysis_id",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "title": "Note",
                                "allOf": [
                                {
                                    "$ref": "#/components/schemas/NoteInput"
                                }],
                                "description": "note content"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/Note"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/acquisitions/{cid}/analyses/{analysis_id}/notes/{note_id}":
        {
            "delete":
            {
                "tags": ["acquisitions"],
                "summary": "Delete a note from an acquisition",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "delete_acquisition_analysis_note",
                "parameters": [
                {
                    "description": "24-char hex id",
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex id"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "description": "24-char hex analysis id",
                    "required": true,
                    "schema":
                    {
                        "title": "Analysis Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex analysis id"
                    },
                    "name": "analysis_id",
                    "in": "path"
                },
                {
                    "description": "24-char hex note id",
                    "required": true,
                    "schema":
                    {
                        "title": "Note Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex note id"
                    },
                    "name": "note_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/acquisitions/{cid}/files":
        {
            "post":
            {
                "tags": ["acquisitions"],
                "summary": "Upload a file to an acquisition",
                "operationId": "upload_file_to_acquisition",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Ticket",
                        "type": "string"
                    },
                    "name": "ticket",
                    "in": "query"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/acquisitions/{cid}/files/{filename}":
        {
            "get":
            {
                "tags": ["acquisitions"],
                "summary": "Download a file from an acquisition",
                "description": "Return an output file or other info.\nParameters\n    ctype (ContainerType)\n    cid (str)           24-char hex id\n    filename (str)      file to return\n    ticket (str)        24-char hex ticket id; if empty, request ticket stub\n    info (bool)         return input zipfile info\n    member (str)        return single member file of input zipfile\n    range (str)         byte range(s)\n    view (bool)         stream file return instead of downloading\n    hash (str)          file hash\n    range (str)         byte range(s) to return\nReturns\n    ticket stub, redirect, zipfile info, zipfile member, or file data",
                "operationId": "download_file_from_acquisition",
                "parameters": [
                {
                    "description": "24-char hex id",
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex id"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "description": "output file name",
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "pattern": ".+",
                        "type": "string",
                        "description": "output file name"
                    },
                    "name": "filename",
                    "in": "path"
                },
                {
                    "description": "24-char hex ticket id",
                    "required": false,
                    "schema":
                    {
                        "title": "Ticket",
                        "type": "string",
                        "description": "24-char hex ticket id"
                    },
                    "name": "ticket",
                    "in": "query"
                },
                {
                    "description": "get file info only",
                    "required": false,
                    "schema":
                    {
                        "title": "Info",
                        "type": "boolean",
                        "description": "get file info only",
                        "default": false
                    },
                    "name": "info",
                    "in": "query"
                },
                {
                    "description": "get zipfile member",
                    "required": false,
                    "schema":
                    {
                        "title": "Member",
                        "pattern": ".+",
                        "type": "string",
                        "description": "get zipfile member"
                    },
                    "name": "member",
                    "in": "query"
                },
                {
                    "description": "feature flag for view/download",
                    "required": false,
                    "schema":
                    {
                        "title": "View",
                        "type": "boolean",
                        "description": "feature flag for view/download",
                        "default": false
                    },
                    "name": "view",
                    "in": "query"
                },
                {
                    "description": "file hash for comparison",
                    "required": false,
                    "schema":
                    {
                        "title": "Hash",
                        "type": "string",
                        "description": "file hash for comparison"
                    },
                    "name": "hash",
                    "in": "query"
                },
                {
                    "description": "byte ranges to return",
                    "required": false,
                    "schema":
                    {
                        "title": "Range",
                        "type": "string",
                        "description": "byte ranges to return"
                    },
                    "name": "range",
                    "in": "header"
                },
                {
                    "description": "redirect header",
                    "required": false,
                    "schema":
                    {
                        "title": "X-Accept-Feature",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "description": "redirect header"
                    },
                    "name": "x-accept-feature",
                    "in": "header"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Download File Api Acquisitions  Cid  Files  Filename  Get",
                                    "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/DownloadTicketStub"
                                    },
                                    {
                                        "$ref": "#/components/schemas/ZipfileInfo"
                                    }]
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put":
            {
                "tags": ["acquisitions"],
                "summary": "Modify a file in an acquisition",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "modify_acquisition_file",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "type": "string"
                    },
                    "name": "filename",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/FileModifyInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/File"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post":
            {
                "tags": ["acquisitions"],
                "summary": "Replace a file in an acquisition",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "replace_acquisition_file",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "type": "string"
                    },
                    "name": "filename",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/FileInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/File"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete":
            {
                "tags": ["acquisitions"],
                "summary": "Delete a file from an acquisition",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "delete_acquisition_file",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "type": "string"
                    },
                    "name": "filename",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/acquisitions/{cid}/files/{filename}/info":
        {
            "get":
            {
                "tags": ["acquisitions"],
                "summary": "Get file info from an acquisition",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "get_acquisition_file_info",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "type": "string"
                    },
                    "name": "filename",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Input Fallback",
                        "type": "boolean",
                        "default": true
                    },
                    "name": "input_fallback",
                    "in": "query"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/File"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post":
            {
                "tags": ["acquisitions"],
                "summary": "Modify file info for an acquisition",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "modify_acquisition_file_info",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "type": "string"
                    },
                    "name": "filename",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/Info"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Acquisitions  Cid  Files  Filename  Info Post",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/acquisitions/{cid}/inputs/{filename}/info":
        {
            "get":
            {
                "tags": ["acquisitions"],
                "summary": "Get file info from an acquisition",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "get_acquisition_file_info",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "type": "string"
                    },
                    "name": "filename",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Input Fallback",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "input_fallback",
                    "in": "query"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/File"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/acquisitions/{cid}/files/{filename}/classification":
        {
            "post":
            {
                "tags": ["acquisitions"],
                "summary": "Modify file classification for an acquisition",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "modify_acquisition_file_classification",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "type": "string"
                    },
                    "name": "filename",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/FileClassification"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Acquisitions  Cid  Files  Filename  Classification Post",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/acquisitions/{cid}/notes":
        {
            "post":
            {
                "tags": ["acquisitions"],
                "summary": "Add a note to an acquisition",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "add_acquisition_note",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/NoteInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/Note"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/acquisitions/{cid}/notes/{note_id}":
        {
            "get":
            {
                "tags": ["acquisitions"],
                "summary": "Get a note for an acquisition",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "get_acquisition_note",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Note Id",
                        "type": "string"
                    },
                    "name": "note_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/Note"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put":
            {
                "tags": ["acquisitions"],
                "summary": "Modify a note for an acquisition",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "modify_acquisition_note",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Note Id",
                        "type": "string"
                    },
                    "name": "note_id",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/NoteInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Acquisitions  Cid  Notes  Note Id  Put",
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete":
            {
                "tags": ["acquisitions"],
                "summary": "Delete a note from an acquisition",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "delete_acquisition_note",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Note Id",
                        "type": "string"
                    },
                    "name": "note_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/acquisitions/{cid}/tags":
        {
            "post":
            {
                "tags": ["acquisitions"],
                "summary": "Add a tag to acquisition",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "add_acquisition_tag",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/Tag"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Acquisitions  Cid  Tags Post",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/acquisitions/{cid}/tags/{value}":
        {
            "get":
            {
                "tags": ["acquisitions"],
                "summary": "Get a tag from acquisition",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "get_acquisition_tag",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Value",
                        "pattern": "^[^/]{1,32}$",
                        "type": "string"
                    },
                    "name": "value",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Acquisitions  Cid  Tags  Value  Get",
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put":
            {
                "tags": ["acquisitions"],
                "summary": "Modify a tag for acquisition",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "rename_acquisition_tag",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Value",
                        "pattern": "^[^/]{1,32}$",
                        "type": "string"
                    },
                    "name": "value",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/Tag"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Acquisitions  Cid  Tags  Value  Put",
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete":
            {
                "tags": ["acquisitions"],
                "summary": "Delete a tag from acquisition",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "delete_acquisition_tag",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Value",
                        "type": "string"
                    },
                    "name": "value",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/acquisitions/{cid}/info":
        {
            "post":
            {
                "tags": ["acquisitions"],
                "summary": "Add/modify info for acquisition",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "modify_acquisition_info",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/Info"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Acquisitions  Cid  Info Post",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/analyses/{analysis_id}":
        {
            "get":
            {
                "tags": ["analyses"],
                "summary": "Get By Id",
                "operationId": "get_analysis",
                "parameters": [
                {
                    "description": "24-char hex analysis id",
                    "required": true,
                    "schema":
                    {
                        "title": "Analysis Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex analysis id"
                    },
                    "name": "analysis_id",
                    "in": "path"
                },
                {
                    "description": "expand job info",
                    "required": false,
                    "schema":
                    {
                        "title": "Inflate Job",
                        "type": "boolean",
                        "description": "expand job info",
                        "default": false
                    },
                    "name": "inflate_job",
                    "in": "query"
                },
                {
                    "description": "add name and avatar to notes",
                    "required": false,
                    "schema":
                    {
                        "title": "Join Avatars",
                        "type": "boolean",
                        "description": "add name and avatar to notes",
                        "default": false
                    },
                    "name": "join_avatars",
                    "in": "query"
                },
                {
                    "description": "join=origins -> merge file origins",
                    "required": false,
                    "schema":
                    {
                        "title": "Join",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "description": "join=origins -> merge file origins"
                    },
                    "name": "join",
                    "in": "query"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put":
            {
                "tags": ["analyses"],
                "summary": "Modify",
                "description": "Modify an analysis for a container.\nParameters\n    analysis_id (str)   24-char hex analysis id\n    analysis_modify (AnalysisModifyInput)   fields to modify\nReturns",
                "operationId": "modify_analysis",
                "parameters": [
                {
                    "description": "24-char hex analysis id",
                    "required": true,
                    "schema":
                    {
                        "title": "Analysis Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex analysis id"
                    },
                    "name": "analysis_id",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "title": "Analysis Modify",
                                "allOf": [
                                {
                                    "$ref": "#/components/schemas/AnalysisModifyInput"
                                }],
                                "description": "new analysis fields"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete":
            {
                "tags": ["analyses"],
                "summary": "Delete",
                "description": "Delete an analysis for a container.\nParameters\n    analysis_id (str)   24-char hex analysis id\nReturns\n    None for success",
                "operationId": "delete_analysis",
                "parameters": [
                {
                    "description": "24-char hex analysis id",
                    "required": true,
                    "schema":
                    {
                        "title": "Analysis Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex analysis id"
                    },
                    "name": "analysis_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/analyses/{analysis_id}/inputs/{filename}":
        {
            "get":
            {
                "tags": ["analyses"],
                "summary": "Get Input File",
                "description": "Return an analysis input file or other info.\nParameters\n    analysis_id (str)   24-char hex analysis id\n    filename (str)      file to return\n    ticket (str)        24-char hex ticket id; if empty, request ticket stub\n    info (bool)         return input zipfile info\n    member (str)        return single member file of input zipfile\n    view (bool)         stream file return instead of downloading\n    range (str)         byte ranges to return\n    x_accept_feature (str)  redirect to signed url if \"Safe-Redirect\" is present\nReturns\n    ticket stub, redirect, zipfile info, zipfile member, or file data",
                "operationId": "download_input_from_analysis",
                "parameters": [
                {
                    "description": "24-char hex analysis id",
                    "required": true,
                    "schema":
                    {
                        "title": "Analysis Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex analysis id"
                    },
                    "name": "analysis_id",
                    "in": "path"
                },
                {
                    "description": "input filename",
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "pattern": ".+",
                        "type": "string",
                        "description": "input filename"
                    },
                    "name": "filename",
                    "in": "path"
                },
                {
                    "description": "24-char hex ticket id",
                    "required": false,
                    "schema":
                    {
                        "title": "Ticket",
                        "type": "string",
                        "description": "24-char hex ticket id"
                    },
                    "name": "ticket",
                    "in": "query"
                },
                {
                    "description": "get file info only",
                    "required": false,
                    "schema":
                    {
                        "title": "Info",
                        "type": "boolean",
                        "description": "get file info only",
                        "default": false
                    },
                    "name": "info",
                    "in": "query"
                },
                {
                    "description": "get zipfile member",
                    "required": false,
                    "schema":
                    {
                        "title": "Member",
                        "pattern": ".+",
                        "type": "string",
                        "description": "get zipfile member"
                    },
                    "name": "member",
                    "in": "query"
                },
                {
                    "description": "feature flag for view/download",
                    "required": false,
                    "schema":
                    {
                        "title": "View",
                        "type": "boolean",
                        "description": "feature flag for view/download",
                        "default": false
                    },
                    "name": "view",
                    "in": "query"
                },
                {
                    "description": "byte ranges to return",
                    "required": false,
                    "schema":
                    {
                        "title": "Range",
                        "type": "string",
                        "description": "byte ranges to return"
                    },
                    "name": "range",
                    "in": "header"
                },
                {
                    "description": "redirect header",
                    "required": false,
                    "schema":
                    {
                        "title": "X-Accept-Feature",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "description": "redirect header"
                    },
                    "name": "x-accept-feature",
                    "in": "header"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/analyses/{analysis_id}/files":
        {
            "post":
            {
                "tags": ["analyses"],
                "summary": "Create Output File",
                "description": "Add an output file to an analysis.\nParameters:\n    analysis_id:\n    file: uploaded file contents\n    auth_session:\nReturns:\n    File object",
                "operationId": "upload_output_to_analysis",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Analysis Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "analysis_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/analyses/{analysis_id}/files/{filename}":
        {
            "get":
            {
                "tags": ["analyses"],
                "summary": "Get Output File",
                "description": "Return an analysis output file or other info.\nParameters\n    analysis_id (str)   24-char hex analysis id\n    filename (str)      file to return\n    ticket (str)        24-char hex ticket id; if empty, request ticket stub\n    info (bool)         return input zipfile info\n    member (str)        return single member file of input zipfile\n    view (bool)         stream file return instead of downloading\n    range (str)         byte ranges to return\n    x_accept_feature (str)  redirect to signed url if \"Safe-Redirect\" is present\nReturns\n    ticket stub, redirect, zipfile info, zipfile member, or file data",
                "operationId": "download_output_from_analysis",
                "parameters": [
                {
                    "description": "24-char hex analysis id",
                    "required": true,
                    "schema":
                    {
                        "title": "Analysis Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex analysis id"
                    },
                    "name": "analysis_id",
                    "in": "path"
                },
                {
                    "description": "output file name",
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "pattern": ".+",
                        "type": "string",
                        "description": "output file name"
                    },
                    "name": "filename",
                    "in": "path"
                },
                {
                    "description": "24-char hex ticket id",
                    "required": false,
                    "schema":
                    {
                        "title": "Ticket",
                        "type": "string",
                        "description": "24-char hex ticket id"
                    },
                    "name": "ticket",
                    "in": "query"
                },
                {
                    "description": "get file info only",
                    "required": false,
                    "schema":
                    {
                        "title": "Info",
                        "type": "boolean",
                        "description": "get file info only",
                        "default": false
                    },
                    "name": "info",
                    "in": "query"
                },
                {
                    "description": "get zipfile member",
                    "required": false,
                    "schema":
                    {
                        "title": "Member",
                        "pattern": ".+",
                        "type": "string",
                        "description": "get zipfile member"
                    },
                    "name": "member",
                    "in": "query"
                },
                {
                    "description": "feature flag for view/download",
                    "required": false,
                    "schema":
                    {
                        "title": "View",
                        "type": "boolean",
                        "description": "feature flag for view/download",
                        "default": false
                    },
                    "name": "view",
                    "in": "query"
                },
                {
                    "description": "byte ranges to return",
                    "required": false,
                    "schema":
                    {
                        "title": "Range",
                        "type": "string",
                        "description": "byte ranges to return"
                    },
                    "name": "range",
                    "in": "header"
                },
                {
                    "description": "redirect header",
                    "required": false,
                    "schema":
                    {
                        "title": "X-Accept-Feature",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "description": "redirect header"
                    },
                    "name": "x-accept-feature",
                    "in": "header"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/analyses/{analysis_id}/files/{filename}/info":
        {
            "get":
            {
                "tags": ["analyses"],
                "summary": "Get File",
                "operationId": "get_analyses_file_info",
                "parameters": [
                {
                    "description": "24-char hex analysis id",
                    "required": true,
                    "schema":
                    {
                        "title": "Analysis Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex analysis id"
                    },
                    "name": "analysis_id",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "pattern": ".+",
                        "type": "string"
                    },
                    "name": "filename",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/File"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post":
            {
                "tags": ["analyses"],
                "summary": "Modify File Info",
                "operationId": "modify_analyses_file_info",
                "parameters": [
                {
                    "description": "24-char hex analysis id",
                    "required": true,
                    "schema":
                    {
                        "title": "Analysis Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex analysis id"
                    },
                    "name": "analysis_id",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "pattern": ".+",
                        "type": "string"
                    },
                    "name": "filename",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/Info"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/File"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/analyses/{analysis_id}/inputs/{filename}/info":
        {
            "get":
            {
                "tags": ["analyses"],
                "summary": "Get Input File",
                "operationId": "get_analysis_input_info",
                "parameters": [
                {
                    "description": "24-char hex analysis id",
                    "required": true,
                    "schema":
                    {
                        "title": "Analysis Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex analysis id"
                    },
                    "name": "analysis_id",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "pattern": ".+",
                        "type": "string"
                    },
                    "name": "filename",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/File"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/analyses/{analysis_id}/notes":
        {
            "post":
            {
                "tags": ["analyses"],
                "summary": "Create Note",
                "description": "Add a note to an analysis of a container.\nParameters\n    analysis_id (str)   24-char hex analysis id, if ctype is another container\n    note (NoteInput)         note contents\n    auth_session AuthSeesion\nReturns\n    Created Note",
                "operationId": "add_analysis_note",
                "parameters": [
                {
                    "description": "24-char hex analysis id",
                    "required": true,
                    "schema":
                    {
                        "title": "Analysis Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex analysis id"
                    },
                    "name": "analysis_id",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "title": "Note",
                                "allOf": [
                                {
                                    "$ref": "#/components/schemas/NoteInput"
                                }],
                                "description": "note content"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/analyses/{analysis_id}/notes/{note_id}":
        {
            "get":
            {
                "tags": ["analyses"],
                "summary": "Get Note By Id",
                "description": "Get a note of an analysis.\nParameters\n    analysis_id (str)   24-char hex analysis id\n    note_id (str)       24-char hex note id\nReturns",
                "operationId": "get_analysis_note",
                "parameters": [
                {
                    "description": "24-char hex analysis id",
                    "required": true,
                    "schema":
                    {
                        "title": "Analysis Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex analysis id"
                    },
                    "name": "analysis_id",
                    "in": "path"
                },
                {
                    "description": "24-char hex note id",
                    "required": true,
                    "schema":
                    {
                        "title": "Note Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex note id"
                    },
                    "name": "note_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put":
            {
                "tags": ["analyses"],
                "summary": "Modify Note",
                "description": "Nodify a note of an analysis.\nParameters\n    analysis_id (str)   24-char hex analysis id\n    note_id (str)       24-char hex note id\n    note                New value\nReturns",
                "operationId": "modify_analysis_note",
                "parameters": [
                {
                    "description": "24-char hex analysis id",
                    "required": true,
                    "schema":
                    {
                        "title": "Analysis Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex analysis id"
                    },
                    "name": "analysis_id",
                    "in": "path"
                },
                {
                    "description": "24-char hex note id",
                    "required": true,
                    "schema":
                    {
                        "title": "Note Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex note id"
                    },
                    "name": "note_id",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "title": "Note",
                                "allOf": [
                                {
                                    "$ref": "#/components/schemas/NoteInput"
                                }],
                                "description": "note content"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete":
            {
                "tags": ["analyses"],
                "summary": "Delete Note",
                "description": "Delete a note of an analysis.\nParameters\n    analysis_id (str)   24-char hex analysis id\n    note_id (str)       24-char hex note id\nReturns\n    None for success",
                "operationId": "delete_analysis_note",
                "parameters": [
                {
                    "description": "24-char hex analysis id",
                    "required": true,
                    "schema":
                    {
                        "title": "Analysis Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex analysis id"
                    },
                    "name": "analysis_id",
                    "in": "path"
                },
                {
                    "description": "24-char hex note id",
                    "required": true,
                    "schema":
                    {
                        "title": "Note Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex note id"
                    },
                    "name": "note_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/analyses/{analysis_id}/tags":
        {
            "post":
            {
                "tags": ["analyses"],
                "summary": "Create Tag",
                "operationId": "add_analysis_tag",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Analysis Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "analysis_id",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/Tag"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/analyses/{analysis_id}/tags/{value}":
        {
            "get":
            {
                "tags": ["analyses"],
                "summary": "Get Tag",
                "operationId": "get_analysis_tag",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Analysis Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "analysis_id",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Value",
                        "type": "string"
                    },
                    "name": "value",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put":
            {
                "tags": ["analyses"],
                "summary": "Modify Tag",
                "operationId": "rename_analysis_tag",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Analysis Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "analysis_id",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Value",
                        "type": "string"
                    },
                    "name": "value",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/Tag"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete":
            {
                "tags": ["analyses"],
                "summary": "Delete Tag",
                "operationId": "delete_analysis_tag",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Analysis Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "analysis_id",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Value",
                        "type": "string"
                    },
                    "name": "value",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/analyses/{analysis_id}/info":
        {
            "get":
            {
                "tags": ["analyses"],
                "summary": "Get Info",
                "operationId": "get_info_api_analyses__analysis_id__info_get",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Analysis Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "analysis_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "deprecated": true
            },
            "post":
            {
                "tags": ["analyses"],
                "summary": "Modify Info",
                "operationId": "modify_analysis_info",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Analysis Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "analysis_id",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/Info"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/login":
        {
            "post":
            {
                "tags": ["auth"],
                "summary": "Login",
                "operationId": "login_api_login_post",
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "title": "Auth",
                                "anyOf": [
                                {
                                    "$ref": "#/components/schemas/GoogleLogin"
                                },
                                {
                                    "$ref": "#/components/schemas/LdapLogin"
                                }]
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/login/basic":
        {
            "post":
            {
                "tags": ["auth"],
                "summary": "Login Basic",
                "operationId": "login_basic_api_login_basic_post",
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/BasicLogin"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/login/saml":
        {
            "get":
            {
                "tags": ["auth"],
                "summary": "Login Saml",
                "operationId": "login_saml_api_login_saml_get",
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/status":
        {
            "get":
            {
                "tags": ["auth"],
                "summary": "Auth Status",
                "operationId": "auth_status_api_auth_status_get",
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    }
                }
            }
        },
        "/api/logout":
        {
            "post":
            {
                "tags": ["auth"],
                "summary": "Logout",
                "description": "Log out",
                "operationId": "logout_api_logout_post",
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    }
                }
            }
        },
        "/api/bulk/move/sessions":
        {
            "post":
            {
                "tags": ["bulk"],
                "summary": "Move Sessions",
                "description": "(post handlers.bulkhandler.bulk)",
                "operationId": "bulk_move_sessions",
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/BulkMoveInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Move Sessions Api Bulk Move Sessions Post",
                                    "type": "array",
                                    "items":
                                    {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/bulk/move/subjects":
        {
            "post":
            {
                "tags": ["bulk"],
                "summary": "Move Subjects",
                "description": "(post handlers.bulkhandler.bulk)",
                "operationId": "bulk_move_subjects",
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/BulkMoveInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "deprecated": true
            }
        },
        "/api/bulk/delete/{cname}":
        {
            "post":
            {
                "tags": ["bulk"],
                "summary": " Delete",
                "description": "See '/move/sessions'",
                "operationId": "_delete_api_bulk_delete__cname__post",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cname",
                        "type": "string"
                    },
                    "name": "cname",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "deprecated": true
            }
        },
        "/api/bulk/copy/{cname}":
        {
            "post":
            {
                "tags": ["bulk"],
                "summary": " Copy",
                "description": "See '/move/sessions'",
                "operationId": "_copy_api_bulk_copy__cname__post",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cname",
                        "type": "string"
                    },
                    "name": "cname",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "deprecated": true
            }
        },
        "/api/batch":
        {
            "get":
            {
                "tags": ["batch"],
                "summary": "Get All",
                "description": "(get jobs.handlers.BatchHandler.get_all)",
                "operationId": "get_all_api_batch_get",
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    }
                }
            },
            "post":
            {
                "tags": ["batch"],
                "summary": "Create",
                "description": "(post jobs.handlers.BatchHandler.post)",
                "operationId": "create_api_batch_post",
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/ClassicBatchProposalInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/ClassicBatchProposalOutput"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/batch/jobs":
        {
            "post":
            {
                "tags": ["batch"],
                "summary": "Create With Jobs",
                "description": "(post jobs.handlers.BatchHandler.post_with_jobs)",
                "operationId": "create_with_jobs_api_batch_jobs_post",
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/PremadeJobsBatchProposalInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/batch/{batch_id}":
        {
            "get":
            {
                "tags": ["batch"],
                "summary": "Get By Id",
                "description": "(get jobs.handlers.BatchHandler.get)",
                "operationId": "get_by_id_api_batch__batch_id__get",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Batch Id",
                        "type": "string"
                    },
                    "name": "batch_id",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Jobs",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "jobs",
                    "in": "query"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/batch/{batch_id}/run":
        {
            "post":
            {
                "tags": ["batch"],
                "summary": "Run",
                "description": "(post jobs.handlers.BatchHandler.run)",
                "operationId": "run_api_batch__batch_id__run_post",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Batch Id",
                        "type": "string"
                    },
                    "name": "batch_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/batch/{batch_id}/cancel":
        {
            "post":
            {
                "tags": ["batch"],
                "summary": "Cancel",
                "description": "(post jobs.handlers.BatchHandler.cancel)",
                "operationId": "cancel_api_batch__batch_id__cancel_post",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Batch Id",
                        "type": "string"
                    },
                    "name": "batch_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/callbacks/virus-scan/{cname}/{cid}/files/{name}":
        {
            "post":
            {
                "tags": ["callbacks"],
                "summary": "Callback url to send the virus scan result of a file.",
                "description": "This endpoint accepts the result from the anti-virus service. NOTE: this endpoint only can be used via a signed url.",
                "operationId": "callback_virus_scan",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cname",
                        "pattern": "groups|projects|subjects|sessions|acquisitions|collections|analyses",
                        "type": "string"
                    },
                    "name": "cname",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Name",
                        "type": "string"
                    },
                    "name": "name",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/VirusScan"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Virus Scan Api Callbacks Virus Scan  Cname   Cid  Files  Name  Post",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/collections":
        {
            "get":
            {
                "tags": ["collections"],
                "summary": "List all collections",
                "description": "(handler.containerhandler.ContainerHandler.cont_list)\n(get handlers.collectionshandler.CollectionsHandler.get_all)",
                "operationId": "get_all_collections",
                "parameters": [
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Filter",
                        "type": "string"
                    },
                    "name": "filter",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Sort",
                        "type": "string"
                    },
                    "name": "sort",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Limit",
                        "type": "integer"
                    },
                    "name": "limit",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Skip",
                        "type": "integer"
                    },
                    "name": "skip",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Page",
                        "type": "integer"
                    },
                    "name": "page",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "After Id",
                        "type": "string"
                    },
                    "name": "after_id",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Exhaustive",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "exhaustive",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Stats",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "stats",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "X-Accept-Feature",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    },
                    "name": "x-accept-feature",
                    "in": "header"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Find All Api Collections Get",
                                    "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/Page"
                                    },
                                    {
                                        "type": "array",
                                        "items":
                                        {
                                            "$ref": "#/components/schemas/CollectionWithStats"
                                        }
                                    },
                                    {
                                        "type": "array",
                                        "items":
                                        {
                                            "$ref": "#/components/schemas/Collection"
                                        }
                                    }]
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post":
            {
                "tags": ["collections"],
                "summary": "Create a collection",
                "description": "(handler.containerhandler.ContainerHandler.post)",
                "operationId": "add_collection",
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/CollectionInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/InsertedId"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/collections/{collection_id}":
        {
            "get":
            {
                "tags": ["collections"],
                "summary": "Retrieve a single collection",
                "description": "(handler.containerhandler.ContainerHandler.get)\n(get handlers.collectionshandler.CollectionsHandler.get)",
                "operationId": "get_collection",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Collection Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "collection_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/Collection"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put":
            {
                "tags": ["collections"],
                "summary": "Update a collection and its contents",
                "description": "(handler.containerhandler.ContainerHandler.put)\n(put handlers.collectionshandler.CollectionsHandler.put)",
                "operationId": "modify_collection",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Collection Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "collection_id",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/CollectionInputWithContents"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/ModifiedResult"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete":
            {
                "tags": ["collections"],
                "summary": "Delete a collection",
                "description": "(handler.containerhandler.ContainerHandler.delete)\n(delete handlers.collectionshandler.CollectionsHandler.delete)",
                "operationId": "delete_collection",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Collection Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "collection_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/DeletedResult"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/collections/curators":
        {
            "get":
            {
                "tags": ["collections"],
                "summary": "List all curators of collections",
                "operationId": "get_all_collections_curators",
                "parameters": [
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Filter",
                        "type": "string"
                    },
                    "name": "filter",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Sort",
                        "type": "string"
                    },
                    "name": "sort",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Limit",
                        "type": "integer"
                    },
                    "name": "limit",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Skip",
                        "type": "integer"
                    },
                    "name": "skip",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Page",
                        "type": "integer"
                    },
                    "name": "page",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "After Id",
                        "type": "string"
                    },
                    "name": "after_id",
                    "in": "query"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Get Curators Api Collections Curators Get",
                                    "type": "array",
                                    "items":
                                    {
                                        "$ref": "#/components/schemas/Curator"
                                    }
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/collections/{collection_id}/sessions":
        {
            "get":
            {
                "tags": ["collections"],
                "summary": "List sessions in a collection",
                "description": "(get handlers.collectionshandler.CollectionsHandler.get_sessions)",
                "operationId": "get_collection_sessions",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Collection Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "collection_id",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Filter",
                        "type": "string"
                    },
                    "name": "filter",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Sort",
                        "type": "string"
                    },
                    "name": "sort",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Limit",
                        "type": "integer"
                    },
                    "name": "limit",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Skip",
                        "type": "integer"
                    },
                    "name": "skip",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Page",
                        "type": "integer"
                    },
                    "name": "page",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "After Id",
                        "type": "string"
                    },
                    "name": "after_id",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "X-Accept-Feature",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    },
                    "name": "x-accept-feature",
                    "in": "header"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Get Sessions Api Collections  Collection Id  Sessions Get",
                                    "anyOf": [
                                    {
                                        "type": "array",
                                        "items":
                                        {
                                            "$ref": "#/components/schemas/Session"
                                        }
                                    },
                                    {
                                        "$ref": "#/components/schemas/Page"
                                    }]
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/collections/{collection_id}/acquisitions":
        {
            "get":
            {
                "tags": ["collections"],
                "summary": "List acquisitions in a collection",
                "description": "(get handlers.collectionshandler.CollectionsHandler.get_acquisitions)",
                "operationId": "get_collection_acquisitions",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Collection Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "collection_id",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Filter",
                        "type": "string"
                    },
                    "name": "filter",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Sort",
                        "type": "string"
                    },
                    "name": "sort",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Limit",
                        "type": "integer"
                    },
                    "name": "limit",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Skip",
                        "type": "integer"
                    },
                    "name": "skip",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Page",
                        "type": "integer"
                    },
                    "name": "page",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "After Id",
                        "type": "string"
                    },
                    "name": "after_id",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Session",
                        "type": "string"
                    },
                    "name": "session",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "X-Accept-Feature",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    },
                    "name": "x-accept-feature",
                    "in": "header"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Get Acquisitions Api Collections  Collection Id  Acquisitions Get",
                                    "anyOf": [
                                    {
                                        "type": "array",
                                        "items":
                                        {
                                            "$ref": "#/components/schemas/Acquisition"
                                        }
                                    },
                                    {
                                        "$ref": "#/components/schemas/Page"
                                    }]
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/collections/{collection_id}/permissions":
        {
            "post":
            {
                "tags": ["collections"],
                "summary": "Add a permission",
                "description": "handlers.collectionshandler.CollectionsHandler.post",
                "operationId": "add_collection_permission",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Collection Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "collection_id",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/AccessPermission"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/AccessPermissionOutput"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/collections/{collection_id}/permissions/{user_id}":
        {
            "get":
            {
                "tags": ["collections"],
                "summary": "List a users permission for this group",
                "description": "handlers.collectionshandler.CollectionsHandler.post",
                "operationId": "get_collection_user_permission",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Collection Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "collection_id",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "User Id",
                        "pattern": "[0-9a-zA-Z.@_-]*",
                        "type": "string"
                    },
                    "name": "user_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/AccessPermissionOutput"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put":
            {
                "tags": ["collections"],
                "summary": "Update a users permission for this group",
                "description": "handlers.collectionshandler.CollectionsHandler.post",
                "operationId": "modify_collection_user_permission",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Collection Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "collection_id",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "User Id",
                        "pattern": "[0-9a-zA-Z.@_-]*",
                        "type": "string"
                    },
                    "name": "user_id",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/AccessPermissionUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/AccessPermissionOutput"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete":
            {
                "tags": ["collections"],
                "summary": "Delete a permission",
                "description": "handlers.collectionshandler.CollectionsHandler.post",
                "operationId": "delete_collection_user_permission",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Collection Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "collection_id",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "User Id",
                        "pattern": "[0-9a-zA-Z.@_-]*",
                        "type": "string"
                    },
                    "name": "user_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/collections/{cid}/analyses":
        {
            "get":
            {
                "tags": ["collections"],
                "summary": "Get all analyses for a collection",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "get_collection_analyses",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Filter",
                        "type": "string",
                        "default": []
                    },
                    "name": "filter",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Sort",
                        "type": "string"
                    },
                    "name": "sort",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Limit",
                        "type": "integer",
                        "default": 100
                    },
                    "name": "limit",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Skip",
                        "type": "integer",
                        "default": 0
                    },
                    "name": "skip",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Page",
                        "type": "integer"
                    },
                    "name": "page",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "After Id",
                        "type": "string"
                    },
                    "name": "after_id",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Inflate Job",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "inflate_job",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Join Avatars",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "join_avatars",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Join",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "name": "join",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "X-Accept-Feature",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    },
                    "name": "x-accept-feature",
                    "in": "header"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Collections  Cid  Analyses Get",
                                    "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/Page"
                                    },
                                    {
                                        "type": "array",
                                        "items":
                                        {
                                            "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/AnalysisListOutput"
                                            },
                                            {
                                                "$ref": "#/components/schemas/AnalysisListOutputInflatedJob"
                                            }]
                                        }
                                    }]
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post":
            {
                "tags": ["collections"],
                "summary": "Add an analysis to a collection",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "add_collection_analysis",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "title": "Analysis",
                                "anyOf": [
                                {
                                    "$ref": "#/components/schemas/AdhocAnalysisInput"
                                },
                                {
                                    "$ref": "#/components/schemas/JobAnalysisInput"
                                }]
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/InsertedId"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/collections/{cid}/{sub_cname}/analyses":
        {
            "get":
            {
                "tags": ["collections"],
                "summary": "Get nested analyses from a collection",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "get_collection_sub_analyses",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "$ref": "#/components/schemas/SubContainerType"
                    },
                    "name": "sub_cname",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Filter",
                        "type": "string",
                        "default": []
                    },
                    "name": "filter",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Sort",
                        "type": "string"
                    },
                    "name": "sort",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Limit",
                        "type": "integer",
                        "default": 100
                    },
                    "name": "limit",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Skip",
                        "type": "integer",
                        "default": 0
                    },
                    "name": "skip",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Page",
                        "type": "integer"
                    },
                    "name": "page",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "After Id",
                        "type": "string"
                    },
                    "name": "after_id",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Inflate Job",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "inflate_job",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Join Avatars",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "join_avatars",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Join",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "name": "join",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "X-Accept-Feature",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    },
                    "name": "x-accept-feature",
                    "in": "header"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Collections  Cid   Sub Cname  Analyses Get",
                                    "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/Page"
                                    },
                                    {
                                        "type": "array",
                                        "items":
                                        {
                                            "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/AnalysisListOutput"
                                            },
                                            {
                                                "$ref": "#/components/schemas/AnalysisListOutputInflatedJob"
                                            }]
                                        }
                                    }]
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/collections/{cid}/analyses/{analysis_id}":
        {
            "get":
            {
                "tags": ["collections"],
                "summary": "Get an analysis from a collection",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "get_collection_analysis",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Analysis Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "analysis_id",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Inflate Job",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "inflate_job",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Join Avatars",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "join_avatars",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Join",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "name": "join",
                    "in": "query"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Collections  Cid  Analyses  Analysis Id  Get",
                                    "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/AnalysisOutputInflatedJob"
                                    },
                                    {
                                        "$ref": "#/components/schemas/AnalysisOutput"
                                    }]
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put":
            {
                "tags": ["collections"],
                "summary": "Modify an analysis for a collection",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "modify_collection_analysis",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Analysis Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "analysis_id",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/AnalysisModifyInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/ModifiedResult"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete":
            {
                "tags": ["collections"],
                "summary": "Delete an analysis from a collection",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "delete_collection_analysis",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Analysis Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "analysis_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/DeletedResult"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/collections/{cid}/analyses/{analysis_id}/inputs/{filename}":
        {
            "get":
            {
                "tags": ["collections"],
                "summary": "Download an analysis input file from a collection",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "download_input_from_collection_analysis",
                "parameters": [
                {
                    "description": "24-char hex id",
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex id"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "description": "24-char hex analysis id",
                    "required": true,
                    "schema":
                    {
                        "title": "Analysis Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex analysis id"
                    },
                    "name": "analysis_id",
                    "in": "path"
                },
                {
                    "description": "input filename",
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "pattern": ".+",
                        "type": "string",
                        "description": "input filename"
                    },
                    "name": "filename",
                    "in": "path"
                },
                {
                    "description": "24-char hex ticket id",
                    "required": false,
                    "schema":
                    {
                        "title": "Ticket",
                        "type": "string",
                        "description": "24-char hex ticket id"
                    },
                    "name": "ticket",
                    "in": "query"
                },
                {
                    "description": "get file info only",
                    "required": false,
                    "schema":
                    {
                        "title": "Info",
                        "type": "boolean",
                        "description": "get file info only",
                        "default": false
                    },
                    "name": "info",
                    "in": "query"
                },
                {
                    "description": "get zipfile member",
                    "required": false,
                    "schema":
                    {
                        "title": "Member",
                        "pattern": ".+",
                        "type": "string",
                        "description": "get zipfile member"
                    },
                    "name": "member",
                    "in": "query"
                },
                {
                    "description": "feature flag for view/download",
                    "required": false,
                    "schema":
                    {
                        "title": "View",
                        "type": "boolean",
                        "description": "feature flag for view/download",
                        "default": false
                    },
                    "name": "view",
                    "in": "query"
                },
                {
                    "description": "byte ranges to return",
                    "required": false,
                    "schema":
                    {
                        "title": "Range",
                        "type": "string",
                        "description": "byte ranges to return"
                    },
                    "name": "range",
                    "in": "header"
                },
                {
                    "description": "redirect header",
                    "required": false,
                    "schema":
                    {
                        "title": "X-Accept-Feature",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "description": "redirect header"
                    },
                    "name": "x-accept-feature",
                    "in": "header"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Collections  Cid  Analyses  Analysis Id  Inputs  Filename  Get",
                                    "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/DownloadTicketStub"
                                    },
                                    {
                                        "$ref": "#/components/schemas/ZipfileInfo"
                                    }]
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/collections/{cid}/analyses/{analysis_id}/files/{filename}":
        {
            "get":
            {
                "tags": ["collections"],
                "summary": "Download an analysis output file from a collection",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "download_output_from_collection_analysis",
                "parameters": [
                {
                    "description": "24-char hex id",
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex id"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "description": "24-char hex analysis id",
                    "required": true,
                    "schema":
                    {
                        "title": "Analysis Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex analysis id"
                    },
                    "name": "analysis_id",
                    "in": "path"
                },
                {
                    "description": "output file name",
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "pattern": ".+",
                        "type": "string",
                        "description": "output file name"
                    },
                    "name": "filename",
                    "in": "path"
                },
                {
                    "description": "24-char hex ticket id",
                    "required": false,
                    "schema":
                    {
                        "title": "Ticket",
                        "type": "string",
                        "description": "24-char hex ticket id"
                    },
                    "name": "ticket",
                    "in": "query"
                },
                {
                    "description": "get file info only",
                    "required": false,
                    "schema":
                    {
                        "title": "Info",
                        "type": "boolean",
                        "description": "get file info only",
                        "default": false
                    },
                    "name": "info",
                    "in": "query"
                },
                {
                    "description": "get zipfile member",
                    "required": false,
                    "schema":
                    {
                        "title": "Member",
                        "pattern": ".+",
                        "type": "string",
                        "description": "get zipfile member"
                    },
                    "name": "member",
                    "in": "query"
                },
                {
                    "description": "feature flag for view/download",
                    "required": false,
                    "schema":
                    {
                        "title": "View",
                        "type": "boolean",
                        "description": "feature flag for view/download",
                        "default": false
                    },
                    "name": "view",
                    "in": "query"
                },
                {
                    "description": "byte ranges to return",
                    "required": false,
                    "schema":
                    {
                        "title": "Range",
                        "type": "string",
                        "description": "byte ranges to return"
                    },
                    "name": "range",
                    "in": "header"
                },
                {
                    "description": "redirect header",
                    "required": false,
                    "schema":
                    {
                        "title": "X-Accept-Feature",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "description": "redirect header"
                    },
                    "name": "x-accept-feature",
                    "in": "header"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Collections  Cid  Analyses  Analysis Id  Files  Filename  Get",
                                    "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/DownloadTicketStub"
                                    },
                                    {
                                        "$ref": "#/components/schemas/ZipfileInfo"
                                    }]
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/collections/{cid}/analyses/{analysis_id}/files":
        {
            "post":
            {
                "tags": ["collections"],
                "summary": "Upload an analysis output file to a collection",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "upload_output_to_collection_analysis",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Analysis Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "analysis_id",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "multipart/form-data":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/Body_partial_api_collections__cid__analyses__analysis_id__files_post"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Collections  Cid  Analyses  Analysis Id  Files Post",
                                    "type": "array",
                                    "items":
                                    {
                                        "$ref": "#/components/schemas/File"
                                    }
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/collections/{cid}/analyses/{analysis_id}/files/{filename}/info":
        {
            "get":
            {
                "tags": ["collections"],
                "summary": "Get file info from a collection",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "get_collection_file_info",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "type": "string"
                    },
                    "name": "filename",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Input Fallback",
                        "type": "boolean",
                        "default": true
                    },
                    "name": "input_fallback",
                    "in": "query"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/File"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/collections/{cid}/analyses/{analysis_id}/inputs/{filename}/info":
        {
            "get":
            {
                "tags": ["collections"],
                "summary": "Get file info from a collection",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "get_collection_file_info",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "type": "string"
                    },
                    "name": "filename",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Input Fallback",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "input_fallback",
                    "in": "query"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/File"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/collections/{cid}/analyses/{analysis_id}/notes":
        {
            "post":
            {
                "tags": ["collections"],
                "summary": "Add a note to a collection",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "add_collection_analysis_note",
                "parameters": [
                {
                    "description": "24-char hex id",
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex id"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "description": "24-char hex analysis id",
                    "required": true,
                    "schema":
                    {
                        "title": "Analysis Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex analysis id"
                    },
                    "name": "analysis_id",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "title": "Note",
                                "allOf": [
                                {
                                    "$ref": "#/components/schemas/NoteInput"
                                }],
                                "description": "note content"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/Note"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/collections/{cid}/analyses/{analysis_id}/notes/{note_id}":
        {
            "delete":
            {
                "tags": ["collections"],
                "summary": "Delete a note from a collection",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "delete_collection_analysis_note",
                "parameters": [
                {
                    "description": "24-char hex id",
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex id"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "description": "24-char hex analysis id",
                    "required": true,
                    "schema":
                    {
                        "title": "Analysis Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex analysis id"
                    },
                    "name": "analysis_id",
                    "in": "path"
                },
                {
                    "description": "24-char hex note id",
                    "required": true,
                    "schema":
                    {
                        "title": "Note Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex note id"
                    },
                    "name": "note_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/collections/{cid}/files":
        {
            "post":
            {
                "tags": ["collections"],
                "summary": "Upload a file to a collection",
                "operationId": "upload_file_to_collection",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Ticket",
                        "type": "string"
                    },
                    "name": "ticket",
                    "in": "query"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/collections/{cid}/files/{filename}":
        {
            "get":
            {
                "tags": ["collections"],
                "summary": "Download a file from a collection",
                "description": "Return an output file or other info.\nParameters\n    ctype (ContainerType)\n    cid (str)           24-char hex id\n    filename (str)      file to return\n    ticket (str)        24-char hex ticket id; if empty, request ticket stub\n    info (bool)         return input zipfile info\n    member (str)        return single member file of input zipfile\n    range (str)         byte range(s)\n    view (bool)         stream file return instead of downloading\n    hash (str)          file hash\n    range (str)         byte range(s) to return\nReturns\n    ticket stub, redirect, zipfile info, zipfile member, or file data",
                "operationId": "download_file_from_collection",
                "parameters": [
                {
                    "description": "24-char hex id",
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex id"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "description": "output file name",
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "pattern": ".+",
                        "type": "string",
                        "description": "output file name"
                    },
                    "name": "filename",
                    "in": "path"
                },
                {
                    "description": "24-char hex ticket id",
                    "required": false,
                    "schema":
                    {
                        "title": "Ticket",
                        "type": "string",
                        "description": "24-char hex ticket id"
                    },
                    "name": "ticket",
                    "in": "query"
                },
                {
                    "description": "get file info only",
                    "required": false,
                    "schema":
                    {
                        "title": "Info",
                        "type": "boolean",
                        "description": "get file info only",
                        "default": false
                    },
                    "name": "info",
                    "in": "query"
                },
                {
                    "description": "get zipfile member",
                    "required": false,
                    "schema":
                    {
                        "title": "Member",
                        "pattern": ".+",
                        "type": "string",
                        "description": "get zipfile member"
                    },
                    "name": "member",
                    "in": "query"
                },
                {
                    "description": "feature flag for view/download",
                    "required": false,
                    "schema":
                    {
                        "title": "View",
                        "type": "boolean",
                        "description": "feature flag for view/download",
                        "default": false
                    },
                    "name": "view",
                    "in": "query"
                },
                {
                    "description": "file hash for comparison",
                    "required": false,
                    "schema":
                    {
                        "title": "Hash",
                        "type": "string",
                        "description": "file hash for comparison"
                    },
                    "name": "hash",
                    "in": "query"
                },
                {
                    "description": "byte ranges to return",
                    "required": false,
                    "schema":
                    {
                        "title": "Range",
                        "type": "string",
                        "description": "byte ranges to return"
                    },
                    "name": "range",
                    "in": "header"
                },
                {
                    "description": "redirect header",
                    "required": false,
                    "schema":
                    {
                        "title": "X-Accept-Feature",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "description": "redirect header"
                    },
                    "name": "x-accept-feature",
                    "in": "header"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Download File Api Collections  Cid  Files  Filename  Get",
                                    "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/DownloadTicketStub"
                                    },
                                    {
                                        "$ref": "#/components/schemas/ZipfileInfo"
                                    }]
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put":
            {
                "tags": ["collections"],
                "summary": "Modify a file in a collection",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "modify_collection_file",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "type": "string"
                    },
                    "name": "filename",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/FileModifyInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/File"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post":
            {
                "tags": ["collections"],
                "summary": "Replace a file in a collection",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "replace_collection_file",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "type": "string"
                    },
                    "name": "filename",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/FileInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/File"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete":
            {
                "tags": ["collections"],
                "summary": "Delete a file from a collection",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "delete_collection_file",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "type": "string"
                    },
                    "name": "filename",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/collections/{cid}/files/{filename}/info":
        {
            "get":
            {
                "tags": ["collections"],
                "summary": "Get file info from a collection",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "get_collection_file_info",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "type": "string"
                    },
                    "name": "filename",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Input Fallback",
                        "type": "boolean",
                        "default": true
                    },
                    "name": "input_fallback",
                    "in": "query"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/File"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post":
            {
                "tags": ["collections"],
                "summary": "Modify file info for a collection",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "modify_collection_file_info",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "type": "string"
                    },
                    "name": "filename",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/Info"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Collections  Cid  Files  Filename  Info Post",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/collections/{cid}/inputs/{filename}/info":
        {
            "get":
            {
                "tags": ["collections"],
                "summary": "Get file info from a collection",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "get_collection_file_info",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "type": "string"
                    },
                    "name": "filename",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Input Fallback",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "input_fallback",
                    "in": "query"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/File"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/collections/{cid}/files/{filename}/classification":
        {
            "post":
            {
                "tags": ["collections"],
                "summary": "Modify file classification for a collection",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "modify_collection_file_classification",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "type": "string"
                    },
                    "name": "filename",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/FileClassification"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Collections  Cid  Files  Filename  Classification Post",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/collections/{cid}/notes":
        {
            "post":
            {
                "tags": ["collections"],
                "summary": "Add a note to a collection",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "add_collection_note",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/NoteInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/Note"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/collections/{cid}/notes/{note_id}":
        {
            "get":
            {
                "tags": ["collections"],
                "summary": "Get a note for a collection",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "get_collection_note",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Note Id",
                        "type": "string"
                    },
                    "name": "note_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/Note"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put":
            {
                "tags": ["collections"],
                "summary": "Modify a note for a collection",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "modify_collection_note",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Note Id",
                        "type": "string"
                    },
                    "name": "note_id",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/NoteInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Collections  Cid  Notes  Note Id  Put",
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete":
            {
                "tags": ["collections"],
                "summary": "Delete a note from a collection",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "delete_collection_note",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Note Id",
                        "type": "string"
                    },
                    "name": "note_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/collections/{cid}/tags":
        {
            "post":
            {
                "tags": ["collections"],
                "summary": "Add a tag to collection",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "add_collection_tag",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/Tag"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Collections  Cid  Tags Post",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/collections/{cid}/tags/{value}":
        {
            "get":
            {
                "tags": ["collections"],
                "summary": "Get a tag from collection",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "get_collection_tag",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Value",
                        "pattern": "^[^/]{1,32}$",
                        "type": "string"
                    },
                    "name": "value",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Collections  Cid  Tags  Value  Get",
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put":
            {
                "tags": ["collections"],
                "summary": "Modify a tag for collection",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "rename_collection_tag",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Value",
                        "pattern": "^[^/]{1,32}$",
                        "type": "string"
                    },
                    "name": "value",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/Tag"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Collections  Cid  Tags  Value  Put",
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete":
            {
                "tags": ["collections"],
                "summary": "Delete a tag from collection",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "delete_collection_tag",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Value",
                        "type": "string"
                    },
                    "name": "value",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/collections/{cid}/info":
        {
            "post":
            {
                "tags": ["collections"],
                "summary": "Add/modify info for collection",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "modify_collection_info",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/Info"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Collections  Cid  Info Post",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/config":
        {
            "get":
            {
                "tags": ["config"],
                "summary": "Get public configuration",
                "operationId": "get_config_api_config_get",
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/ConfigOut"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/config.js":
        {
            "get":
            {
                "tags": ["config"],
                "summary": "Get public configuration as JavaScript",
                "operationId": "get_config_js_api_config_js_get",
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    }
                }
            }
        },
        "/api/version":
        {
            "get":
            {
                "tags": ["config"],
                "summary": "Get database schema version",
                "operationId": "get_version_api_version_get",
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    }
                }
            }
        },
        "/api/containers":
        {
            "get":
            {
                "tags": ["containers"],
                "summary": "Find All",
                "operationId": "find_all_containers",
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    }
                }
            },
            "post":
            {
                "tags": ["containers"],
                "summary": "Create",
                "operationId": "create_container",
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    }
                }
            }
        },
        "/api/containers/{container_id}":
        {
            "get":
            {
                "tags": ["containers"],
                "summary": "Get By Id",
                "operationId": "get_container",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Container Id",
                        "pattern": "^[0-9a-fA-F]{24}$|^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "name": "container_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Get By Id Api Containers  Container Id  Get",
                                    "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/GroupContainerOutput"
                                    },
                                    {
                                        "$ref": "#/components/schemas/ProjectContainerOutput"
                                    },
                                    {
                                        "$ref": "#/components/schemas/SubjectContainerOutput"
                                    },
                                    {
                                        "$ref": "#/components/schemas/SessionContainerOutput"
                                    },
                                    {
                                        "$ref": "#/components/schemas/AcquisitionContainerOutput"
                                    },
                                    {
                                        "$ref": "#/components/schemas/AnalysisContainerOutput"
                                    },
                                    {
                                        "$ref": "#/components/schemas/CollectionContainerOutput"
                                    }]
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put":
            {
                "tags": ["containers"],
                "summary": "Modify",
                "operationId": "modify_container",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Container Id",
                        "pattern": "^[0-9a-fA-F]{24}$|^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "name": "container_id",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "title": "Container",
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/ModifiedResult"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete":
            {
                "tags": ["containers"],
                "summary": "Delete",
                "operationId": "delete_container",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Container Id",
                        "pattern": "^[0-9a-fA-F]{24}$|^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "name": "container_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/DeletedResult"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/containers/{cid}/files":
        {
            "post":
            {
                "tags": ["containers"],
                "summary": "Upload a file to a container",
                "operationId": "upload_file_to_container",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Ticket",
                        "type": "string"
                    },
                    "name": "ticket",
                    "in": "query"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/containers/{cid}/files/{filename}":
        {
            "get":
            {
                "tags": ["containers"],
                "summary": "Download a file from a container",
                "description": "Return an output file or other info.\nParameters\n    ctype (ContainerType)\n    cid (str)           24-char hex id\n    filename (str)      file to return\n    ticket (str)        24-char hex ticket id; if empty, request ticket stub\n    info (bool)         return input zipfile info\n    member (str)        return single member file of input zipfile\n    range (str)         byte range(s)\n    view (bool)         stream file return instead of downloading\n    hash (str)          file hash\n    range (str)         byte range(s) to return\nReturns\n    ticket stub, redirect, zipfile info, zipfile member, or file data",
                "operationId": "download_file_from_container",
                "parameters": [
                {
                    "description": "24-char hex id",
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex id"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "description": "output file name",
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "pattern": ".+",
                        "type": "string",
                        "description": "output file name"
                    },
                    "name": "filename",
                    "in": "path"
                },
                {
                    "description": "24-char hex ticket id",
                    "required": false,
                    "schema":
                    {
                        "title": "Ticket",
                        "type": "string",
                        "description": "24-char hex ticket id"
                    },
                    "name": "ticket",
                    "in": "query"
                },
                {
                    "description": "get file info only",
                    "required": false,
                    "schema":
                    {
                        "title": "Info",
                        "type": "boolean",
                        "description": "get file info only",
                        "default": false
                    },
                    "name": "info",
                    "in": "query"
                },
                {
                    "description": "get zipfile member",
                    "required": false,
                    "schema":
                    {
                        "title": "Member",
                        "pattern": ".+",
                        "type": "string",
                        "description": "get zipfile member"
                    },
                    "name": "member",
                    "in": "query"
                },
                {
                    "description": "feature flag for view/download",
                    "required": false,
                    "schema":
                    {
                        "title": "View",
                        "type": "boolean",
                        "description": "feature flag for view/download",
                        "default": false
                    },
                    "name": "view",
                    "in": "query"
                },
                {
                    "description": "file hash for comparison",
                    "required": false,
                    "schema":
                    {
                        "title": "Hash",
                        "type": "string",
                        "description": "file hash for comparison"
                    },
                    "name": "hash",
                    "in": "query"
                },
                {
                    "description": "byte ranges to return",
                    "required": false,
                    "schema":
                    {
                        "title": "Range",
                        "type": "string",
                        "description": "byte ranges to return"
                    },
                    "name": "range",
                    "in": "header"
                },
                {
                    "description": "redirect header",
                    "required": false,
                    "schema":
                    {
                        "title": "X-Accept-Feature",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "description": "redirect header"
                    },
                    "name": "x-accept-feature",
                    "in": "header"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Download File Api Containers  Cid  Files  Filename  Get",
                                    "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/DownloadTicketStub"
                                    },
                                    {
                                        "$ref": "#/components/schemas/ZipfileInfo"
                                    }]
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put":
            {
                "tags": ["containers"],
                "summary": "Modify a file in a container",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "modify_container_file",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "type": "string"
                    },
                    "name": "filename",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/FileModifyInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/File"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post":
            {
                "tags": ["containers"],
                "summary": "Replace a file in a container",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "replace_container_file",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "type": "string"
                    },
                    "name": "filename",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/FileInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/File"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete":
            {
                "tags": ["containers"],
                "summary": "Delete a file from a container",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "delete_container_file",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "type": "string"
                    },
                    "name": "filename",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/containers/{cid}/files/{filename}/info":
        {
            "get":
            {
                "tags": ["containers"],
                "summary": "Get file info from a container",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "get_container_file_info",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "type": "string"
                    },
                    "name": "filename",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Input Fallback",
                        "type": "boolean",
                        "default": true
                    },
                    "name": "input_fallback",
                    "in": "query"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/File"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post":
            {
                "tags": ["containers"],
                "summary": "Modify file info for a container",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "modify_container_file_info",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "type": "string"
                    },
                    "name": "filename",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/Info"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Containers  Cid  Files  Filename  Info Post",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/containers/{cid}/inputs/{filename}/info":
        {
            "get":
            {
                "tags": ["containers"],
                "summary": "Get file info from a container",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "get_container_file_info",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "type": "string"
                    },
                    "name": "filename",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Input Fallback",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "input_fallback",
                    "in": "query"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/File"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/containers/{cid}/files/{filename}/classification":
        {
            "post":
            {
                "tags": ["containers"],
                "summary": "Modify file classification for a container",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "modify_container_file_classification",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "type": "string"
                    },
                    "name": "filename",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/FileClassification"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Containers  Cid  Files  Filename  Classification Post",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/containers/{cid}/notes":
        {
            "post":
            {
                "tags": ["containers"],
                "summary": "Add a note to a container",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "add_container_note",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/NoteInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/Note"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/containers/{cid}/notes/{note_id}":
        {
            "get":
            {
                "tags": ["containers"],
                "summary": "Get a note for a container",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "get_container_note",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Note Id",
                        "type": "string"
                    },
                    "name": "note_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/Note"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put":
            {
                "tags": ["containers"],
                "summary": "Modify a note for a container",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "modify_container_note",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Note Id",
                        "type": "string"
                    },
                    "name": "note_id",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/NoteInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Containers  Cid  Notes  Note Id  Put",
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete":
            {
                "tags": ["containers"],
                "summary": "Delete a note from a container",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "delete_container_note",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Note Id",
                        "type": "string"
                    },
                    "name": "note_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/containers/{cid}/tags":
        {
            "post":
            {
                "tags": ["containers"],
                "summary": "Add a tag to container",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "add_container_tag",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/Tag"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Containers  Cid  Tags Post",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/containers/{cid}/tags/{value}":
        {
            "get":
            {
                "tags": ["containers"],
                "summary": "Get a tag from container",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "get_container_tag",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Value",
                        "pattern": "^[^/]{1,32}$",
                        "type": "string"
                    },
                    "name": "value",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Containers  Cid  Tags  Value  Get",
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put":
            {
                "tags": ["containers"],
                "summary": "Modify a tag for container",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "rename_container_tag",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Value",
                        "pattern": "^[^/]{1,32}$",
                        "type": "string"
                    },
                    "name": "value",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/Tag"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Containers  Cid  Tags  Value  Put",
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete":
            {
                "tags": ["containers"],
                "summary": "Delete a tag from container",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "delete_container_tag",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Value",
                        "type": "string"
                    },
                    "name": "value",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/containers/{cid}/info":
        {
            "post":
            {
                "tags": ["containers"],
                "summary": "Add/modify info for container",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "modify_container_info",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/Info"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Containers  Cid  Info Post",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/dataexplorer/search":
        {
            "post":
            {
                "tags": ["dataexplorer"],
                "summary": "Search",
                "description": "handlers.dataexplorerhander.DataExplorerHandler.search)",
                "operationId": "search",
                "parameters": [
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Simple",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "simple",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Size",
                        "anyOf": [
                        {
                            "type": "integer"
                        },
                        {
                            "type": "string"
                        }]
                    },
                    "name": "size",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Facets",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "facets",
                    "in": "query"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/SearchQuery"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/dataexplorer/facets":
        {
            "post":
            {
                "tags": ["dataexplorer"],
                "summary": "Get Facets",
                "description": "handlers.dataexplorerhander.DataExplorerHandler.get_facets)",
                "operationId": "facets",
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/FacetQuery"
                            }
                        }
                    }
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/dataexplorer/search/status":
        {
            "get":
            {
                "tags": ["dataexplorer"],
                "summary": "Get Search Status",
                "description": "(get handlers.dataexplorerhander.DataExplorerHandler.get_search_status)",
                "operationId": "get_search_status",
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    }
                }
            }
        },
        "/api/dataexplorer/search/fields":
        {
            "post":
            {
                "tags": ["dataexplorer"],
                "summary": "Search Fields",
                "description": "handlers.dataexplorerhander.DataExplorerHandler.search_fields)",
                "operationId": "get_search_fields",
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/SearchFieldSuggestionQuery"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/dataexplorer/search/fields/aggregate":
        {
            "post":
            {
                "tags": ["dataexplorer"],
                "summary": "Aggregate Fields",
                "description": "handlers.dataexplorerhander.DataExplorerHandler.aggregate_field_values)",
                "operationId": "aggregate_fields_api_dataexplorer_search_fields_aggregate_post",
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/AggregateFieldValuesQuery"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Aggregate Fields Api Dataexplorer Search Fields Aggregate Post",
                                    "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/AggregateFieldValues"
                                    },
                                    {
                                        "$ref": "#/components/schemas/AggregateFieldValuesStats"
                                    }]
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/dataexplorer/search/nodes":
        {
            "post":
            {
                "tags": ["dataexplorer"],
                "summary": "Get Nodes",
                "description": "handlers.dataexplorerhander.DataExplorerHandler.get_nodes)",
                "operationId": "get_search_nodes",
                "parameters": [
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Size",
                        "anyOf": [
                        {
                            "type": "integer"
                        },
                        {
                            "type": "string"
                        }]
                    },
                    "name": "size",
                    "in": "query"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/SearchQuery"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/dataexplorer/search/parse":
        {
            "post":
            {
                "tags": ["dataexplorer"],
                "summary": "Parse Query",
                "description": "handlers.dataexplorerhander.DataExplorerHandler.parse_query)",
                "operationId": "parse_search_query",
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/StructuredQuery"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/dataexplorer/search/suggest":
        {
            "post":
            {
                "tags": ["dataexplorer"],
                "summary": "Suggest",
                "description": "handlers.dataexplorerhander.DataExplorerHandler.suggest)",
                "operationId": "get_search_query_suggestions",
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/StructuredQuery"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/dataexplorer/index/fields":
        {
            "post":
            {
                "tags": ["dataexplorer"],
                "summary": "Index Fields",
                "description": "handlers.dataexplorerhander.DataExplorerHandler.index_field_names)",
                "operationId": "index_fields",
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    }
                },
                "deprecated": true
            }
        },
        "/api/dataexplorer/search/training":
        {
            "post":
            {
                "tags": ["dataexplorer"],
                "summary": "Save Training Set",
                "description": "handlers.dataexplorerhander.DataExplorerHandler.save_training_set)",
                "operationId": "search_training",
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/SearchTrainingSetInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/dataexplorer/queries":
        {
            "get":
            {
                "tags": ["dataexplorer"],
                "summary": "Get Queries",
                "description": "(get handlers.dataexplorerhandler.QueryHandler.get_all)",
                "operationId": "get_queries_api_dataexplorer_queries_get",
                "parameters": [
                {
                    "description": "The filter to apply. (e.g. label=my-label,created>2018-09-22)",
                    "required": false,
                    "schema":
                    {
                        "title": "Filter",
                        "type": "string",
                        "description": "The filter to apply. (e.g. label=my-label,created>2018-09-22)"
                    },
                    "name": "filter",
                    "in": "query"
                },
                {
                    "description": "The sort fields and order.(e.g. label:asc,created:desc)",
                    "required": false,
                    "schema":
                    {
                        "title": "Sort",
                        "type": "string",
                        "description": "The sort fields and order.(e.g. label:asc,created:desc)"
                    },
                    "name": "sort",
                    "in": "query"
                },
                {
                    "description": "The maximum number of entries to return",
                    "required": false,
                    "schema":
                    {
                        "title": "Limit",
                        "type": "integer",
                        "description": "The maximum number of entries to return"
                    },
                    "name": "limit",
                    "in": "query"
                },
                {
                    "description": "The number of entries to skip",
                    "required": false,
                    "schema":
                    {
                        "title": "Skip",
                        "type": "integer",
                        "description": "The number of entries to skip"
                    },
                    "name": "skip",
                    "in": "query"
                },
                {
                    "description": "The page number (i.e. skip limit*page entries)",
                    "required": false,
                    "schema":
                    {
                        "title": "Page",
                        "type": "integer",
                        "description": "The page number (i.e. skip limit*page entries)"
                    },
                    "name": "page",
                    "in": "query"
                },
                {
                    "description": "Paginate after the given id. (Cannot be used with sort, page or skip)",
                    "required": false,
                    "schema":
                    {
                        "title": "After Id",
                        "type": "string",
                        "description": "Paginate after the given id. (Cannot be used with sort, page or skip)"
                    },
                    "name": "after_id",
                    "in": "query"
                },
                {
                    "description": "Return all queries, Admin only",
                    "required": false,
                    "schema":
                    {
                        "title": "Exhaustive",
                        "type": "boolean",
                        "description": "Return all queries, Admin only",
                        "default": false
                    },
                    "name": "exhaustive",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "X-Accept-Feature",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    },
                    "name": "x-accept-feature",
                    "in": "header"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Get Queries Api Dataexplorer Queries Get",
                                    "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/SaveSearchPage"
                                    },
                                    {
                                        "type": "array",
                                        "items":
                                        {
                                            "$ref": "#/components/schemas/SaveSearchOutput"
                                        }
                                    }]
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post":
            {
                "tags": ["dataexplorer"],
                "summary": "Post Queries",
                "description": "handlers.dataexplorerhandler.QueryHandler.post)",
                "operationId": "search_queries",
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/SaveSearchInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/dataexplorer/queries/{sid}":
        {
            "get":
            {
                "tags": ["dataexplorer"],
                "summary": "Get Query",
                "description": "(get handlers.dataexplorerhandler.QueryHandler.get)",
                "operationId": "search_get_query",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Sid",
                        "type": "string"
                    },
                    "name": "sid",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put":
            {
                "tags": ["dataexplorer"],
                "summary": "Put Query",
                "description": "(put handlers.dataexplorerhandler.QueryHandler.put)",
                "operationId": "search_modify_query",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Sid",
                        "type": "string"
                    },
                    "name": "sid",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/SaveSearchUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete":
            {
                "tags": ["dataexplorer"],
                "summary": "Delete Query",
                "description": "(delete QueryHandler.delete)",
                "operationId": "search_delete_query",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Sid",
                        "type": "string"
                    },
                    "name": "sid",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/devices":
        {
            "get":
            {
                "tags": ["devices"],
                "summary": "Get All",
                "description": "(get handlers.devicehandler.DeviceHandler.get_all)",
                "operationId": "get_all_api_devices_get",
                "parameters": [
                {
                    "description": "The filter to apply. (e.g. label=my-label,created>2018-09-22)",
                    "required": false,
                    "schema":
                    {
                        "title": "Filter",
                        "type": "string",
                        "description": "The filter to apply. (e.g. label=my-label,created>2018-09-22)"
                    },
                    "name": "filter",
                    "in": "query"
                },
                {
                    "description": "The sort fields and order.(e.g. label:asc,created:desc)",
                    "required": false,
                    "schema":
                    {
                        "title": "Sort",
                        "type": "string",
                        "description": "The sort fields and order.(e.g. label:asc,created:desc)"
                    },
                    "name": "sort",
                    "in": "query"
                },
                {
                    "description": "The maximum number of entries to return",
                    "required": false,
                    "schema":
                    {
                        "title": "Limit",
                        "type": "integer",
                        "description": "The maximum number of entries to return"
                    },
                    "name": "limit",
                    "in": "query"
                },
                {
                    "description": "The number of entries to skip",
                    "required": false,
                    "schema":
                    {
                        "title": "Skip",
                        "type": "integer",
                        "description": "The number of entries to skip"
                    },
                    "name": "skip",
                    "in": "query"
                },
                {
                    "description": "The page number (i.e. skip limit*page entries)",
                    "required": false,
                    "schema":
                    {
                        "title": "Page",
                        "type": "integer",
                        "description": "The page number (i.e. skip limit*page entries)"
                    },
                    "name": "page",
                    "in": "query"
                },
                {
                    "description": "Paginate after the given id. (Cannot be used with sort, page or skip)",
                    "required": false,
                    "schema":
                    {
                        "title": "After Id",
                        "type": "string",
                        "description": "Paginate after the given id. (Cannot be used with sort, page or skip)"
                    },
                    "name": "after_id",
                    "in": "query"
                },
                {
                    "description": "Return device key. Admins only",
                    "required": false,
                    "schema":
                    {
                        "title": "Join Keys",
                        "type": "boolean",
                        "description": "Return device key. Admins only",
                        "default": false
                    },
                    "name": "join_keys",
                    "in": "query"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Get All Api Devices Get",
                                    "type": "array",
                                    "items":
                                    {
                                        "$ref": "#/components/schemas/EgressDevice"
                                    }
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post":
            {
                "tags": ["devices"],
                "summary": "Create",
                "description": "(post handlers.devicehandler.DeviceHandler.post)",
                "operationId": "create_api_devices_post",
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/DeviceCreate"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/devices/status":
        {
            "get":
            {
                "tags": ["devices"],
                "summary": "Get Status",
                "description": "(get handlers.devicehandler.DeviceHandler.get_status)",
                "operationId": "get_status_api_devices_status_get",
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    }
                }
            }
        },
        "/api/devices/self":
        {
            "get":
            {
                "tags": ["devices"],
                "summary": "Get Self",
                "description": "(get handlers.devicehandler.DeviceHandler.get_self)",
                "operationId": "get_self_api_devices_self_get",
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    }
                }
            },
            "put":
            {
                "tags": ["devices"],
                "summary": "Modify Self",
                "description": "(put handlers.devicehandler.DeviceHandler.put_self)",
                "operationId": "modify_self_api_devices_self_put",
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/DeviceUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/devices/{device_id}":
        {
            "get":
            {
                "tags": ["devices"],
                "summary": "Get By Id",
                "description": "(get handlers.devicehandler.DeviceHandler.get)",
                "operationId": "get_by_id_api_devices__device_id__get",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Device Id",
                        "type": "string"
                    },
                    "name": "device_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/EgressDevice"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put":
            {
                "tags": ["devices"],
                "summary": "Modify",
                "description": "(put handlers.devicehandler.DeviceHandler.put)",
                "operationId": "modify_api_devices__device_id__put",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Device Id",
                        "type": "string"
                    },
                    "name": "device_id",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/DeviceAdminUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete":
            {
                "tags": ["devices"],
                "summary": "Delete",
                "description": "(post handlers.devicehandler.DeviceHandler.post)",
                "operationId": "delete_api_devices__device_id__delete",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Device Id",
                        "type": "string"
                    },
                    "name": "device_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/devices/{device_id}/key":
        {
            "post":
            {
                "tags": ["devices"],
                "summary": "Regenerate Key",
                "description": "(post handlers.devicehandler.DeviceHandler.regenerate_key)",
                "operationId": "regenerate_key_api_devices__device_id__key_post",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Device Id",
                        "type": "string"
                    },
                    "name": "device_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/devices/logging/{filename}":
        {
            "get":
            {
                "tags": ["devices"],
                "summary": "Serve Logging Credentials",
                "description": "(get handlers.devicehandler.DeviceHandler.serve_logging_credentials)",
                "operationId": "serve_logging_credentials_api_devices_logging__filename__get",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "type": "string"
                    },
                    "name": "filename",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/dimse/services":
        {
            "get":
            {
                "tags": ["dimse"],
                "summary": "List all DIMSE service AETs",
                "description": "Gets all Service AETs",
                "operationId": "get_all_service_aets",
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Get All Service Aets Api Dimse Services Get",
                                    "type": "array",
                                    "items":
                                    {
                                        "$ref": "#/components/schemas/ServiceAET"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post":
            {
                "tags": ["dimse"],
                "summary": "Create a new DIMSE service AET",
                "description": "Creates a new AET\n\nArgs:\n    params (ServiceAETInput): data model representing input data to create an AET\n\nReturns:\n    BaseAET: data model representing user excluding sensitive data",
                "operationId": "create_service_aet",
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "title": "Params",
                                "anyOf": [
                                {
                                    "$ref": "#/components/schemas/ProjectAETInput"
                                },
                                {
                                    "$ref": "#/components/schemas/ServiceAETInput"
                                }]
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/ServiceAET"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/dimse/projects":
        {
            "get":
            {
                "tags": ["dimse"],
                "summary": "List all DIMSE project AETs",
                "description": "Gets all project AETs",
                "operationId": "get_all_project_aets",
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Get All Project Aets Api Dimse Projects Get",
                                    "type": "array",
                                    "items":
                                    {
                                        "$ref": "#/components/schemas/ProjectAET"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post":
            {
                "tags": ["dimse"],
                "summary": "Create a new DIMSE project AET",
                "description": "Creates a new AET\n\nArgs:\n    params (ProjectAETInput): data model representing input data to create an AET\n\nReturns:\n    BaseAET: data model representing user excluding sensitive data",
                "operationId": "create_project_aet",
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/ProjectAETInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/ProjectAET"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/dimse/services/{aet_key}":
        {
            "get":
            {
                "tags": ["dimse"],
                "summary": "Get DIMSE service AET",
                "description": "Get DIMSE service AET by id\n\nArgs:\n    aet_key (str): the AET key\nReturns:\n    BaseAET: Base AET model",
                "operationId": "get_service_aet",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Aet Key",
                        "pattern": "[0-9a-zA-Z_-]{1,16}",
                        "type": "string"
                    },
                    "name": "aet_key",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/ServiceAET"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete":
            {
                "tags": ["dimse"],
                "summary": "Delete a DIMSE service AET",
                "description": "Deletes service AET by key\n\nArgs:\n    aet_key (str): the AET key\n\nReturns:\n    Dict[str, int]: count of deleted documents",
                "operationId": "delete_service_aet",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Aet Key",
                        "pattern": "[0-9a-zA-Z_-]{1,16}",
                        "type": "string"
                    },
                    "name": "aet_key",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Delete Service Aet Api Dimse Services  Aet Key  Delete",
                                    "type": "object",
                                    "additionalProperties":
                                    {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/dimse/projects/{aet_key}":
        {
            "get":
            {
                "tags": ["dimse"],
                "summary": "Get DIMSE project AET",
                "description": "Get DIMSE project AET by id\n\nArgs:\n    aet_key (str): the AET key\nReturns:\n    BaseAET: Base AET model",
                "operationId": "get_project_aet",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Aet Key",
                        "pattern": "[0-9a-zA-Z_-]{1,16}",
                        "type": "string"
                    },
                    "name": "aet_key",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/ProjectAET"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete":
            {
                "tags": ["dimse"],
                "summary": "Delete a DIMSE project AET",
                "description": "Deletes project AET by key\n\nArgs:\n    aet_key (str): the AET key\n\nReturns:\n    Dict[str, int]: count of deleted documents",
                "operationId": "delete_project_aet",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Aet Key",
                        "pattern": "[0-9a-zA-Z_-]{1,16}",
                        "type": "string"
                    },
                    "name": "aet_key",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Delete Project Aet Api Dimse Projects  Aet Key  Delete",
                                    "type": "object",
                                    "additionalProperties":
                                    {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/download":
        {
            "get":
            {
                "tags": ["files", "download"],
                "summary": "Download files listed in the given ticket.",
                "description": "This endpoint uses ticket_id as the only auth method. If you have\na valid ticket id then you can get the file listed in that ticket",
                "operationId": "download_ticket",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Ticket",
                        "type": "string"
                    },
                    "name": "ticket",
                    "in": "query"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post":
            {
                "tags": ["files", "download"],
                "summary": "Create a download ticket",
                "operationId": "create_download_ticket",
                "parameters": [
                {
                    "required": false,
                    "schema":
                    {
                        "$ref": "#/components/schemas/DownloadStrategy"
                    },
                    "name": "type",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Bulk",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "bulk",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Metadata",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "metadata",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Analyses",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "analyses",
                    "in": "query"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/DownloadInput"
                            }
                        }
                    }
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Create Ticket Api Download Post",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/download/summary":
        {
            "post":
            {
                "tags": ["download"],
                "summary": "Summary",
                "operationId": "summary_api_download_summary_post",
                "parameters": [
                {
                    "required": false,
                    "schema":
                    {
                        "$ref": "#/components/schemas/DownloadStrategy"
                    },
                    "name": "type",
                    "in": "query"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "title": "Nodes",
                                "type": "array",
                                "items":
                                {
                                    "$ref": "#/components/schemas/DownloadNode"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/download/targets":
        {
            "post":
            {
                "tags": ["download"],
                "summary": "Targets",
                "operationId": "targets_api_download_targets_post",
                "parameters": [
                {
                    "required": false,
                    "schema":
                    {
                        "$ref": "#/components/schemas/DownloadStrategy"
                    },
                    "name": "type",
                    "in": "query"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/DownloadInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/engine":
        {
            "post":
            {
                "tags": ["engine"],
                "summary": "upload",
                "description": "Reaper Upload",
                "operationId": "engine_upload",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "$ref": "#/components/schemas/ContainerType"
                    },
                    "name": "level",
                    "in": "query"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Id",
                        "pattern": "^[0-9a-fA-F]{24}$|^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "name": "id",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Upload Ticket",
                        "type": "string"
                    },
                    "name": "upload_ticket",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Job",
                        "pattern": "[^/]+",
                        "type": "string"
                    },
                    "name": "job",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Job Ticket",
                        "pattern": "[^/]+",
                        "type": "string"
                    },
                    "name": "job_ticket",
                    "in": "query"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/gears":
        {
            "get":
            {
                "tags": ["gears"],
                "summary": "Find All",
                "description": "get jobs.handlers.GearHandlers.get",
                "operationId": "find_all_api_gears_get",
                "parameters": [
                {
                    "required": false,
                    "schema":
                    {
                        "title": "All Versions",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "all_versions",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Include Invalid",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "include_invalid",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Filter",
                        "type": "string"
                    },
                    "name": "filter",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Sort",
                        "type": "string"
                    },
                    "name": "sort",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Limit",
                        "type": "integer"
                    },
                    "name": "limit",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Skip",
                        "type": "integer"
                    },
                    "name": "skip",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Page",
                        "type": "integer"
                    },
                    "name": "page",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "After Id",
                        "type": "string"
                    },
                    "name": "after_id",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "X-Accept-Feature",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    },
                    "name": "x-accept-feature",
                    "in": "header"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/gears/prepare-add":
        {
            "post":
            {
                "tags": ["gears"],
                "summary": "Prepare Add",
                "description": "post jobs.handlers.GearHandlers.prepare_add",
                "operationId": "prepare_add_api_gears_prepare_add_post",
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/GearDocumentInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/gears/ticket/{ticket_id}":
        {
            "get":
            {
                "tags": ["gears"],
                "summary": "Get Ticket",
                "description": "get jobs.handlers.GearHandlers.get_ticket",
                "operationId": "get_ticket_api_gears_ticket__ticket_id__get",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Ticket Id",
                        "pattern": "[^/]+",
                        "type": "string"
                    },
                    "name": "ticket_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/gears/my-tickets":
        {
            "get":
            {
                "tags": ["gears"],
                "summary": "Get Own Tickets",
                "description": "get jobs.handlers.GearHandlers.get_own_tickets",
                "operationId": "get_own_tickets_api_gears_my_tickets_get",
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    }
                }
            }
        },
        "/api/gears/save":
        {
            "post":
            {
                "tags": ["gears"],
                "summary": "Save",
                "description": "post jobs.handlers.GearHandlers.save",
                "operationId": "save_api_gears_save_post",
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/GearSaveSubmition"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/gears/{gear_name}":
        {
            "post":
            {
                "tags": ["gears"],
                "summary": "Legacy Upload",
                "description": "get jobs.handlers.GearHandlers.get",
                "operationId": "legacy_upload_api_gears__gear_name__post",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Gear Name",
                        "pattern": "^[a-z0-9\\-]+$",
                        "type": "string"
                    },
                    "name": "gear_name",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/GearDocumentLegacyInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/gears/temp/{cid}":
        {
            "get":
            {
                "tags": ["gears"],
                "summary": "Download",
                "description": "get jobs.handlers.GearHandlers.download",
                "operationId": "download_api_gears_temp__cid__get",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/gears/{gear_id}":
        {
            "get":
            {
                "tags": ["gears"],
                "summary": "Get By Id",
                "description": "get jobs.handlers.GearHandlers.get",
                "operationId": "get_by_id_api_gears__gear_id__get",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Gear Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "gear_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete":
            {
                "tags": ["gears"],
                "summary": "Delete",
                "description": "delete jobs.handlers.GearHandlers.disable",
                "operationId": "delete_api_gears__gear_id__delete",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Gear Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "gear_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "deprecated": true
            }
        },
        "/api/gears/{gear_id}/enable":
        {
            "post":
            {
                "tags": ["gears"],
                "summary": "Enable",
                "description": "post jobs.handlers.GearHandlers.enable",
                "operationId": "enable_api_gears__gear_id__enable_post",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Gear Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "gear_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/gears/{gear_id}/disable":
        {
            "post":
            {
                "tags": ["gears"],
                "summary": "Disable",
                "description": "post jobs.handlers.GearHandlers.disable",
                "operationId": "disable_api_gears__gear_id__disable_post",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Gear Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "gear_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/gears/{gear_id}/invocation":
        {
            "get":
            {
                "tags": ["gears"],
                "summary": "Get Invocation",
                "description": "get jobs.handlers.GearHandlers.get_invocation",
                "operationId": "get_invocation_api_gears__gear_id__invocation_get",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Gear Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "gear_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/gears/{gear_id}/suggest/{container_name}/{container_id}":
        {
            "get":
            {
                "tags": ["gears"],
                "summary": "Suggest",
                "description": "get jobs.handlers.GearHandlers.suggest",
                "operationId": "suggest_api_gears__gear_id__suggest__container_name___container_id__get",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Gear Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "gear_id",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Container Name",
                        "pattern": "groups|projects|subjects|sessions|acquisitions|collections|analyses",
                        "type": "string"
                    },
                    "name": "container_name",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Container Id",
                        "pattern": "^[0-9a-fA-F]{24}$|^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "name": "container_id",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Filter",
                        "type": "string"
                    },
                    "name": "filter",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Sort",
                        "type": "string"
                    },
                    "name": "sort",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Limit",
                        "type": "integer"
                    },
                    "name": "limit",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Skip",
                        "type": "integer"
                    },
                    "name": "skip",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Page",
                        "type": "integer"
                    },
                    "name": "page",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Include",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": ["children", "files"]
                    },
                    "name": "include",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Collection",
                        "type": "string"
                    },
                    "name": "collection",
                    "in": "query"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/gears/{gear_id}/context/{container_name}/{container_id}":
        {
            "get":
            {
                "tags": ["gears"],
                "summary": "Get Context",
                "description": "get jobs.handlers.GearHandlers.get_context",
                "operationId": "get_context_api_gears__gear_id__context__container_name___container_id__get",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Gear Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "gear_id",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Container Name",
                        "pattern": "groups|projects|subjects|sessions|acquisitions|collections|analyses",
                        "type": "string"
                    },
                    "name": "container_name",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Container Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "container_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/groups":
        {
            "get":
            {
                "tags": ["groups"],
                "summary": "Find All",
                "description": "(get handlers.grouphandler.GroupHandler.get_all)",
                "operationId": "get_all_groups",
                "parameters": [
                {
                    "description": "The filter to apply. (e.g. label=my-label,created>2018-09-22)",
                    "required": false,
                    "schema":
                    {
                        "title": "Filter",
                        "type": "string",
                        "description": "The filter to apply. (e.g. label=my-label,created>2018-09-22)"
                    },
                    "name": "filter",
                    "in": "query"
                },
                {
                    "description": "The sort fields and order.(e.g. label:asc,created:desc)",
                    "required": false,
                    "schema":
                    {
                        "title": "Sort",
                        "type": "string",
                        "description": "The sort fields and order.(e.g. label:asc,created:desc)"
                    },
                    "name": "sort",
                    "in": "query"
                },
                {
                    "description": "The maximum number of entries to return",
                    "required": false,
                    "schema":
                    {
                        "title": "Limit",
                        "type": "integer",
                        "description": "The maximum number of entries to return"
                    },
                    "name": "limit",
                    "in": "query"
                },
                {
                    "description": "The number of entries to skip",
                    "required": false,
                    "schema":
                    {
                        "title": "Skip",
                        "type": "integer",
                        "description": "The number of entries to skip"
                    },
                    "name": "skip",
                    "in": "query"
                },
                {
                    "description": "The page number (i.e. skip limit*page entries)",
                    "required": false,
                    "schema":
                    {
                        "title": "Page",
                        "type": "integer",
                        "description": "The page number (i.e. skip limit*page entries)"
                    },
                    "name": "page",
                    "in": "query"
                },
                {
                    "description": "Paginate after the given id. (Cannot be used with sort, page or skip)",
                    "required": false,
                    "schema":
                    {
                        "title": "After Id",
                        "type": "string",
                        "description": "Paginate after the given id. (Cannot be used with sort, page or skip)"
                    },
                    "name": "after_id",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Exhaustive",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "exhaustive",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "X-Accept-Feature",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    },
                    "name": "x-accept-feature",
                    "in": "header"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Find All Api Groups Get",
                                    "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/Page"
                                    },
                                    {
                                        "type": "array",
                                        "items":
                                        {
                                            "$ref": "#/components/schemas/GroupOutput"
                                        }
                                    }]
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post":
            {
                "tags": ["groups"],
                "summary": "Create",
                "description": "(post handlers.grouphandler.GroupHandler.post)",
                "operationId": "add_group",
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/GroupInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/InsertedId"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/groups/{group_id}":
        {
            "get":
            {
                "tags": ["groups"],
                "summary": "Get By Id",
                "description": "(get handlers.grouphandler.GroupHandler.get)",
                "operationId": "get_group",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Group Id",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "name": "group_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/GroupOutput"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put":
            {
                "tags": ["groups"],
                "summary": "Modify",
                "description": "(put handlers.grouphandler.GroupHandler.put)",
                "operationId": "modify_group",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Group Id",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "name": "group_id",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/GroupUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/ModifiedResult"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete":
            {
                "tags": ["groups"],
                "summary": "Delete",
                "description": "(delete handlers.grouphandler.GroupHandler.delete)",
                "operationId": "delete_group",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Group Id",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "name": "group_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/DeletedResult"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/groups/{group_id}/projects":
        {
            "get":
            {
                "tags": ["groups"],
                "summary": "Get Projects",
                "description": "get projects for a group",
                "operationId": "get_group_projects",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Group Id",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "name": "group_id",
                    "in": "path"
                },
                {
                    "description": "The filter to apply. (e.g. label=my-label,created>2018-09-22)",
                    "required": false,
                    "schema":
                    {
                        "title": "Filter",
                        "type": "string",
                        "description": "The filter to apply. (e.g. label=my-label,created>2018-09-22)"
                    },
                    "name": "filter",
                    "in": "query"
                },
                {
                    "description": "The sort fields and order.(e.g. label:asc,created:desc)",
                    "required": false,
                    "schema":
                    {
                        "title": "Sort",
                        "type": "string",
                        "description": "The sort fields and order.(e.g. label:asc,created:desc)"
                    },
                    "name": "sort",
                    "in": "query"
                },
                {
                    "description": "The maximum number of entries to return",
                    "required": false,
                    "schema":
                    {
                        "title": "Limit",
                        "type": "integer",
                        "description": "The maximum number of entries to return"
                    },
                    "name": "limit",
                    "in": "query"
                },
                {
                    "description": "The number of entries to skip",
                    "required": false,
                    "schema":
                    {
                        "title": "Skip",
                        "type": "integer",
                        "description": "The number of entries to skip"
                    },
                    "name": "skip",
                    "in": "query"
                },
                {
                    "description": "The page number (i.e. skip limit*page entries)",
                    "required": false,
                    "schema":
                    {
                        "title": "Page",
                        "type": "integer",
                        "description": "The page number (i.e. skip limit*page entries)"
                    },
                    "name": "page",
                    "in": "query"
                },
                {
                    "description": "Paginate after the given id. (Cannot be used with sort, page or skip)",
                    "required": false,
                    "schema":
                    {
                        "title": "After Id",
                        "type": "string",
                        "description": "Paginate after the given id. (Cannot be used with sort, page or skip)"
                    },
                    "name": "after_id",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Exhaustive",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "exhaustive",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "X-Accept-Feature",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    },
                    "name": "x-accept-feature",
                    "in": "header"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Get Projects Api Groups  Group Id  Projects Get",
                                    "anyOf": [
                                    {
                                        "type": "array",
                                        "items":
                                        {
                                            "$ref": "#/components/schemas/ProjectListOutput"
                                        }
                                    },
                                    {
                                        "$ref": "#/components/schemas/Page"
                                    }]
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/groups/{group_id}/roles":
        {
            "get":
            {
                "tags": ["groups"],
                "summary": "Get All Group Roles",
                "operationId": "get_all_group_roles",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Group Id",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "name": "group_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post":
            {
                "tags": ["groups"],
                "summary": "Add Role",
                "operationId": "add_role_to_group",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Group Id",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "name": "group_id",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/GroupRole"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/groups/{group_id}/roles/{role_id}":
        {
            "get":
            {
                "tags": ["groups"],
                "summary": "Get Group Role",
                "operationId": "get_group_role",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Group Id",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "name": "group_id",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Role Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "role_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete":
            {
                "tags": ["groups"],
                "summary": "Remove Role",
                "operationId": "remove_role_from_group",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Group Id",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "name": "group_id",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Role Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "role_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/groups/{group_id}/permissions/templates":
        {
            "post":
            {
                "tags": ["groups"],
                "summary": "Create Permissions Template",
                "description": "Adds permission template to the group\n\nArgs:\n    group_id: the id of the group\n    permission: The access permission\n    auth_session: The auth session of the user\n    propagate: Flag to push the operation down to projects\n\nReturns\n    RolePermissionOutput: The added permission",
                "operationId": "add_group_permission_template",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Group Id",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "name": "group_id",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Propagate",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "propagate",
                    "in": "query"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/RolePermission"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/groups/{group_id}/permissions/templates/{user_id}":
        {
            "get":
            {
                "tags": ["groups"],
                "summary": "Get Permissions Template",
                "description": "Get a permission from the group\n\nArgs:\n    group_id: the id of the group\n    user_id: The id of the user\n    auth_session: The auth session of the user\n\nReturns\n    RolePermissionOutput: The permission",
                "operationId": "get_group_user_permission_template",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Group Id",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "name": "group_id",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "User Id",
                        "pattern": "[0-9a-zA-Z.@_-]*",
                        "type": "string"
                    },
                    "name": "user_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put":
            {
                "tags": ["groups"],
                "summary": "Modify Permissions Template",
                "description": "Modify a permission on the group\n\nArgs:\n    group_id: the id of the group\n    user_id: The id of the user\n    permission_modification: The updates to apply to the permission\n    auth_session: The auth session of the user\n    propagate: Flag to push the operation down to projects\n\nReturns\n    RolePermissionOutput: The modified permission",
                "operationId": "modify_group_user_permission_template",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Group Id",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "name": "group_id",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "User Id",
                        "pattern": "[0-9a-zA-Z.@_-]*",
                        "type": "string"
                    },
                    "name": "user_id",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Propagate",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "propagate",
                    "in": "query"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/RolePermissionUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete":
            {
                "tags": ["groups"],
                "summary": "Delete Permissions Template",
                "description": "Deletes a permission from the group\n\nArgs:\n    group_id: the id of the group\n    user_id: The id of the user\n    auth_session: The auth session of the user\n    propagate: Flag to push the operation down to projects",
                "operationId": "delete_group_user_permission_template",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Group Id",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "name": "group_id",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "User Id",
                        "pattern": "[0-9a-zA-Z.@_-]*",
                        "type": "string"
                    },
                    "name": "user_id",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Propagate",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "propagate",
                    "in": "query"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/groups/{group_id}/permissions":
        {
            "post":
            {
                "tags": ["groups"],
                "summary": "Create Permissions",
                "description": "Adds permission to the group\n\nArgs:\n    group_id: the id of the group\n    permission: The access permission\n    auth_session: The auth session of the user\n\nReturns\n    AccessPermissionOutput: The added permission",
                "operationId": "add_group_permission",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Group Id",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "name": "group_id",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/AccessPermission"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/groups/{group_id}/permissions/{user_id}":
        {
            "get":
            {
                "tags": ["groups"],
                "summary": "Get Permissions",
                "description": "Get a permission from the group\n\nArgs:\n    group_id: the id of the group\n    user_id: The id of the user\n    auth_session: The auth session of the user\n\nReturns\n    AccessPermissionOutput: The permission",
                "operationId": "get_group_user_permission",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Group Id",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "name": "group_id",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "User Id",
                        "pattern": "[0-9a-zA-Z.@_-]*",
                        "type": "string"
                    },
                    "name": "user_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put":
            {
                "tags": ["groups"],
                "summary": "Modify Permissions",
                "description": "Modify a permission on the group\n\nArgs:\n    group_id: the id of the group\n    user_id: The id of the user\n    permission_modification: The updates to apply to the permission\n    auth_session: The auth session of the user\n\nReturns\n    AccessPermissionOutput: The modified permission",
                "operationId": "modify_group_user_permission",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Group Id",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "name": "group_id",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "User Id",
                        "pattern": "[0-9a-zA-Z.@_-]*",
                        "type": "string"
                    },
                    "name": "user_id",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/AccessPermissionUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete":
            {
                "tags": ["groups"],
                "summary": "Delete Permissions",
                "description": "Deletes a permission from the group\n\nArgs:\n    group_id: the id of the group\n    user_id: The id of the user\n    auth_session: The auth session of the user",
                "operationId": "delete_group_user_permission",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Group Id",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "name": "group_id",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "User Id",
                        "pattern": "[0-9a-zA-Z.@_-]*",
                        "type": "string"
                    },
                    "name": "user_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/groups/{cid}/{sub_cname}/analyses":
        {
            "get":
            {
                "tags": ["groups"],
                "summary": "Partial",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "partial_api_groups__cid___sub_cname__analyses_get",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "$ref": "#/components/schemas/SubContainerType"
                    },
                    "name": "sub_cname",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Filter",
                        "type": "string",
                        "default": []
                    },
                    "name": "filter",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Sort",
                        "type": "string"
                    },
                    "name": "sort",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Limit",
                        "type": "integer",
                        "default": 100
                    },
                    "name": "limit",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Skip",
                        "type": "integer",
                        "default": 0
                    },
                    "name": "skip",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Page",
                        "type": "integer"
                    },
                    "name": "page",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "After Id",
                        "type": "string"
                    },
                    "name": "after_id",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Inflate Job",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "inflate_job",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Join Avatars",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "join_avatars",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Join",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "name": "join",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "X-Accept-Feature",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    },
                    "name": "x-accept-feature",
                    "in": "header"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/groups/{cid}/tags":
        {
            "post":
            {
                "tags": ["groups"],
                "summary": "Partial",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "partial_api_groups__cid__tags_post",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/Tag"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/groups/{cid}/tags/{value}":
        {
            "get":
            {
                "tags": ["groups"],
                "summary": "Partial",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "partial_api_groups__cid__tags__value__get",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Value",
                        "pattern": "^[^/]{1,32}$",
                        "type": "string"
                    },
                    "name": "value",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put":
            {
                "tags": ["groups"],
                "summary": "Partial",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "partial_api_groups__cid__tags__value__put",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Value",
                        "pattern": "^[^/]{1,32}$",
                        "type": "string"
                    },
                    "name": "value",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/Tag"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete":
            {
                "tags": ["groups"],
                "summary": "Partial",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "partial_api_groups__cid__tags__value__delete",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Value",
                        "type": "string"
                    },
                    "name": "value",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/groups/{cid}/settings":
        {
            "get":
            {
                "tags": ["groups"],
                "summary": "Get settings from group",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "get_group_settings",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/SettingsOutput"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put":
            {
                "tags": ["groups"],
                "summary": "Modify settings for group",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "modify_group_settings",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/SettingsInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/SettingsOutput"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/groups/{cid}/settings/deid_profile":
        {
            "get":
            {
                "tags": ["groups"],
                "summary": "Get deid_profile for group",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "get_group_deid_profile",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Groups  Cid  Settings Deid Profile Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/jobs":
        {
            "get":
            {
                "tags": ["jobs"],
                "summary": "Find All",
                "operationId": "get_all_jobs",
                "parameters": [
                {
                    "description": "The filter to apply. (e.g. label=my-label,created>2018-09-22)",
                    "required": false,
                    "schema":
                    {
                        "title": "Filter",
                        "type": "string",
                        "description": "The filter to apply. (e.g. label=my-label,created>2018-09-22)"
                    },
                    "name": "filter",
                    "in": "query"
                },
                {
                    "description": "The sort fields and order.(e.g. label:asc,created:desc)",
                    "required": false,
                    "schema":
                    {
                        "title": "Sort",
                        "type": "string",
                        "description": "The sort fields and order.(e.g. label:asc,created:desc)"
                    },
                    "name": "sort",
                    "in": "query"
                },
                {
                    "description": "The maximum number of entries to return",
                    "required": false,
                    "schema":
                    {
                        "title": "Limit",
                        "type": "integer",
                        "description": "The maximum number of entries to return"
                    },
                    "name": "limit",
                    "in": "query"
                },
                {
                    "description": "The number of entries to skip",
                    "required": false,
                    "schema":
                    {
                        "title": "Skip",
                        "type": "integer",
                        "description": "The number of entries to skip"
                    },
                    "name": "skip",
                    "in": "query"
                },
                {
                    "description": "The page number (i.e. skip limit*page entries)",
                    "required": false,
                    "schema":
                    {
                        "title": "Page",
                        "type": "integer",
                        "description": "The page number (i.e. skip limit*page entries)"
                    },
                    "name": "page",
                    "in": "query"
                },
                {
                    "description": "Paginate after the given id. (Cannot be used with sort, page or skip)",
                    "required": false,
                    "schema":
                    {
                        "title": "After Id",
                        "type": "string",
                        "description": "Paginate after the given id. (Cannot be used with sort, page or skip)"
                    },
                    "name": "after_id",
                    "in": "query"
                },
                {
                    "description": "Include the parent info for the jobs",
                    "required": false,
                    "schema":
                    {
                        "title": "Include Parent Info",
                        "type": "boolean",
                        "description": "Include the parent info for the jobs",
                        "default": false
                    },
                    "name": "include_parent_info",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "X-Accept-Feature",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    },
                    "name": "x-accept-feature",
                    "in": "header"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Find All Api Jobs Get",
                                    "anyOf": [
                                    {
                                        "type": "array",
                                        "items":
                                        {
                                            "$ref": "#/components/schemas/JobListOutput"
                                        }
                                    },
                                    {
                                        "$ref": "#/components/schemas/Page"
                                    }]
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/jobs/ask":
        {
            "post":
            {
                "tags": ["jobs"],
                "summary": "Ask",
                "description": "Ask the queue a question, receiving work or statistics in return.",
                "operationId": "ask_jobs",
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/JobAsk"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/JobAskResponse"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/jobs/ask/{job_state}":
        {
            "post":
            {
                "tags": ["jobs"],
                "summary": "Ask State",
                "description": "Ask the queue for the number of jobs for a given state and query.",
                "operationId": "ask_jobs_state",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "$ref": "#/components/schemas/JobState"
                    },
                    "name": "job_state",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/JobAsk"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/jobs/next":
        {
            "get":
            {
                "tags": ["jobs"],
                "summary": "Get Next",
                "description": "Used by the engine.",
                "operationId": "get_next_job",
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Get Next Api Jobs Next Get",
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "deprecated": true
            }
        },
        "/api/jobs/stats":
        {
            "get":
            {
                "tags": ["jobs"],
                "summary": "Stats",
                "operationId": "get_jobs_stats",
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Stats Api Jobs Stats Get",
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/jobs/reap":
        {
            "post":
            {
                "tags": ["jobs"],
                "summary": "Reap Stale",
                "operationId": "reap_jobs",
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/OrphanedCount"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/jobs/add":
        {
            "post":
            {
                "tags": ["jobs"],
                "summary": "Add",
                "operationId": "add_job",
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/InputJob"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/InsertedId"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/jobs/determine_provider":
        {
            "post":
            {
                "tags": ["jobs"],
                "summary": "Determine Provider",
                "operationId": "determine_provider_for_job",
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/InputJob"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/Provider"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/jobs/{job_id}":
        {
            "get":
            {
                "tags": ["jobs"],
                "summary": "Get By Id",
                "operationId": "get_job",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Job Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "job_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/JobOutput"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put":
            {
                "tags": ["jobs"],
                "summary": "Modify",
                "description": "Updates timestamp. Enforces a valid state machine transition, if any. Rejects any change to a job that is not currently in ‘pending’ or ‘running’ state. Accepts the same body as /api/jobs/add , except all fields are optional.",
                "operationId": "modify_job",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Job Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "job_id",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/JobModify"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/ModifiedResult"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/jobs/{job_id}/config.json":
        {
            "get":
            {
                "tags": ["jobs"],
                "summary": "Get Job Config",
                "operationId": "get_job_config",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Job Id",
                        "pattern": "[^/]+",
                        "type": "string"
                    },
                    "name": "job_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/jobs/{job_id}/retry":
        {
            "post":
            {
                "tags": ["jobs"],
                "summary": "Retry",
                "description": "The job must have a state of 'failed’, and must not have already been retried. The failed jobs config is copied to a new job. The ID of the new job is returned",
                "operationId": "retry_job",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Job Id",
                        "pattern": "[^/]+",
                        "type": "string"
                    },
                    "name": "job_id",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Computeproviderid",
                        "type": "string"
                    },
                    "name": "computeProviderId",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Ignorestate",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "ignoreState",
                    "in": "query"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/InsertedId"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/jobs/{job_id}/logs":
        {
            "get":
            {
                "tags": ["jobs"],
                "summary": "Get Logs",
                "operationId": "get_job_logs",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Job Id",
                        "pattern": "[^/]+",
                        "type": "string"
                    },
                    "name": "job_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/JobLogRecord"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post":
            {
                "tags": ["jobs"],
                "summary": "Add Logs",
                "operationId": "add_job_logs",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Job Id",
                        "pattern": "[^/]+",
                        "type": "string"
                    },
                    "name": "job_id",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "title": "Logs",
                                "type": "array",
                                "items":
                                {
                                    "$ref": "#/components/schemas/JobLog"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/jobs/{job_id}/logs/text":
        {
            "get":
            {
                "tags": ["jobs"],
                "summary": "Get Logs Text",
                "operationId": "get_job_logs_text",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Job Id",
                        "pattern": "[^/]+",
                        "type": "string"
                    },
                    "name": "job_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/jobs/{job_id}/logs/html":
        {
            "get":
            {
                "tags": ["jobs"],
                "summary": "Get Logs Html",
                "operationId": "get_job_logs_html",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Job Id",
                        "pattern": "[^/]+",
                        "type": "string"
                    },
                    "name": "job_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/jobs/{job_id}/prepare-complete":
        {
            "post":
            {
                "tags": ["jobs"],
                "summary": "Prepare Complete",
                "operationId": "prepare_complete_jobs",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Job Id",
                        "pattern": "[^/]+",
                        "type": "string"
                    },
                    "name": "job_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/JobTicketOutput"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/jobs/{job_id}/complete":
        {
            "post":
            {
                "tags": ["jobs"],
                "summary": "Complete",
                "operationId": "complete_job",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Job Id",
                        "pattern": "[^/]+",
                        "type": "string"
                    },
                    "name": "job_id",
                    "in": "path"
                },
                {
                    "description": "ticket id for job completion",
                    "required": false,
                    "schema":
                    {
                        "title": "Job Ticket Id",
                        "type": "string",
                        "description": "ticket id for job completion"
                    },
                    "name": "job_ticket_id",
                    "in": "query"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/JobComplete"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/jobs/{job_id}/profile":
        {
            "put":
            {
                "tags": ["jobs"],
                "summary": "Update Profile",
                "operationId": "update_job_profile",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Job Id",
                        "pattern": "[^/]+",
                        "type": "string"
                    },
                    "name": "job_id",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/InputJobProfile"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/ModifiedResult"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/jobs/{job_id}/detail":
        {
            "get":
            {
                "tags": ["jobs"],
                "summary": "Get Detail",
                "operationId": "get_job_detail",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Job Id",
                        "pattern": "[^/]+",
                        "type": "string"
                    },
                    "name": "job_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/JobDetail"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/jobs/{job_id}/accept-failed-output":
        {
            "post":
            {
                "tags": ["jobs"],
                "summary": "Accept Failed Output",
                "operationId": "accept_failed_output_api_jobs__job_id__accept_failed_output_post",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Job Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "job_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "deprecated": true
            }
        },
        "/api/jobs/cancel/bulk":
        {
            "put":
            {
                "tags": ["jobs"],
                "summary": "Cancel Jobs",
                "operationId": "jobs_cancel_bulk",
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/JobBulkInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/jobs/retry/bulk":
        {
            "put":
            {
                "tags": ["jobs"],
                "summary": "Retry Jobs",
                "operationId": "jobs_retry_bulk",
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/JobBulkInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/metrics":
        {
            "get":
            {
                "tags": ["metrics"],
                "summary": "Get All",
                "operationId": "get_all_api_metrics_get",
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    }
                }
            }
        },
        "/api/modalities":
        {
            "get":
            {
                "tags": ["modalities"],
                "summary": "Get all modalities",
                "operationId": "find_all_api_modalities_get",
                "parameters": [
                {
                    "description": "The filter to apply. (e.g. description=my-desc,active:true)",
                    "required": false,
                    "schema":
                    {
                        "title": "Filter",
                        "type": "string",
                        "description": "The filter to apply. (e.g. description=my-desc,active:true)",
                        "default": []
                    },
                    "name": "filter",
                    "in": "query"
                },
                {
                    "description": "The sort fields and order.(e.g. description:asc,active:desc)",
                    "required": false,
                    "schema":
                    {
                        "title": "Sort",
                        "type": "string",
                        "description": "The sort fields and order.(e.g. description:asc,active:desc)"
                    },
                    "name": "sort",
                    "in": "query"
                },
                {
                    "description": "The maximum number of entries to return",
                    "required": false,
                    "schema":
                    {
                        "title": "Limit",
                        "type": "integer",
                        "description": "The maximum number of entries to return",
                        "default": 100
                    },
                    "name": "limit",
                    "in": "query"
                },
                {
                    "description": "The number of entries to skip",
                    "required": false,
                    "schema":
                    {
                        "title": "Skip",
                        "type": "integer",
                        "description": "The number of entries to skip",
                        "default": 0
                    },
                    "name": "skip",
                    "in": "query"
                },
                {
                    "description": "The page number (i.e. skip limit*page entries)",
                    "required": false,
                    "schema":
                    {
                        "title": "Page",
                        "type": "integer",
                        "description": "The page number (i.e. skip limit*page entries)"
                    },
                    "name": "page",
                    "in": "query"
                },
                {
                    "description": "Paginate after the given id. (Cannot be used with sort, page or skip)",
                    "required": false,
                    "schema":
                    {
                        "title": "After Id",
                        "type": "string",
                        "description": "Paginate after the given id. (Cannot be used with sort, page or skip)"
                    },
                    "name": "after_id",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "X-Accept-Feature",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    },
                    "name": "x-accept-feature",
                    "in": "header"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post":
            {
                "tags": ["modalities"],
                "summary": "Add new modality",
                "description": "handlers.modalityhandler.ModalityHandler.post",
                "operationId": "create_api_modalities_post",
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/ModalityInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/modalities/{modalityId}":
        {
            "get":
            {
                "tags": ["modalities"],
                "summary": "Get modality by id",
                "description": "handlers.modalityhandler.ModalityHandler.get_name",
                "operationId": "get_by_id_api_modalities__modalityId__get",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Modalityid",
                        "type": "string"
                    },
                    "name": "modalityId",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put":
            {
                "tags": ["modalities"],
                "summary": "Modify a modality by id",
                "description": "handlers.modalityhandler.ModalityHandler.update_name",
                "operationId": "update_api_modalities__modalityId__put",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Modalityid",
                        "type": "string"
                    },
                    "name": "modalityId",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/ModalityModify"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete":
            {
                "tags": ["modalities"],
                "summary": "Delete a modality by id",
                "description": "handlers.modalityhandler.ModalityHandler.delete",
                "operationId": "delete_api_modalities__modalityId__delete",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Modalityid",
                        "type": "string"
                    },
                    "name": "modalityId",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/clean-packfiles":
        {
            "post":
            {
                "tags": ["packfiles"],
                "summary": "Clean Packfiles",
                "operationId": "clean_packfiles_api_clean_packfiles_post",
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    }
                }
            }
        },
        "/api/projects/groups":
        {
            "get":
            {
                "tags": ["projects"],
                "summary": "Get Groups",
                "description": "(get handlers.containerhandler.ContainerHandler.get_groups_with_project)",
                "operationId": "get_all_projects_groups",
                "parameters": [
                {
                    "description": "The filter to apply. (e.g. label=my-label,created>2018-09-22)",
                    "required": false,
                    "schema":
                    {
                        "title": "Filter",
                        "type": "string",
                        "description": "The filter to apply. (e.g. label=my-label,created>2018-09-22)",
                        "default": []
                    },
                    "name": "filter",
                    "in": "query"
                },
                {
                    "description": "The sort fields and order.(e.g. label:asc,created:desc)",
                    "required": false,
                    "schema":
                    {
                        "title": "Sort",
                        "type": "string",
                        "description": "The sort fields and order.(e.g. label:asc,created:desc)"
                    },
                    "name": "sort",
                    "in": "query"
                },
                {
                    "description": "The maximum number of entries to return",
                    "required": false,
                    "schema":
                    {
                        "title": "Limit",
                        "type": "integer",
                        "description": "The maximum number of entries to return",
                        "default": 100
                    },
                    "name": "limit",
                    "in": "query"
                },
                {
                    "description": "The number of entries to skip",
                    "required": false,
                    "schema":
                    {
                        "title": "Skip",
                        "type": "integer",
                        "description": "The number of entries to skip",
                        "default": 0
                    },
                    "name": "skip",
                    "in": "query"
                },
                {
                    "description": "The page number (i.e. skip limit*page entries)",
                    "required": false,
                    "schema":
                    {
                        "title": "Page",
                        "type": "integer",
                        "description": "The page number (i.e. skip limit*page entries)"
                    },
                    "name": "page",
                    "in": "query"
                },
                {
                    "description": "Paginate after the given id. (Cannot be used with sort, page or skip)",
                    "required": false,
                    "schema":
                    {
                        "title": "After Id",
                        "type": "string",
                        "description": "Paginate after the given id. (Cannot be used with sort, page or skip)"
                    },
                    "name": "after_id",
                    "in": "query"
                },
                {
                    "description": "returns exhaustive list if correct permissions",
                    "required": false,
                    "schema":
                    {
                        "title": "Exhaustive",
                        "type": "boolean",
                        "description": "returns exhaustive list if correct permissions",
                        "default": false
                    },
                    "name": "exhaustive",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "X-Accept-Feature",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    },
                    "name": "x-accept-feature",
                    "in": "header"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Get Groups Api Projects Groups Get",
                                    "type": "array",
                                    "items":
                                    {
                                        "$ref": "#/components/schemas/GroupOutput"
                                    }
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/projects":
        {
            "get":
            {
                "tags": ["projects"],
                "summary": "Find All",
                "operationId": "get_all_projects",
                "parameters": [
                {
                    "description": "The filter to apply. (e.g. label=my-label,created>2018-09-22)",
                    "required": false,
                    "schema":
                    {
                        "title": "Filter",
                        "type": "string",
                        "description": "The filter to apply. (e.g. label=my-label,created>2018-09-22)",
                        "default": []
                    },
                    "name": "filter",
                    "in": "query"
                },
                {
                    "description": "The sort fields and order.(e.g. label:asc,created:desc)",
                    "required": false,
                    "schema":
                    {
                        "title": "Sort",
                        "type": "string",
                        "description": "The sort fields and order.(e.g. label:asc,created:desc)"
                    },
                    "name": "sort",
                    "in": "query"
                },
                {
                    "description": "The maximum number of entries to return",
                    "required": false,
                    "schema":
                    {
                        "title": "Limit",
                        "type": "integer",
                        "description": "The maximum number of entries to return",
                        "default": 100
                    },
                    "name": "limit",
                    "in": "query"
                },
                {
                    "description": "The number of entries to skip",
                    "required": false,
                    "schema":
                    {
                        "title": "Skip",
                        "type": "integer",
                        "description": "The number of entries to skip",
                        "default": 0
                    },
                    "name": "skip",
                    "in": "query"
                },
                {
                    "description": "The page number (i.e. skip limit*page entries)",
                    "required": false,
                    "schema":
                    {
                        "title": "Page",
                        "type": "integer",
                        "description": "The page number (i.e. skip limit*page entries)"
                    },
                    "name": "page",
                    "in": "query"
                },
                {
                    "description": "Paginate after the given id. (Cannot be used with sort, page or skip)",
                    "required": false,
                    "schema":
                    {
                        "title": "After Id",
                        "type": "string",
                        "description": "Paginate after the given id. (Cannot be used with sort, page or skip)"
                    },
                    "name": "after_id",
                    "in": "query"
                },
                {
                    "description": "Return the count of subjects and sessions in each project",
                    "required": false,
                    "schema":
                    {
                        "title": "Counts",
                        "type": "boolean",
                        "description": "Return the count of subjects and sessions in each project",
                        "default": false
                    },
                    "name": "counts",
                    "in": "query"
                },
                {
                    "description": "Return the joined avatars of the permissions",
                    "required": false,
                    "schema":
                    {
                        "title": "Join Avatars",
                        "type": "boolean",
                        "description": "Return the joined avatars of the permissions",
                        "default": false
                    },
                    "name": "join_avatars",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Join",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    },
                    "name": "join",
                    "in": "query"
                },
                {
                    "description": "Return a complete list regardless of permissions",
                    "required": false,
                    "schema":
                    {
                        "title": "Exhaustive",
                        "type": "boolean",
                        "description": "Return a complete list regardless of permissions",
                        "default": false
                    },
                    "name": "exhaustive",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "X-Accept-Feature",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    },
                    "name": "x-accept-feature",
                    "in": "header"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Find All Api Projects Get",
                                    "anyOf": [
                                    {
                                        "type": "array",
                                        "items":
                                        {
                                            "$ref": "#/components/schemas/ProjectListOutput"
                                        }
                                    },
                                    {
                                        "$ref": "#/components/schemas/Page"
                                    }]
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post":
            {
                "tags": ["projects"],
                "summary": "Create",
                "description": "(handler.containerhandler.ContainerHandler.post)",
                "operationId": "add_project",
                "parameters": [
                {
                    "description": "Inherit permissions from the group permission template",
                    "required": false,
                    "schema":
                    {
                        "title": "Inherit",
                        "type": "boolean",
                        "description": "Inherit permissions from the group permission template",
                        "default": false
                    },
                    "name": "inherit",
                    "in": "query"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/ProjectInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/InsertedId"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/projects/{project_id}":
        {
            "get":
            {
                "tags": ["projects"],
                "summary": "Get By Id",
                "description": "(handler.containerhandler.ContainerHandler.get)",
                "operationId": "get_project",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Project Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "project_id",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "X-Accept-Feature",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    },
                    "name": "x-accept-feature",
                    "in": "header"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/ProjectOutput"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put":
            {
                "tags": ["projects"],
                "summary": "Modify",
                "description": "(handler.containerhandler.ContainerHandler.put)",
                "operationId": "modify_project",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Project Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "project_id",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/ProjectModify"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/ModifiedResult"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete":
            {
                "tags": ["projects"],
                "summary": "Delete",
                "operationId": "delete_project",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Project Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "project_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/projects/recalc":
        {
            "post":
            {
                "tags": ["projects"],
                "summary": "Recalc",
                "description": "(post handlers.containerhandler.ContainerHandler.calculate_project_compliance)",
                "operationId": "recalc_all_projects",
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Recalc Api Projects Recalc Post",
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/projects/{project_id}/jobs":
        {
            "get":
            {
                "tags": ["projects"],
                "summary": "Find Jobs",
                "operationId": "get_project_jobs",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Project Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "project_id",
                    "in": "path"
                },
                {
                    "description": "The filter to apply. (e.g. label=my-label,created>2018-09-22)",
                    "required": false,
                    "schema":
                    {
                        "title": "Filter",
                        "type": "string",
                        "description": "The filter to apply. (e.g. label=my-label,created>2018-09-22)"
                    },
                    "name": "filter",
                    "in": "query"
                },
                {
                    "description": "The sort fields and order.(e.g. label:asc,created:desc)",
                    "required": false,
                    "schema":
                    {
                        "title": "Sort",
                        "type": "string",
                        "description": "The sort fields and order.(e.g. label:asc,created:desc)"
                    },
                    "name": "sort",
                    "in": "query"
                },
                {
                    "description": "The maximum number of entries to return",
                    "required": false,
                    "schema":
                    {
                        "title": "Limit",
                        "type": "integer",
                        "description": "The maximum number of entries to return"
                    },
                    "name": "limit",
                    "in": "query"
                },
                {
                    "description": "The number of entries to skip",
                    "required": false,
                    "schema":
                    {
                        "title": "Skip",
                        "type": "integer",
                        "description": "The number of entries to skip"
                    },
                    "name": "skip",
                    "in": "query"
                },
                {
                    "description": "The page number (i.e. skip limit*page entries)",
                    "required": false,
                    "schema":
                    {
                        "title": "Page",
                        "type": "integer",
                        "description": "The page number (i.e. skip limit*page entries)"
                    },
                    "name": "page",
                    "in": "query"
                },
                {
                    "description": "Paginate after the given id. (Cannot be used with sort, page or skip)",
                    "required": false,
                    "schema":
                    {
                        "title": "After Id",
                        "type": "string",
                        "description": "Paginate after the given id. (Cannot be used with sort, page or skip)"
                    },
                    "name": "after_id",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "X-Accept-Feature",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    },
                    "name": "x-accept-feature",
                    "in": "header"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Find Jobs Api Projects  Project Id  Jobs Get",
                                    "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/Page"
                                    },
                                    {
                                        "type": "array",
                                        "items":
                                        {
                                            "$ref": "#/components/schemas/JobListOutput"
                                        }
                                    }]
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/projects/{project_id}/template":
        {
            "post":
            {
                "tags": ["projects"],
                "summary": "Create Templates",
                "description": "handlers.containerhandler.ContainerHandler.set_project_template",
                "operationId": "set_project_template",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Project Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "project_id",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/ProjectTemplateList"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/ModifiedResult"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete":
            {
                "tags": ["projects"],
                "summary": "Delete Templates",
                "description": "handlers.containerhandler.ContainerHandler.delete_project_template",
                "operationId": "remove_project_template",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Project Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "project_id",
                    "in": "path"
                }],
                "responses":
                {
                    "204":
                    {
                        "description": "Successful Response"
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/projects/{project_id}/recalc":
        {
            "post":
            {
                "tags": ["projects"],
                "summary": "Calc Compliance",
                "description": "(post handlers.containerhandler.ContainerHandler.calculate_project_compliance",
                "operationId": "recalc_project",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Project Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "project_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Calc Compliance Api Projects  Project Id  Recalc Post",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/projects/{project_id}/rules":
        {
            "get":
            {
                "tags": ["projects"],
                "summary": "Get Rules",
                "description": "jobs.handlers.RulesHandler.get",
                "operationId": "get_project_rules",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Project Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "project_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Get Rules Api Projects  Project Id  Rules Get",
                                    "type": "array",
                                    "items":
                                    {
                                        "$ref": "#/components/schemas/GearRule"
                                    }
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post":
            {
                "tags": ["projects"],
                "summary": "Create Rule",
                "description": "jobs.handlers.RulesHandler.post",
                "operationId": "add_project_rule",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Project Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "project_id",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/GearRuleInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/GearRule"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/projects/{project_id}/rules/{rule_id}":
        {
            "get":
            {
                "tags": ["projects"],
                "summary": "Get Rule",
                "description": "jobs.handlers.RuleHandler.get",
                "operationId": "get_project_rule",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Project Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "project_id",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Rule Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "rule_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/GearRule"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put":
            {
                "tags": ["projects"],
                "summary": "Modify Rule",
                "description": "jobs.handlers.RuleHandler.put",
                "operationId": "modify_project_rule",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Project Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "project_id",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Rule Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "rule_id",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/GearRuleModifyInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/GearRule"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete":
            {
                "tags": ["projects"],
                "summary": "Delete Rule",
                "description": "jobs.handlers.RuleHandler.delete",
                "operationId": "remove_project_rule",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Project Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "project_id",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Rule Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "rule_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/projects/{project_id}/permissions":
        {
            "post":
            {
                "tags": ["projects"],
                "summary": "Create Permissions",
                "description": "Add user to a project\n\nArgs:\n    project_id: The id of the project\n    permission: The permission to add\n    auth_session: The auth session\n\nReturns:\n    RolePermissionOutput: The added permission",
                "operationId": "add_project_permissions",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Project Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "project_id",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/RolePermission"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/RolePermissionOutput"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/projects/{project_id}/permissions/{uid}":
        {
            "get":
            {
                "tags": ["projects"],
                "summary": "Get Permissions",
                "description": "Get a user's permission from a project\n\nArgs:\n    project_id: The id of the project\n    uid: The id of the user\n    auth_session: The auth session\n\nReturns:\n    RolePermissionOutput: The permission",
                "operationId": "get_project_user_permission",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Project Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "project_id",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Uid",
                        "pattern": "[0-9a-zA-Z.@_-]*",
                        "type": "string"
                    },
                    "name": "uid",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/RolePermissionOutput"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put":
            {
                "tags": ["projects"],
                "summary": "Modify Permissions",
                "description": "Modify a user's permission in a project\n\nArgs:\n    project_id: The id of the project\n    uid: The id of the user\n    permission: The set of updates to apply to the permission\n    auth_session: The auth session\n\nReturns:\n    RolePermissionOutput: The modified permission",
                "operationId": "modify_project_user_permission",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Project Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "project_id",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Uid",
                        "pattern": "[0-9a-zA-Z.@_-]*",
                        "type": "string"
                    },
                    "name": "uid",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/RolePermissionUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/RolePermissionOutput"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete":
            {
                "tags": ["projects"],
                "summary": "Delete Permissions",
                "description": "Delete a user's permission in a project\n\nArgs:\n    project_id: The id of the project\n    uid: The id of the user\n    auth_session: The auth session",
                "operationId": "delete_project_user_permission",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Project Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "project_id",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Uid",
                        "pattern": "[0-9a-zA-Z.@_-]*",
                        "type": "string"
                    },
                    "name": "uid",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/projects/{project_id}/ldap-sync":
        {
            "post":
            {
                "tags": ["projects"],
                "summary": "Sync Permissions",
                "description": "Synchronize project permissions based on LDAP update payload\n\nArgs:\n    project_id: The id of the project\n    sync_update: The LDAP sync update (users or sync error)\n    auth_session: The auth session\n\nReturns:\n    LdapSyncResult: The no. of users created/granted/revoked",
                "operationId": "post_project_ldap_sync",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Project Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "project_id",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/LdapSyncUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/LdapSyncResult"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/projects/{project_id}/sessions":
        {
            "get":
            {
                "tags": ["projects"],
                "summary": "Find Sessions",
                "description": "get sessions for a project",
                "operationId": "get_project_sessions",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Project Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "project_id",
                    "in": "path"
                },
                {
                    "description": "The filter to apply. (e.g. label=my-label,created>2018-09-22)",
                    "required": false,
                    "schema":
                    {
                        "title": "Filter",
                        "type": "string",
                        "description": "The filter to apply. (e.g. label=my-label,created>2018-09-22)"
                    },
                    "name": "filter",
                    "in": "query"
                },
                {
                    "description": "The sort fields and order.(e.g. label:asc,created:desc)",
                    "required": false,
                    "schema":
                    {
                        "title": "Sort",
                        "type": "string",
                        "description": "The sort fields and order.(e.g. label:asc,created:desc)"
                    },
                    "name": "sort",
                    "in": "query"
                },
                {
                    "description": "The maximum number of entries to return",
                    "required": false,
                    "schema":
                    {
                        "title": "Limit",
                        "type": "integer",
                        "description": "The maximum number of entries to return"
                    },
                    "name": "limit",
                    "in": "query"
                },
                {
                    "description": "The number of entries to skip",
                    "required": false,
                    "schema":
                    {
                        "title": "Skip",
                        "type": "integer",
                        "description": "The number of entries to skip"
                    },
                    "name": "skip",
                    "in": "query"
                },
                {
                    "description": "The page number (i.e. skip limit*page entries)",
                    "required": false,
                    "schema":
                    {
                        "title": "Page",
                        "type": "integer",
                        "description": "The page number (i.e. skip limit*page entries)"
                    },
                    "name": "page",
                    "in": "query"
                },
                {
                    "description": "Paginate after the given id. (Cannot be used with sort, page or skip)",
                    "required": false,
                    "schema":
                    {
                        "title": "After Id",
                        "type": "string",
                        "description": "Paginate after the given id. (Cannot be used with sort, page or skip)"
                    },
                    "name": "after_id",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "X-Accept-Feature",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    },
                    "name": "x-accept-feature",
                    "in": "header"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Find Sessions Api Projects  Project Id  Sessions Get",
                                    "type": "array",
                                    "items":
                                    {
                                        "$ref": "#/components/schemas/SessionOutput"
                                    }
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/projects/{project_id}/subjects":
        {
            "get":
            {
                "tags": ["projects"],
                "summary": "Find Subjects",
                "description": "get sessions for a project",
                "operationId": "get_project_subjects",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Project Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "project_id",
                    "in": "path"
                },
                {
                    "description": "The filter to apply. (e.g. label=my-label,created>2018-09-22)",
                    "required": false,
                    "schema":
                    {
                        "title": "Filter",
                        "type": "string",
                        "description": "The filter to apply. (e.g. label=my-label,created>2018-09-22)"
                    },
                    "name": "filter",
                    "in": "query"
                },
                {
                    "description": "The sort fields and order.(e.g. label:asc,created:desc)",
                    "required": false,
                    "schema":
                    {
                        "title": "Sort",
                        "type": "string",
                        "description": "The sort fields and order.(e.g. label:asc,created:desc)"
                    },
                    "name": "sort",
                    "in": "query"
                },
                {
                    "description": "The maximum number of entries to return",
                    "required": false,
                    "schema":
                    {
                        "title": "Limit",
                        "type": "integer",
                        "description": "The maximum number of entries to return"
                    },
                    "name": "limit",
                    "in": "query"
                },
                {
                    "description": "The number of entries to skip",
                    "required": false,
                    "schema":
                    {
                        "title": "Skip",
                        "type": "integer",
                        "description": "The number of entries to skip"
                    },
                    "name": "skip",
                    "in": "query"
                },
                {
                    "description": "The page number (i.e. skip limit*page entries)",
                    "required": false,
                    "schema":
                    {
                        "title": "Page",
                        "type": "integer",
                        "description": "The page number (i.e. skip limit*page entries)"
                    },
                    "name": "page",
                    "in": "query"
                },
                {
                    "description": "Paginate after the given id. (Cannot be used with sort, page or skip)",
                    "required": false,
                    "schema":
                    {
                        "title": "After Id",
                        "type": "string",
                        "description": "Paginate after the given id. (Cannot be used with sort, page or skip)"
                    },
                    "name": "after_id",
                    "in": "query"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Find Subjects Api Projects  Project Id  Subjects Get",
                                    "type": "array",
                                    "items":
                                    {
                                        "$ref": "#/components/schemas/SubjectOutputForList"
                                    }
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/projects/{project_id}/packfile":
        {
            "post":
            {
                "tags": ["projects"],
                "summary": "Packfile",
                "operationId": "project_packfile_upload",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Project Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "project_id",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Token",
                        "pattern": "[0-9a-f]{8}-([0-9a-f]{4}-){3}[0-9a-f]{12}",
                        "type": "string"
                    },
                    "name": "token",
                    "in": "query"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/projects/{project_id}/packfile-start":
        {
            "post":
            {
                "tags": ["projects"],
                "summary": "Packfile Start",
                "operationId": "start_project_packfile_upload",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Project Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "project_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/UploadTokenOutput"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/projects/{project_id}/packfile-end":
        {
            "get":
            {
                "tags": ["projects"],
                "summary": "Packfile End",
                "operationId": "end_project_packfile_upload",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Project Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "project_id",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Token",
                        "pattern": "[0-9a-f]{8}-([0-9a-f]{4}-){3}[0-9a-f]{12}",
                        "type": "string"
                    },
                    "name": "token",
                    "in": "query"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Metadata",
                        "type": "string"
                    },
                    "name": "metadata",
                    "in": "query"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post":
            {
                "tags": ["projects"],
                "summary": "Post Packfile End",
                "operationId": "end_project_packfile_upload_with_post",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Project Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "project_id",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Token",
                        "pattern": "[0-9a-f]{8}-([0-9a-f]{4}-){3}[0-9a-f]{12}",
                        "type": "string"
                    },
                    "name": "token",
                    "in": "query"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Metadata",
                        "type": "string"
                    },
                    "name": "metadata",
                    "in": "query"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/projects/{project_id}/lock":
        {
            "post":
            {
                "tags": ["projects"],
                "summary": "Project Lock",
                "operationId": "project_lock",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Project Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "project_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/ProjectOutput"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/projects/{project_id}/unlock":
        {
            "post":
            {
                "tags": ["projects"],
                "summary": "Project Unlock",
                "operationId": "project_unlock",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Project Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "project_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/ProjectOutput"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/projects/{cid}/analyses":
        {
            "get":
            {
                "tags": ["projects"],
                "summary": "Get all analyses for a project",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "get_project_analyses",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Filter",
                        "type": "string",
                        "default": []
                    },
                    "name": "filter",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Sort",
                        "type": "string"
                    },
                    "name": "sort",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Limit",
                        "type": "integer",
                        "default": 100
                    },
                    "name": "limit",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Skip",
                        "type": "integer",
                        "default": 0
                    },
                    "name": "skip",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Page",
                        "type": "integer"
                    },
                    "name": "page",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "After Id",
                        "type": "string"
                    },
                    "name": "after_id",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Inflate Job",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "inflate_job",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Join Avatars",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "join_avatars",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Join",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "name": "join",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "X-Accept-Feature",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    },
                    "name": "x-accept-feature",
                    "in": "header"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Projects  Cid  Analyses Get",
                                    "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/Page"
                                    },
                                    {
                                        "type": "array",
                                        "items":
                                        {
                                            "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/AnalysisListOutput"
                                            },
                                            {
                                                "$ref": "#/components/schemas/AnalysisListOutputInflatedJob"
                                            }]
                                        }
                                    }]
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post":
            {
                "tags": ["projects"],
                "summary": "Add an analysis to a project",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "add_project_analysis",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "title": "Analysis",
                                "anyOf": [
                                {
                                    "$ref": "#/components/schemas/AdhocAnalysisInput"
                                },
                                {
                                    "$ref": "#/components/schemas/JobAnalysisInput"
                                }]
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/InsertedId"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/projects/{cid}/{sub_cname}/analyses":
        {
            "get":
            {
                "tags": ["projects"],
                "summary": "Get nested analyses from a project",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "get_project_sub_analyses",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "$ref": "#/components/schemas/SubContainerType"
                    },
                    "name": "sub_cname",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Filter",
                        "type": "string",
                        "default": []
                    },
                    "name": "filter",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Sort",
                        "type": "string"
                    },
                    "name": "sort",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Limit",
                        "type": "integer",
                        "default": 100
                    },
                    "name": "limit",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Skip",
                        "type": "integer",
                        "default": 0
                    },
                    "name": "skip",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Page",
                        "type": "integer"
                    },
                    "name": "page",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "After Id",
                        "type": "string"
                    },
                    "name": "after_id",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Inflate Job",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "inflate_job",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Join Avatars",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "join_avatars",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Join",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "name": "join",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "X-Accept-Feature",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    },
                    "name": "x-accept-feature",
                    "in": "header"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Projects  Cid   Sub Cname  Analyses Get",
                                    "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/Page"
                                    },
                                    {
                                        "type": "array",
                                        "items":
                                        {
                                            "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/AnalysisListOutput"
                                            },
                                            {
                                                "$ref": "#/components/schemas/AnalysisListOutputInflatedJob"
                                            }]
                                        }
                                    }]
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/projects/{cid}/analyses/{analysis_id}":
        {
            "get":
            {
                "tags": ["projects"],
                "summary": "Get an analysis from a project",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "get_project_analysis",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Analysis Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "analysis_id",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Inflate Job",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "inflate_job",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Join Avatars",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "join_avatars",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Join",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "name": "join",
                    "in": "query"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Projects  Cid  Analyses  Analysis Id  Get",
                                    "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/AnalysisOutputInflatedJob"
                                    },
                                    {
                                        "$ref": "#/components/schemas/AnalysisOutput"
                                    }]
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put":
            {
                "tags": ["projects"],
                "summary": "Modify an analysis for a project",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "modify_project_analysis",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Analysis Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "analysis_id",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/AnalysisModifyInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/ModifiedResult"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete":
            {
                "tags": ["projects"],
                "summary": "Delete an analysis from a project",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "delete_project_analysis",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Analysis Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "analysis_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/DeletedResult"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/projects/{cid}/analyses/{analysis_id}/inputs/{filename}":
        {
            "get":
            {
                "tags": ["projects"],
                "summary": "Download an analysis input file from a project",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "download_input_from_project_analysis",
                "parameters": [
                {
                    "description": "24-char hex id",
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex id"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "description": "24-char hex analysis id",
                    "required": true,
                    "schema":
                    {
                        "title": "Analysis Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex analysis id"
                    },
                    "name": "analysis_id",
                    "in": "path"
                },
                {
                    "description": "input filename",
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "pattern": ".+",
                        "type": "string",
                        "description": "input filename"
                    },
                    "name": "filename",
                    "in": "path"
                },
                {
                    "description": "24-char hex ticket id",
                    "required": false,
                    "schema":
                    {
                        "title": "Ticket",
                        "type": "string",
                        "description": "24-char hex ticket id"
                    },
                    "name": "ticket",
                    "in": "query"
                },
                {
                    "description": "get file info only",
                    "required": false,
                    "schema":
                    {
                        "title": "Info",
                        "type": "boolean",
                        "description": "get file info only",
                        "default": false
                    },
                    "name": "info",
                    "in": "query"
                },
                {
                    "description": "get zipfile member",
                    "required": false,
                    "schema":
                    {
                        "title": "Member",
                        "pattern": ".+",
                        "type": "string",
                        "description": "get zipfile member"
                    },
                    "name": "member",
                    "in": "query"
                },
                {
                    "description": "feature flag for view/download",
                    "required": false,
                    "schema":
                    {
                        "title": "View",
                        "type": "boolean",
                        "description": "feature flag for view/download",
                        "default": false
                    },
                    "name": "view",
                    "in": "query"
                },
                {
                    "description": "byte ranges to return",
                    "required": false,
                    "schema":
                    {
                        "title": "Range",
                        "type": "string",
                        "description": "byte ranges to return"
                    },
                    "name": "range",
                    "in": "header"
                },
                {
                    "description": "redirect header",
                    "required": false,
                    "schema":
                    {
                        "title": "X-Accept-Feature",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "description": "redirect header"
                    },
                    "name": "x-accept-feature",
                    "in": "header"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Projects  Cid  Analyses  Analysis Id  Inputs  Filename  Get",
                                    "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/DownloadTicketStub"
                                    },
                                    {
                                        "$ref": "#/components/schemas/ZipfileInfo"
                                    }]
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/projects/{cid}/analyses/{analysis_id}/files/{filename}":
        {
            "get":
            {
                "tags": ["projects"],
                "summary": "Download an analysis output file from a project",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "download_output_from_project_analysis",
                "parameters": [
                {
                    "description": "24-char hex id",
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex id"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "description": "24-char hex analysis id",
                    "required": true,
                    "schema":
                    {
                        "title": "Analysis Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex analysis id"
                    },
                    "name": "analysis_id",
                    "in": "path"
                },
                {
                    "description": "output file name",
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "pattern": ".+",
                        "type": "string",
                        "description": "output file name"
                    },
                    "name": "filename",
                    "in": "path"
                },
                {
                    "description": "24-char hex ticket id",
                    "required": false,
                    "schema":
                    {
                        "title": "Ticket",
                        "type": "string",
                        "description": "24-char hex ticket id"
                    },
                    "name": "ticket",
                    "in": "query"
                },
                {
                    "description": "get file info only",
                    "required": false,
                    "schema":
                    {
                        "title": "Info",
                        "type": "boolean",
                        "description": "get file info only",
                        "default": false
                    },
                    "name": "info",
                    "in": "query"
                },
                {
                    "description": "get zipfile member",
                    "required": false,
                    "schema":
                    {
                        "title": "Member",
                        "pattern": ".+",
                        "type": "string",
                        "description": "get zipfile member"
                    },
                    "name": "member",
                    "in": "query"
                },
                {
                    "description": "feature flag for view/download",
                    "required": false,
                    "schema":
                    {
                        "title": "View",
                        "type": "boolean",
                        "description": "feature flag for view/download",
                        "default": false
                    },
                    "name": "view",
                    "in": "query"
                },
                {
                    "description": "byte ranges to return",
                    "required": false,
                    "schema":
                    {
                        "title": "Range",
                        "type": "string",
                        "description": "byte ranges to return"
                    },
                    "name": "range",
                    "in": "header"
                },
                {
                    "description": "redirect header",
                    "required": false,
                    "schema":
                    {
                        "title": "X-Accept-Feature",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "description": "redirect header"
                    },
                    "name": "x-accept-feature",
                    "in": "header"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Projects  Cid  Analyses  Analysis Id  Files  Filename  Get",
                                    "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/DownloadTicketStub"
                                    },
                                    {
                                        "$ref": "#/components/schemas/ZipfileInfo"
                                    }]
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/projects/{cid}/analyses/{analysis_id}/files":
        {
            "post":
            {
                "tags": ["projects"],
                "summary": "Upload an analysis output file to a project",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "upload_output_to_project_analysis",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Analysis Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "analysis_id",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "multipart/form-data":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/Body_partial_api_projects__cid__analyses__analysis_id__files_post"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Projects  Cid  Analyses  Analysis Id  Files Post",
                                    "type": "array",
                                    "items":
                                    {
                                        "$ref": "#/components/schemas/File"
                                    }
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/projects/{cid}/analyses/{analysis_id}/files/{filename}/info":
        {
            "get":
            {
                "tags": ["projects"],
                "summary": "Get file info from a project",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "get_project_file_info",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "type": "string"
                    },
                    "name": "filename",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Input Fallback",
                        "type": "boolean",
                        "default": true
                    },
                    "name": "input_fallback",
                    "in": "query"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/File"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/projects/{cid}/analyses/{analysis_id}/inputs/{filename}/info":
        {
            "get":
            {
                "tags": ["projects"],
                "summary": "Get file info from a project",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "get_project_file_info",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "type": "string"
                    },
                    "name": "filename",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Input Fallback",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "input_fallback",
                    "in": "query"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/File"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/projects/{cid}/analyses/{analysis_id}/notes":
        {
            "post":
            {
                "tags": ["projects"],
                "summary": "Add a note to a project",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "add_project_analysis_note",
                "parameters": [
                {
                    "description": "24-char hex id",
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex id"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "description": "24-char hex analysis id",
                    "required": true,
                    "schema":
                    {
                        "title": "Analysis Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex analysis id"
                    },
                    "name": "analysis_id",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "title": "Note",
                                "allOf": [
                                {
                                    "$ref": "#/components/schemas/NoteInput"
                                }],
                                "description": "note content"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/Note"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/projects/{cid}/analyses/{analysis_id}/notes/{note_id}":
        {
            "delete":
            {
                "tags": ["projects"],
                "summary": "Delete a note from a project",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "delete_project_analysis_note",
                "parameters": [
                {
                    "description": "24-char hex id",
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex id"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "description": "24-char hex analysis id",
                    "required": true,
                    "schema":
                    {
                        "title": "Analysis Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex analysis id"
                    },
                    "name": "analysis_id",
                    "in": "path"
                },
                {
                    "description": "24-char hex note id",
                    "required": true,
                    "schema":
                    {
                        "title": "Note Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex note id"
                    },
                    "name": "note_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/projects/{cid}/settings":
        {
            "get":
            {
                "tags": ["projects"],
                "summary": "Get settings from project",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "get_project_settings",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/SettingsOutput"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put":
            {
                "tags": ["projects"],
                "summary": "Modify settings for project",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "modify_project_settings",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/SettingsInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/SettingsOutput"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/projects/{cid}/settings/deid_profile":
        {
            "get":
            {
                "tags": ["projects"],
                "summary": "Get deid_profile for project",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "get_project_deid_profile",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Projects  Cid  Settings Deid Profile Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/projects/{cid}/files":
        {
            "post":
            {
                "tags": ["projects"],
                "summary": "Upload a file to a project",
                "operationId": "upload_file_to_project",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Ticket",
                        "type": "string"
                    },
                    "name": "ticket",
                    "in": "query"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/projects/{cid}/files/{filename}":
        {
            "get":
            {
                "tags": ["projects"],
                "summary": "Download a file from a project",
                "description": "Return an output file or other info.\nParameters\n    ctype (ContainerType)\n    cid (str)           24-char hex id\n    filename (str)      file to return\n    ticket (str)        24-char hex ticket id; if empty, request ticket stub\n    info (bool)         return input zipfile info\n    member (str)        return single member file of input zipfile\n    range (str)         byte range(s)\n    view (bool)         stream file return instead of downloading\n    hash (str)          file hash\n    range (str)         byte range(s) to return\nReturns\n    ticket stub, redirect, zipfile info, zipfile member, or file data",
                "operationId": "download_file_from_project",
                "parameters": [
                {
                    "description": "24-char hex id",
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex id"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "description": "output file name",
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "pattern": ".+",
                        "type": "string",
                        "description": "output file name"
                    },
                    "name": "filename",
                    "in": "path"
                },
                {
                    "description": "24-char hex ticket id",
                    "required": false,
                    "schema":
                    {
                        "title": "Ticket",
                        "type": "string",
                        "description": "24-char hex ticket id"
                    },
                    "name": "ticket",
                    "in": "query"
                },
                {
                    "description": "get file info only",
                    "required": false,
                    "schema":
                    {
                        "title": "Info",
                        "type": "boolean",
                        "description": "get file info only",
                        "default": false
                    },
                    "name": "info",
                    "in": "query"
                },
                {
                    "description": "get zipfile member",
                    "required": false,
                    "schema":
                    {
                        "title": "Member",
                        "pattern": ".+",
                        "type": "string",
                        "description": "get zipfile member"
                    },
                    "name": "member",
                    "in": "query"
                },
                {
                    "description": "feature flag for view/download",
                    "required": false,
                    "schema":
                    {
                        "title": "View",
                        "type": "boolean",
                        "description": "feature flag for view/download",
                        "default": false
                    },
                    "name": "view",
                    "in": "query"
                },
                {
                    "description": "file hash for comparison",
                    "required": false,
                    "schema":
                    {
                        "title": "Hash",
                        "type": "string",
                        "description": "file hash for comparison"
                    },
                    "name": "hash",
                    "in": "query"
                },
                {
                    "description": "byte ranges to return",
                    "required": false,
                    "schema":
                    {
                        "title": "Range",
                        "type": "string",
                        "description": "byte ranges to return"
                    },
                    "name": "range",
                    "in": "header"
                },
                {
                    "description": "redirect header",
                    "required": false,
                    "schema":
                    {
                        "title": "X-Accept-Feature",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "description": "redirect header"
                    },
                    "name": "x-accept-feature",
                    "in": "header"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Download File Api Projects  Cid  Files  Filename  Get",
                                    "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/DownloadTicketStub"
                                    },
                                    {
                                        "$ref": "#/components/schemas/ZipfileInfo"
                                    }]
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put":
            {
                "tags": ["projects"],
                "summary": "Modify a file in a project",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "modify_project_file",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "type": "string"
                    },
                    "name": "filename",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/FileModifyInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/File"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post":
            {
                "tags": ["projects"],
                "summary": "Replace a file in a project",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "replace_project_file",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "type": "string"
                    },
                    "name": "filename",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/FileInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/File"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete":
            {
                "tags": ["projects"],
                "summary": "Delete a file from a project",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "delete_project_file",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "type": "string"
                    },
                    "name": "filename",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/projects/{cid}/files/{filename}/info":
        {
            "get":
            {
                "tags": ["projects"],
                "summary": "Get file info from a project",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "get_project_file_info",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "type": "string"
                    },
                    "name": "filename",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Input Fallback",
                        "type": "boolean",
                        "default": true
                    },
                    "name": "input_fallback",
                    "in": "query"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/File"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post":
            {
                "tags": ["projects"],
                "summary": "Modify file info for a project",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "modify_project_file_info",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "type": "string"
                    },
                    "name": "filename",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/Info"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Projects  Cid  Files  Filename  Info Post",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/projects/{cid}/inputs/{filename}/info":
        {
            "get":
            {
                "tags": ["projects"],
                "summary": "Get file info from a project",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "get_project_file_info",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "type": "string"
                    },
                    "name": "filename",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Input Fallback",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "input_fallback",
                    "in": "query"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/File"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/projects/{cid}/files/{filename}/classification":
        {
            "post":
            {
                "tags": ["projects"],
                "summary": "Modify file classification for a project",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "modify_project_file_classification",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "type": "string"
                    },
                    "name": "filename",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/FileClassification"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Projects  Cid  Files  Filename  Classification Post",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/projects/{cid}/notes":
        {
            "post":
            {
                "tags": ["projects"],
                "summary": "Add a note to a project",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "add_project_note",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/NoteInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/Note"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/projects/{cid}/notes/{note_id}":
        {
            "get":
            {
                "tags": ["projects"],
                "summary": "Get a note for a project",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "get_project_note",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Note Id",
                        "type": "string"
                    },
                    "name": "note_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/Note"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put":
            {
                "tags": ["projects"],
                "summary": "Modify a note for a project",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "modify_project_note",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Note Id",
                        "type": "string"
                    },
                    "name": "note_id",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/NoteInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Projects  Cid  Notes  Note Id  Put",
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete":
            {
                "tags": ["projects"],
                "summary": "Delete a note from a project",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "delete_project_note",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Note Id",
                        "type": "string"
                    },
                    "name": "note_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/projects/{cid}/tags":
        {
            "post":
            {
                "tags": ["projects"],
                "summary": "Add a tag to project",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "add_project_tag",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/Tag"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Projects  Cid  Tags Post",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/projects/{cid}/tags/{value}":
        {
            "get":
            {
                "tags": ["projects"],
                "summary": "Get a tag from project",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "get_project_tag",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Value",
                        "pattern": "^[^/]{1,32}$",
                        "type": "string"
                    },
                    "name": "value",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Projects  Cid  Tags  Value  Get",
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put":
            {
                "tags": ["projects"],
                "summary": "Modify a tag for project",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "rename_project_tag",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Value",
                        "pattern": "^[^/]{1,32}$",
                        "type": "string"
                    },
                    "name": "value",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/Tag"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Projects  Cid  Tags  Value  Put",
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete":
            {
                "tags": ["projects"],
                "summary": "Delete a tag from project",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "delete_project_tag",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Value",
                        "type": "string"
                    },
                    "name": "value",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/projects/{cid}/info":
        {
            "post":
            {
                "tags": ["projects"],
                "summary": "Add/modify info for project",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "modify_project_info",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/Info"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Projects  Cid  Info Post",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/report/{report_type}":
        {
            "get":
            {
                "tags": ["reports"],
                "summary": "Get By Type",
                "description": "(get ReportHandler.get)",
                "operationId": "get_by_type_api_report__report_type__get",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Report Type",
                        "type": "string"
                    },
                    "name": "report_type",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/report/accesslog/types":
        {
            "get":
            {
                "tags": ["reports"],
                "summary": "Get Types",
                "description": "(get ReportHandler.get_types)",
                "operationId": "get_types_api_report_accesslog_types_get",
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    }
                }
            }
        },
        "/api/report/{report_type}/availability":
        {
            "get":
            {
                "tags": ["reports"],
                "summary": "Get Availability",
                "description": "(get ReportHandler.get_availability)",
                "operationId": "get_availability_api_report__report_type__availability_get",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Report Type",
                        "type": "string"
                    },
                    "name": "report_type",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/report/{report_type}/collect":
        {
            "get":
            {
                "tags": ["reports"],
                "summary": "Collect",
                "description": "(get ReportHandler.collect)",
                "operationId": "collect_api_report__report_type__collect_get",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Report Type",
                        "type": "string"
                    },
                    "name": "report_type",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/lookup":
        {
            "post":
            {
                "tags": ["resolve"],
                "summary": "Lookup",
                "description": "RequestHandler.lookup",
                "operationId": "lookup_api_lookup_post",
                "parameters": [
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Full Tree",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "full_tree",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Exhaustive",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "exhaustive",
                    "in": "query"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/ResolveInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/resolve":
        {
            "post":
            {
                "tags": ["resolve"],
                "summary": "Resolve",
                "description": "full_path: applies only to the inputs; it expects the upper case separators\nminattr: Returns only code/label and id\nexhaustive: 'gets all nodes even if you dont have direct permissions",
                "operationId": "resolve_api_resolve_post",
                "parameters": [
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Full Tree",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "full_tree",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Minattr",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "minattr",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Exhaustive",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "exhaustive",
                    "in": "query"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/ResolveInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/roles/actions":
        {
            "get":
            {
                "tags": ["roles"],
                "summary": "Get Actions",
                "operationId": "get_actions_api_roles_actions_get",
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    }
                }
            }
        },
        "/api/roles":
        {
            "get":
            {
                "tags": ["roles"],
                "summary": "Find All",
                "operationId": "find_all_api_roles_get",
                "parameters": [
                {
                    "description": "The filter to apply. (e.g. label=my-label,created>2018-09-22)",
                    "required": false,
                    "schema":
                    {
                        "title": "Filter",
                        "type": "string",
                        "description": "The filter to apply. (e.g. label=my-label,created>2018-09-22)"
                    },
                    "name": "filter",
                    "in": "query"
                },
                {
                    "description": "The sort fields and order.(e.g. label:asc,created:desc)",
                    "required": false,
                    "schema":
                    {
                        "title": "Sort",
                        "type": "string",
                        "description": "The sort fields and order.(e.g. label:asc,created:desc)"
                    },
                    "name": "sort",
                    "in": "query"
                },
                {
                    "description": "The maximum number of entries to return",
                    "required": false,
                    "schema":
                    {
                        "title": "Limit",
                        "type": "integer",
                        "description": "The maximum number of entries to return"
                    },
                    "name": "limit",
                    "in": "query"
                },
                {
                    "description": "The number of entries to skip",
                    "required": false,
                    "schema":
                    {
                        "title": "Skip",
                        "type": "integer",
                        "description": "The number of entries to skip"
                    },
                    "name": "skip",
                    "in": "query"
                },
                {
                    "description": "The page number (i.e. skip limit*page entries)",
                    "required": false,
                    "schema":
                    {
                        "title": "Page",
                        "type": "integer",
                        "description": "The page number (i.e. skip limit*page entries)"
                    },
                    "name": "page",
                    "in": "query"
                },
                {
                    "description": "Paginate after the given id. (Cannot be used with sort, page or skip)",
                    "required": false,
                    "schema":
                    {
                        "title": "After Id",
                        "type": "string",
                        "description": "Paginate after the given id. (Cannot be used with sort, page or skip)"
                    },
                    "name": "after_id",
                    "in": "query"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post":
            {
                "tags": ["roles"],
                "summary": "Create",
                "operationId": "create_api_roles_post",
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/RoleInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/roles/{role_id}":
        {
            "get":
            {
                "tags": ["roles"],
                "summary": "Get By Id",
                "operationId": "get_by_id_api_roles__role_id__get",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Role Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "role_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put":
            {
                "tags": ["roles"],
                "summary": "Modify",
                "operationId": "modify_api_roles__role_id__put",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Role Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "role_id",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/RoleUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete":
            {
                "tags": ["roles"],
                "summary": "Delete",
                "operationId": "delete_api_roles__role_id__delete",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Role Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "role_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/schemas/{schema}":
        {
            "get":
            {
                "tags": ["schemas"],
                "summary": "Get By Id",
                "description": "(get SchemaHandler.get)",
                "operationId": "get_by_id_api_schemas__schema__get",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Schema",
                        "type": "string"
                    },
                    "name": "schema",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/sessions":
        {
            "get":
            {
                "tags": ["sessions"],
                "summary": "Find All",
                "operationId": "find_all_api_sessions_get",
                "parameters": [
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Filter",
                        "type": "string"
                    },
                    "name": "filter",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Sort",
                        "type": "string"
                    },
                    "name": "sort",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Limit",
                        "type": "integer"
                    },
                    "name": "limit",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Skip",
                        "type": "integer"
                    },
                    "name": "skip",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Page",
                        "type": "integer"
                    },
                    "name": "page",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "After Id",
                        "type": "string"
                    },
                    "name": "after_id",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Exhaustive",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "exhaustive",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "X-Accept-Feature",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    },
                    "name": "x-accept-feature",
                    "in": "header"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Find All Api Sessions Get",
                                    "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/Page"
                                    },
                                    {
                                        "type": "array",
                                        "items":
                                        {
                                            "$ref": "#/components/schemas/SessionListOutput"
                                        }
                                    }]
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post":
            {
                "tags": ["sessions"],
                "summary": "Create",
                "operationId": "create_api_sessions_post",
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/SessionInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/sessions/{session_id}":
        {
            "get":
            {
                "tags": ["sessions"],
                "summary": "Get By Id",
                "operationId": "get_by_id_api_sessions__session_id__get",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Session Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "session_id",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "X-Accept-Feature",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    },
                    "name": "x-accept-feature",
                    "in": "header"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/SessionOutput"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put":
            {
                "tags": ["sessions"],
                "summary": "Modify",
                "operationId": "modify_api_sessions__session_id__put",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Session Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "session_id",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/SessionModify"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/ModifiedResult"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete":
            {
                "tags": ["sessions"],
                "summary": "Delete",
                "operationId": "delete_api_sessions__session_id__delete",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Session Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "session_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/sessions/{session_id}/subject":
        {
            "get":
            {
                "tags": ["sessions"],
                "summary": "Get Subject",
                "operationId": "get_subject_api_sessions__session_id__subject_get",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Session Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "session_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/sessions/{session_id}/subject/info":
        {
            "post":
            {
                "tags": ["sessions"],
                "summary": "Modify Subject Info",
                "operationId": "modify_subject_info_api_sessions__session_id__subject_info_post",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Session Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "session_id",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/Info"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/sessions/{session_id}/acquisitions":
        {
            "get":
            {
                "tags": ["sessions"],
                "summary": "Get Acquisitions",
                "operationId": "get_acquisitions_api_sessions__session_id__acquisitions_get",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Session Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "session_id",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Filter",
                        "type": "string"
                    },
                    "name": "filter",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Sort",
                        "type": "string"
                    },
                    "name": "sort",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Limit",
                        "type": "integer"
                    },
                    "name": "limit",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Skip",
                        "type": "integer"
                    },
                    "name": "skip",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Page",
                        "type": "integer"
                    },
                    "name": "page",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "After Id",
                        "type": "string"
                    },
                    "name": "after_id",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Exhaustive",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "exhaustive",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "X-Accept-Feature",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    },
                    "name": "x-accept-feature",
                    "in": "header"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/sessions/{session_id}/jobs":
        {
            "get":
            {
                "tags": ["sessions"],
                "summary": "Get Jobs",
                "operationId": "get_jobs_api_sessions__session_id__jobs_get",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Session Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "session_id",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "States",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    },
                    "name": "states",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Tags",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    },
                    "name": "tags",
                    "in": "query"
                },
                {
                    "description": "The filter to apply. (e.g. label=my-label,created>2018-09-22)",
                    "required": false,
                    "schema":
                    {
                        "title": "Filter",
                        "type": "string",
                        "description": "The filter to apply. (e.g. label=my-label,created>2018-09-22)"
                    },
                    "name": "filter",
                    "in": "query"
                },
                {
                    "description": "The sort fields and order.(e.g. label:asc,created:desc)",
                    "required": false,
                    "schema":
                    {
                        "title": "Sort",
                        "type": "string",
                        "description": "The sort fields and order.(e.g. label:asc,created:desc)"
                    },
                    "name": "sort",
                    "in": "query"
                },
                {
                    "description": "The maximum number of entries to return",
                    "required": false,
                    "schema":
                    {
                        "title": "Limit",
                        "type": "integer",
                        "description": "The maximum number of entries to return"
                    },
                    "name": "limit",
                    "in": "query"
                },
                {
                    "description": "The number of entries to skip",
                    "required": false,
                    "schema":
                    {
                        "title": "Skip",
                        "type": "integer",
                        "description": "The number of entries to skip"
                    },
                    "name": "skip",
                    "in": "query"
                },
                {
                    "description": "The page number (i.e. skip limit*page entries)",
                    "required": false,
                    "schema":
                    {
                        "title": "Page",
                        "type": "integer",
                        "description": "The page number (i.e. skip limit*page entries)"
                    },
                    "name": "page",
                    "in": "query"
                },
                {
                    "description": "Paginate after the given id. (Cannot be used with sort, page or skip)",
                    "required": false,
                    "schema":
                    {
                        "title": "After Id",
                        "type": "string",
                        "description": "Paginate after the given id. (Cannot be used with sort, page or skip)"
                    },
                    "name": "after_id",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "X-Accept-Feature",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    },
                    "name": "x-accept-feature",
                    "in": "header"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Get Jobs Api Sessions  Session Id  Jobs Get",
                                    "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/JobsList"
                                    },
                                    {
                                        "$ref": "#/components/schemas/Page"
                                    }]
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/sessions/{cid}/analyses":
        {
            "get":
            {
                "tags": ["sessions"],
                "summary": "Get all analyses for a session",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "get_session_analyses",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Filter",
                        "type": "string",
                        "default": []
                    },
                    "name": "filter",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Sort",
                        "type": "string"
                    },
                    "name": "sort",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Limit",
                        "type": "integer",
                        "default": 100
                    },
                    "name": "limit",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Skip",
                        "type": "integer",
                        "default": 0
                    },
                    "name": "skip",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Page",
                        "type": "integer"
                    },
                    "name": "page",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "After Id",
                        "type": "string"
                    },
                    "name": "after_id",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Inflate Job",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "inflate_job",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Join Avatars",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "join_avatars",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Join",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "name": "join",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "X-Accept-Feature",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    },
                    "name": "x-accept-feature",
                    "in": "header"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Sessions  Cid  Analyses Get",
                                    "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/Page"
                                    },
                                    {
                                        "type": "array",
                                        "items":
                                        {
                                            "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/AnalysisListOutput"
                                            },
                                            {
                                                "$ref": "#/components/schemas/AnalysisListOutputInflatedJob"
                                            }]
                                        }
                                    }]
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post":
            {
                "tags": ["sessions"],
                "summary": "Add an analysis to a session",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "add_session_analysis",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "title": "Analysis",
                                "anyOf": [
                                {
                                    "$ref": "#/components/schemas/AdhocAnalysisInput"
                                },
                                {
                                    "$ref": "#/components/schemas/JobAnalysisInput"
                                }]
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/InsertedId"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/sessions/{cid}/{sub_cname}/analyses":
        {
            "get":
            {
                "tags": ["sessions"],
                "summary": "Get nested analyses from a session",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "get_session_sub_analyses",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "$ref": "#/components/schemas/SubContainerType"
                    },
                    "name": "sub_cname",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Filter",
                        "type": "string",
                        "default": []
                    },
                    "name": "filter",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Sort",
                        "type": "string"
                    },
                    "name": "sort",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Limit",
                        "type": "integer",
                        "default": 100
                    },
                    "name": "limit",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Skip",
                        "type": "integer",
                        "default": 0
                    },
                    "name": "skip",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Page",
                        "type": "integer"
                    },
                    "name": "page",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "After Id",
                        "type": "string"
                    },
                    "name": "after_id",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Inflate Job",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "inflate_job",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Join Avatars",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "join_avatars",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Join",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "name": "join",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "X-Accept-Feature",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    },
                    "name": "x-accept-feature",
                    "in": "header"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Sessions  Cid   Sub Cname  Analyses Get",
                                    "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/Page"
                                    },
                                    {
                                        "type": "array",
                                        "items":
                                        {
                                            "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/AnalysisListOutput"
                                            },
                                            {
                                                "$ref": "#/components/schemas/AnalysisListOutputInflatedJob"
                                            }]
                                        }
                                    }]
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/sessions/{cid}/analyses/{analysis_id}":
        {
            "get":
            {
                "tags": ["sessions"],
                "summary": "Get an analysis from a session",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "get_session_analysis",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Analysis Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "analysis_id",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Inflate Job",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "inflate_job",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Join Avatars",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "join_avatars",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Join",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "name": "join",
                    "in": "query"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Sessions  Cid  Analyses  Analysis Id  Get",
                                    "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/AnalysisOutputInflatedJob"
                                    },
                                    {
                                        "$ref": "#/components/schemas/AnalysisOutput"
                                    }]
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put":
            {
                "tags": ["sessions"],
                "summary": "Modify an analysis for a session",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "modify_session_analysis",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Analysis Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "analysis_id",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/AnalysisModifyInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/ModifiedResult"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete":
            {
                "tags": ["sessions"],
                "summary": "Delete an analysis from a session",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "delete_session_analysis",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Analysis Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "analysis_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/DeletedResult"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/sessions/{cid}/analyses/{analysis_id}/inputs/{filename}":
        {
            "get":
            {
                "tags": ["sessions"],
                "summary": "Download an analysis input file from a session",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "download_input_from_session_analysis",
                "parameters": [
                {
                    "description": "24-char hex id",
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex id"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "description": "24-char hex analysis id",
                    "required": true,
                    "schema":
                    {
                        "title": "Analysis Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex analysis id"
                    },
                    "name": "analysis_id",
                    "in": "path"
                },
                {
                    "description": "input filename",
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "pattern": ".+",
                        "type": "string",
                        "description": "input filename"
                    },
                    "name": "filename",
                    "in": "path"
                },
                {
                    "description": "24-char hex ticket id",
                    "required": false,
                    "schema":
                    {
                        "title": "Ticket",
                        "type": "string",
                        "description": "24-char hex ticket id"
                    },
                    "name": "ticket",
                    "in": "query"
                },
                {
                    "description": "get file info only",
                    "required": false,
                    "schema":
                    {
                        "title": "Info",
                        "type": "boolean",
                        "description": "get file info only",
                        "default": false
                    },
                    "name": "info",
                    "in": "query"
                },
                {
                    "description": "get zipfile member",
                    "required": false,
                    "schema":
                    {
                        "title": "Member",
                        "pattern": ".+",
                        "type": "string",
                        "description": "get zipfile member"
                    },
                    "name": "member",
                    "in": "query"
                },
                {
                    "description": "feature flag for view/download",
                    "required": false,
                    "schema":
                    {
                        "title": "View",
                        "type": "boolean",
                        "description": "feature flag for view/download",
                        "default": false
                    },
                    "name": "view",
                    "in": "query"
                },
                {
                    "description": "byte ranges to return",
                    "required": false,
                    "schema":
                    {
                        "title": "Range",
                        "type": "string",
                        "description": "byte ranges to return"
                    },
                    "name": "range",
                    "in": "header"
                },
                {
                    "description": "redirect header",
                    "required": false,
                    "schema":
                    {
                        "title": "X-Accept-Feature",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "description": "redirect header"
                    },
                    "name": "x-accept-feature",
                    "in": "header"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Sessions  Cid  Analyses  Analysis Id  Inputs  Filename  Get",
                                    "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/DownloadTicketStub"
                                    },
                                    {
                                        "$ref": "#/components/schemas/ZipfileInfo"
                                    }]
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/sessions/{cid}/analyses/{analysis_id}/files/{filename}":
        {
            "get":
            {
                "tags": ["sessions"],
                "summary": "Download an analysis output file from a session",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "download_output_from_session_analysis",
                "parameters": [
                {
                    "description": "24-char hex id",
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex id"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "description": "24-char hex analysis id",
                    "required": true,
                    "schema":
                    {
                        "title": "Analysis Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex analysis id"
                    },
                    "name": "analysis_id",
                    "in": "path"
                },
                {
                    "description": "output file name",
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "pattern": ".+",
                        "type": "string",
                        "description": "output file name"
                    },
                    "name": "filename",
                    "in": "path"
                },
                {
                    "description": "24-char hex ticket id",
                    "required": false,
                    "schema":
                    {
                        "title": "Ticket",
                        "type": "string",
                        "description": "24-char hex ticket id"
                    },
                    "name": "ticket",
                    "in": "query"
                },
                {
                    "description": "get file info only",
                    "required": false,
                    "schema":
                    {
                        "title": "Info",
                        "type": "boolean",
                        "description": "get file info only",
                        "default": false
                    },
                    "name": "info",
                    "in": "query"
                },
                {
                    "description": "get zipfile member",
                    "required": false,
                    "schema":
                    {
                        "title": "Member",
                        "pattern": ".+",
                        "type": "string",
                        "description": "get zipfile member"
                    },
                    "name": "member",
                    "in": "query"
                },
                {
                    "description": "feature flag for view/download",
                    "required": false,
                    "schema":
                    {
                        "title": "View",
                        "type": "boolean",
                        "description": "feature flag for view/download",
                        "default": false
                    },
                    "name": "view",
                    "in": "query"
                },
                {
                    "description": "byte ranges to return",
                    "required": false,
                    "schema":
                    {
                        "title": "Range",
                        "type": "string",
                        "description": "byte ranges to return"
                    },
                    "name": "range",
                    "in": "header"
                },
                {
                    "description": "redirect header",
                    "required": false,
                    "schema":
                    {
                        "title": "X-Accept-Feature",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "description": "redirect header"
                    },
                    "name": "x-accept-feature",
                    "in": "header"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Sessions  Cid  Analyses  Analysis Id  Files  Filename  Get",
                                    "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/DownloadTicketStub"
                                    },
                                    {
                                        "$ref": "#/components/schemas/ZipfileInfo"
                                    }]
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/sessions/{cid}/analyses/{analysis_id}/files":
        {
            "post":
            {
                "tags": ["sessions"],
                "summary": "Upload an analysis output file to a session",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "upload_output_to_session_analysis",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Analysis Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "analysis_id",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "multipart/form-data":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/Body_partial_api_sessions__cid__analyses__analysis_id__files_post"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Sessions  Cid  Analyses  Analysis Id  Files Post",
                                    "type": "array",
                                    "items":
                                    {
                                        "$ref": "#/components/schemas/File"
                                    }
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/sessions/{cid}/analyses/{analysis_id}/files/{filename}/info":
        {
            "get":
            {
                "tags": ["sessions"],
                "summary": "Get file info from a session",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "get_session_file_info",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "type": "string"
                    },
                    "name": "filename",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Input Fallback",
                        "type": "boolean",
                        "default": true
                    },
                    "name": "input_fallback",
                    "in": "query"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/File"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/sessions/{cid}/analyses/{analysis_id}/inputs/{filename}/info":
        {
            "get":
            {
                "tags": ["sessions"],
                "summary": "Get file info from a session",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "get_session_file_info",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "type": "string"
                    },
                    "name": "filename",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Input Fallback",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "input_fallback",
                    "in": "query"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/File"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/sessions/{cid}/analyses/{analysis_id}/notes":
        {
            "post":
            {
                "tags": ["sessions"],
                "summary": "Add a note to a session",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "add_session_analysis_note",
                "parameters": [
                {
                    "description": "24-char hex id",
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex id"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "description": "24-char hex analysis id",
                    "required": true,
                    "schema":
                    {
                        "title": "Analysis Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex analysis id"
                    },
                    "name": "analysis_id",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "title": "Note",
                                "allOf": [
                                {
                                    "$ref": "#/components/schemas/NoteInput"
                                }],
                                "description": "note content"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/Note"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/sessions/{cid}/analyses/{analysis_id}/notes/{note_id}":
        {
            "delete":
            {
                "tags": ["sessions"],
                "summary": "Delete a note from a session",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "delete_session_analysis_note",
                "parameters": [
                {
                    "description": "24-char hex id",
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex id"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "description": "24-char hex analysis id",
                    "required": true,
                    "schema":
                    {
                        "title": "Analysis Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex analysis id"
                    },
                    "name": "analysis_id",
                    "in": "path"
                },
                {
                    "description": "24-char hex note id",
                    "required": true,
                    "schema":
                    {
                        "title": "Note Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex note id"
                    },
                    "name": "note_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/sessions/{cid}/files":
        {
            "post":
            {
                "tags": ["sessions"],
                "summary": "Upload a file to a session",
                "operationId": "upload_file_to_session",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Ticket",
                        "type": "string"
                    },
                    "name": "ticket",
                    "in": "query"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/sessions/{cid}/files/{filename}":
        {
            "get":
            {
                "tags": ["sessions"],
                "summary": "Download a file from a session",
                "description": "Return an output file or other info.\nParameters\n    ctype (ContainerType)\n    cid (str)           24-char hex id\n    filename (str)      file to return\n    ticket (str)        24-char hex ticket id; if empty, request ticket stub\n    info (bool)         return input zipfile info\n    member (str)        return single member file of input zipfile\n    range (str)         byte range(s)\n    view (bool)         stream file return instead of downloading\n    hash (str)          file hash\n    range (str)         byte range(s) to return\nReturns\n    ticket stub, redirect, zipfile info, zipfile member, or file data",
                "operationId": "download_file_from_session",
                "parameters": [
                {
                    "description": "24-char hex id",
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex id"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "description": "output file name",
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "pattern": ".+",
                        "type": "string",
                        "description": "output file name"
                    },
                    "name": "filename",
                    "in": "path"
                },
                {
                    "description": "24-char hex ticket id",
                    "required": false,
                    "schema":
                    {
                        "title": "Ticket",
                        "type": "string",
                        "description": "24-char hex ticket id"
                    },
                    "name": "ticket",
                    "in": "query"
                },
                {
                    "description": "get file info only",
                    "required": false,
                    "schema":
                    {
                        "title": "Info",
                        "type": "boolean",
                        "description": "get file info only",
                        "default": false
                    },
                    "name": "info",
                    "in": "query"
                },
                {
                    "description": "get zipfile member",
                    "required": false,
                    "schema":
                    {
                        "title": "Member",
                        "pattern": ".+",
                        "type": "string",
                        "description": "get zipfile member"
                    },
                    "name": "member",
                    "in": "query"
                },
                {
                    "description": "feature flag for view/download",
                    "required": false,
                    "schema":
                    {
                        "title": "View",
                        "type": "boolean",
                        "description": "feature flag for view/download",
                        "default": false
                    },
                    "name": "view",
                    "in": "query"
                },
                {
                    "description": "file hash for comparison",
                    "required": false,
                    "schema":
                    {
                        "title": "Hash",
                        "type": "string",
                        "description": "file hash for comparison"
                    },
                    "name": "hash",
                    "in": "query"
                },
                {
                    "description": "byte ranges to return",
                    "required": false,
                    "schema":
                    {
                        "title": "Range",
                        "type": "string",
                        "description": "byte ranges to return"
                    },
                    "name": "range",
                    "in": "header"
                },
                {
                    "description": "redirect header",
                    "required": false,
                    "schema":
                    {
                        "title": "X-Accept-Feature",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "description": "redirect header"
                    },
                    "name": "x-accept-feature",
                    "in": "header"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Download File Api Sessions  Cid  Files  Filename  Get",
                                    "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/DownloadTicketStub"
                                    },
                                    {
                                        "$ref": "#/components/schemas/ZipfileInfo"
                                    }]
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put":
            {
                "tags": ["sessions"],
                "summary": "Modify a file in a session",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "modify_session_file",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "type": "string"
                    },
                    "name": "filename",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/FileModifyInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/File"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post":
            {
                "tags": ["sessions"],
                "summary": "Replace a file in a session",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "replace_session_file",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "type": "string"
                    },
                    "name": "filename",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/FileInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/File"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete":
            {
                "tags": ["sessions"],
                "summary": "Delete a file from a session",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "delete_session_file",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "type": "string"
                    },
                    "name": "filename",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/sessions/{cid}/files/{filename}/info":
        {
            "get":
            {
                "tags": ["sessions"],
                "summary": "Get file info from a session",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "get_session_file_info",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "type": "string"
                    },
                    "name": "filename",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Input Fallback",
                        "type": "boolean",
                        "default": true
                    },
                    "name": "input_fallback",
                    "in": "query"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/File"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post":
            {
                "tags": ["sessions"],
                "summary": "Modify file info for a session",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "modify_session_file_info",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "type": "string"
                    },
                    "name": "filename",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/Info"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Sessions  Cid  Files  Filename  Info Post",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/sessions/{cid}/inputs/{filename}/info":
        {
            "get":
            {
                "tags": ["sessions"],
                "summary": "Get file info from a session",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "get_session_file_info",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "type": "string"
                    },
                    "name": "filename",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Input Fallback",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "input_fallback",
                    "in": "query"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/File"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/sessions/{cid}/files/{filename}/classification":
        {
            "post":
            {
                "tags": ["sessions"],
                "summary": "Modify file classification for a session",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "modify_session_file_classification",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "type": "string"
                    },
                    "name": "filename",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/FileClassification"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Sessions  Cid  Files  Filename  Classification Post",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/sessions/{cid}/notes":
        {
            "post":
            {
                "tags": ["sessions"],
                "summary": "Add a note to a session",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "add_session_note",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/NoteInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/Note"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/sessions/{cid}/notes/{note_id}":
        {
            "get":
            {
                "tags": ["sessions"],
                "summary": "Get a note for a session",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "get_session_note",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Note Id",
                        "type": "string"
                    },
                    "name": "note_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/Note"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put":
            {
                "tags": ["sessions"],
                "summary": "Modify a note for a session",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "modify_session_note",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Note Id",
                        "type": "string"
                    },
                    "name": "note_id",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/NoteInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Sessions  Cid  Notes  Note Id  Put",
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete":
            {
                "tags": ["sessions"],
                "summary": "Delete a note from a session",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "delete_session_note",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Note Id",
                        "type": "string"
                    },
                    "name": "note_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/sessions/{cid}/tags":
        {
            "post":
            {
                "tags": ["sessions"],
                "summary": "Add a tag to session",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "add_session_tag",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/Tag"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Sessions  Cid  Tags Post",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/sessions/{cid}/tags/{value}":
        {
            "get":
            {
                "tags": ["sessions"],
                "summary": "Get a tag from session",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "get_session_tag",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Value",
                        "pattern": "^[^/]{1,32}$",
                        "type": "string"
                    },
                    "name": "value",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Sessions  Cid  Tags  Value  Get",
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put":
            {
                "tags": ["sessions"],
                "summary": "Modify a tag for session",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "rename_session_tag",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Value",
                        "pattern": "^[^/]{1,32}$",
                        "type": "string"
                    },
                    "name": "value",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/Tag"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Sessions  Cid  Tags  Value  Put",
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete":
            {
                "tags": ["sessions"],
                "summary": "Delete a tag from session",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "delete_session_tag",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Value",
                        "type": "string"
                    },
                    "name": "value",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/sessions/{cid}/info":
        {
            "post":
            {
                "tags": ["sessions"],
                "summary": "Add/modify info for session",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "modify_session_info",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/Info"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Sessions  Cid  Info Post",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/site/providers":
        {
            "get":
            {
                "tags": ["site"],
                "summary": "Get All Providers",
                "operationId": "get_all_providers_api_site_providers_get",
                "parameters": [
                {
                    "description": "The filter to apply. (e.g. label=my-label,created>2018-09-22)",
                    "required": false,
                    "schema":
                    {
                        "title": "Filter",
                        "type": "string",
                        "description": "The filter to apply. (e.g. label=my-label,created>2018-09-22)"
                    },
                    "name": "filter",
                    "in": "query"
                },
                {
                    "description": "The sort fields and order.(e.g. label:asc,created:desc)",
                    "required": false,
                    "schema":
                    {
                        "title": "Sort",
                        "type": "string",
                        "description": "The sort fields and order.(e.g. label:asc,created:desc)"
                    },
                    "name": "sort",
                    "in": "query"
                },
                {
                    "description": "The maximum number of entries to return",
                    "required": false,
                    "schema":
                    {
                        "title": "Limit",
                        "type": "integer",
                        "description": "The maximum number of entries to return"
                    },
                    "name": "limit",
                    "in": "query"
                },
                {
                    "description": "The number of entries to skip",
                    "required": false,
                    "schema":
                    {
                        "title": "Skip",
                        "type": "integer",
                        "description": "The number of entries to skip"
                    },
                    "name": "skip",
                    "in": "query"
                },
                {
                    "description": "The page number (i.e. skip limit*page entries)",
                    "required": false,
                    "schema":
                    {
                        "title": "Page",
                        "type": "integer",
                        "description": "The page number (i.e. skip limit*page entries)"
                    },
                    "name": "page",
                    "in": "query"
                },
                {
                    "description": "Paginate after the given id. (Cannot be used with sort, page or skip)",
                    "required": false,
                    "schema":
                    {
                        "title": "After Id",
                        "type": "string",
                        "description": "Paginate after the given id. (Cannot be used with sort, page or skip)"
                    },
                    "name": "after_id",
                    "in": "query"
                },
                {
                    "description": "Filter providers by the specified class",
                    "required": false,
                    "schema":
                    {
                        "$ref": "#/components/schemas/ProviderClass"
                    },
                    "name": "class",
                    "in": "query"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Get All Providers Api Site Providers Get",
                                    "type": "array",
                                    "items":
                                    {
                                        "$ref": "#/components/schemas/EgressProvider"
                                    }
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post":
            {
                "tags": ["site"],
                "summary": "Create Provider",
                "operationId": "create_provider_api_site_providers_post",
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/IngressProvider"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/site/providers/{provider_id}":
        {
            "get":
            {
                "tags": ["site"],
                "summary": "Get Provider",
                "operationId": "get_provider_api_site_providers__provider_id__get",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Provider Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "provider_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put":
            {
                "tags": ["site"],
                "summary": "Modify Provider",
                "operationId": "modify_provider_api_site_providers__provider_id__put",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Provider Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "provider_id",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/IngressUpdateProvider"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/site/providers/{provider_id}/config":
        {
            "get":
            {
                "tags": ["site"],
                "summary": "Get Config",
                "operationId": "get_config_api_site_providers__provider_id__config_get",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Provider Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "provider_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/site/settings":
        {
            "get":
            {
                "tags": ["site"],
                "summary": "Get Settings",
                "operationId": "get_settings_api_site_settings_get",
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    }
                }
            },
            "put":
            {
                "tags": ["site"],
                "summary": "Modify Settings",
                "operationId": "modify_settings_api_site_settings_put",
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/IngressSiteSettings"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/site/settings/ldap-sync":
        {
            "post":
            {
                "tags": ["site"],
                "summary": "Sync Admins",
                "description": "Synchronize site admins based on LDAP update payload\n\nArgs:\n    sync_update: The LDAP sync update (users or sync error)\n    auth_session: The auth session\n\nReturns:\n    LdapSyncResult: The no. of users created/granted/revoked",
                "operationId": "sync_admins_api_site_settings_ldap_sync_post",
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/LdapSyncUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/LdapSyncResult"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/site/rules":
        {
            "get":
            {
                "tags": ["site"],
                "summary": "Get Rules",
                "operationId": "get_rules_api_site_rules_get",
                "parameters": [
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Limit",
                        "type": "integer"
                    },
                    "name": "limit",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "After Id",
                        "type": "string"
                    },
                    "name": "after_id",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Name",
                        "type": "string"
                    },
                    "name": "name",
                    "in": "query"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post":
            {
                "tags": ["site"],
                "summary": "Create Rule",
                "operationId": "create_rule_api_site_rules_post",
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/GearRuleInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/site/rules/{rule_id}":
        {
            "get":
            {
                "tags": ["site"],
                "summary": "Get Rule By Id",
                "operationId": "get_rule_by_id_api_site_rules__rule_id__get",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Rule Id",
                        "type": "string"
                    },
                    "name": "rule_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put":
            {
                "tags": ["site"],
                "summary": "Modify Rule",
                "operationId": "modify_rule_api_site_rules__rule_id__put",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Rule Id",
                        "type": "string"
                    },
                    "name": "rule_id",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/GearRuleModifyInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete":
            {
                "tags": ["site"],
                "summary": "Delete Rule",
                "operationId": "delete_rule_api_site_rules__rule_id__delete",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Rule Id",
                        "type": "string"
                    },
                    "name": "rule_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/subjects":
        {
            "get":
            {
                "tags": ["subjects"],
                "summary": "Find All",
                "description": "get all subjects",
                "operationId": "get_all_subjects",
                "parameters": [
                {
                    "description": "The filter to apply. (e.g. label=my-label,created>2018-09-22)",
                    "required": false,
                    "schema":
                    {
                        "title": "Filter",
                        "type": "string",
                        "description": "The filter to apply. (e.g. label=my-label,created>2018-09-22)"
                    },
                    "name": "filter",
                    "in": "query"
                },
                {
                    "description": "The sort fields and order.(e.g. label:asc,created:desc)",
                    "required": false,
                    "schema":
                    {
                        "title": "Sort",
                        "type": "string",
                        "description": "The sort fields and order.(e.g. label:asc,created:desc)"
                    },
                    "name": "sort",
                    "in": "query"
                },
                {
                    "description": "The maximum number of entries to return",
                    "required": false,
                    "schema":
                    {
                        "title": "Limit",
                        "type": "integer",
                        "description": "The maximum number of entries to return"
                    },
                    "name": "limit",
                    "in": "query"
                },
                {
                    "description": "The number of entries to skip",
                    "required": false,
                    "schema":
                    {
                        "title": "Skip",
                        "type": "integer",
                        "description": "The number of entries to skip"
                    },
                    "name": "skip",
                    "in": "query"
                },
                {
                    "description": "The page number (i.e. skip limit*page entries)",
                    "required": false,
                    "schema":
                    {
                        "title": "Page",
                        "type": "integer",
                        "description": "The page number (i.e. skip limit*page entries)"
                    },
                    "name": "page",
                    "in": "query"
                },
                {
                    "description": "Paginate after the given id. (Cannot be used with sort, page or skip)",
                    "required": false,
                    "schema":
                    {
                        "title": "After Id",
                        "type": "string",
                        "description": "Paginate after the given id. (Cannot be used with sort, page or skip)"
                    },
                    "name": "after_id",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Exhaustive",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "exhaustive",
                    "in": "query"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post":
            {
                "tags": ["subjects"],
                "summary": "Create",
                "description": "create a subject",
                "operationId": "add_subject",
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/SubjectInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/InsertedId"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/subjects/{subject_id}":
        {
            "get":
            {
                "tags": ["subjects"],
                "summary": "Get By Id",
                "description": "get a subject",
                "operationId": "get_subject",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Subject Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "subject_id",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "X-Accept-Feature",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    },
                    "name": "x-accept-feature",
                    "in": "header"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/SubjectOutput"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put":
            {
                "tags": ["subjects"],
                "summary": "Modify",
                "description": "modify a subject",
                "operationId": "modify_subject",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Subject Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "subject_id",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/SubjectModify"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/ModifiedResult"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete":
            {
                "tags": ["subjects"],
                "summary": "Delete",
                "description": "delete a subject",
                "operationId": "delete_subject",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Subject Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "subject_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/subjects/{subject_id}/sessions":
        {
            "get":
            {
                "tags": ["subjects"],
                "summary": "Find Sessions",
                "description": "get sessions for a subject",
                "operationId": "get_subject_sessions",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Subject Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "subject_id",
                    "in": "path"
                },
                {
                    "description": "The filter to apply. (e.g. label=my-label,created>2018-09-22)",
                    "required": false,
                    "schema":
                    {
                        "title": "Filter",
                        "type": "string",
                        "description": "The filter to apply. (e.g. label=my-label,created>2018-09-22)"
                    },
                    "name": "filter",
                    "in": "query"
                },
                {
                    "description": "The sort fields and order.(e.g. label:asc,created:desc)",
                    "required": false,
                    "schema":
                    {
                        "title": "Sort",
                        "type": "string",
                        "description": "The sort fields and order.(e.g. label:asc,created:desc)"
                    },
                    "name": "sort",
                    "in": "query"
                },
                {
                    "description": "The maximum number of entries to return",
                    "required": false,
                    "schema":
                    {
                        "title": "Limit",
                        "type": "integer",
                        "description": "The maximum number of entries to return"
                    },
                    "name": "limit",
                    "in": "query"
                },
                {
                    "description": "The number of entries to skip",
                    "required": false,
                    "schema":
                    {
                        "title": "Skip",
                        "type": "integer",
                        "description": "The number of entries to skip"
                    },
                    "name": "skip",
                    "in": "query"
                },
                {
                    "description": "The page number (i.e. skip limit*page entries)",
                    "required": false,
                    "schema":
                    {
                        "title": "Page",
                        "type": "integer",
                        "description": "The page number (i.e. skip limit*page entries)"
                    },
                    "name": "page",
                    "in": "query"
                },
                {
                    "description": "Paginate after the given id. (Cannot be used with sort, page or skip)",
                    "required": false,
                    "schema":
                    {
                        "title": "After Id",
                        "type": "string",
                        "description": "Paginate after the given id. (Cannot be used with sort, page or skip)"
                    },
                    "name": "after_id",
                    "in": "query"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/subjects/master-code":
        {
            "post":
            {
                "tags": ["subjects"],
                "summary": "Generate Master Code",
                "description": "Generates or updates a master subject code",
                "operationId": "create_subject_master_code",
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "title": "Input",
                                "anyOf": [
                                {
                                    "$ref": "#/components/schemas/MasterSubjectCodeDobInput"
                                },
                                {
                                    "$ref": "#/components/schemas/MasterSubjectCodeInput"
                                }]
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/subjects/master-code/{code}":
        {
            "get":
            {
                "tags": ["subjects"],
                "summary": "Verify Master Code",
                "operationId": "verify_subject_master_code",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Code",
                        "pattern": "^.+$",
                        "type": "string"
                    },
                    "name": "code",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/subjects/{cid}/analyses":
        {
            "get":
            {
                "tags": ["subjects"],
                "summary": "Get all analyses for a subject",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "get_subject_analyses",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Filter",
                        "type": "string",
                        "default": []
                    },
                    "name": "filter",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Sort",
                        "type": "string"
                    },
                    "name": "sort",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Limit",
                        "type": "integer",
                        "default": 100
                    },
                    "name": "limit",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Skip",
                        "type": "integer",
                        "default": 0
                    },
                    "name": "skip",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Page",
                        "type": "integer"
                    },
                    "name": "page",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "After Id",
                        "type": "string"
                    },
                    "name": "after_id",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Inflate Job",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "inflate_job",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Join Avatars",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "join_avatars",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Join",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "name": "join",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "X-Accept-Feature",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    },
                    "name": "x-accept-feature",
                    "in": "header"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Subjects  Cid  Analyses Get",
                                    "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/Page"
                                    },
                                    {
                                        "type": "array",
                                        "items":
                                        {
                                            "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/AnalysisListOutput"
                                            },
                                            {
                                                "$ref": "#/components/schemas/AnalysisListOutputInflatedJob"
                                            }]
                                        }
                                    }]
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post":
            {
                "tags": ["subjects"],
                "summary": "Add an analysis to a subject",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "add_subject_analysis",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "title": "Analysis",
                                "anyOf": [
                                {
                                    "$ref": "#/components/schemas/AdhocAnalysisInput"
                                },
                                {
                                    "$ref": "#/components/schemas/JobAnalysisInput"
                                }]
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/InsertedId"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/subjects/{cid}/{sub_cname}/analyses":
        {
            "get":
            {
                "tags": ["subjects"],
                "summary": "Get nested analyses from a subject",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "get_subject_sub_analyses",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "$ref": "#/components/schemas/SubContainerType"
                    },
                    "name": "sub_cname",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Filter",
                        "type": "string",
                        "default": []
                    },
                    "name": "filter",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Sort",
                        "type": "string"
                    },
                    "name": "sort",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Limit",
                        "type": "integer",
                        "default": 100
                    },
                    "name": "limit",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Skip",
                        "type": "integer",
                        "default": 0
                    },
                    "name": "skip",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Page",
                        "type": "integer"
                    },
                    "name": "page",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "After Id",
                        "type": "string"
                    },
                    "name": "after_id",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Inflate Job",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "inflate_job",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Join Avatars",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "join_avatars",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Join",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "name": "join",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "X-Accept-Feature",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    },
                    "name": "x-accept-feature",
                    "in": "header"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Subjects  Cid   Sub Cname  Analyses Get",
                                    "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/Page"
                                    },
                                    {
                                        "type": "array",
                                        "items":
                                        {
                                            "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/AnalysisListOutput"
                                            },
                                            {
                                                "$ref": "#/components/schemas/AnalysisListOutputInflatedJob"
                                            }]
                                        }
                                    }]
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/subjects/{cid}/analyses/{analysis_id}":
        {
            "get":
            {
                "tags": ["subjects"],
                "summary": "Get an analysis from a subject",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "get_subject_analysis",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Analysis Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "analysis_id",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Inflate Job",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "inflate_job",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Join Avatars",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "join_avatars",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Join",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "name": "join",
                    "in": "query"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Subjects  Cid  Analyses  Analysis Id  Get",
                                    "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/AnalysisOutputInflatedJob"
                                    },
                                    {
                                        "$ref": "#/components/schemas/AnalysisOutput"
                                    }]
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put":
            {
                "tags": ["subjects"],
                "summary": "Modify an analysis for a subject",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "modify_subject_analysis",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Analysis Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "analysis_id",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/AnalysisModifyInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/ModifiedResult"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete":
            {
                "tags": ["subjects"],
                "summary": "Delete an analysis from a subject",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "delete_subject_analysis",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Analysis Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "analysis_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/DeletedResult"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/subjects/{cid}/analyses/{analysis_id}/inputs/{filename}":
        {
            "get":
            {
                "tags": ["subjects"],
                "summary": "Download an analysis input file from a subject",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "download_input_from_subject_analysis",
                "parameters": [
                {
                    "description": "24-char hex id",
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex id"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "description": "24-char hex analysis id",
                    "required": true,
                    "schema":
                    {
                        "title": "Analysis Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex analysis id"
                    },
                    "name": "analysis_id",
                    "in": "path"
                },
                {
                    "description": "input filename",
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "pattern": ".+",
                        "type": "string",
                        "description": "input filename"
                    },
                    "name": "filename",
                    "in": "path"
                },
                {
                    "description": "24-char hex ticket id",
                    "required": false,
                    "schema":
                    {
                        "title": "Ticket",
                        "type": "string",
                        "description": "24-char hex ticket id"
                    },
                    "name": "ticket",
                    "in": "query"
                },
                {
                    "description": "get file info only",
                    "required": false,
                    "schema":
                    {
                        "title": "Info",
                        "type": "boolean",
                        "description": "get file info only",
                        "default": false
                    },
                    "name": "info",
                    "in": "query"
                },
                {
                    "description": "get zipfile member",
                    "required": false,
                    "schema":
                    {
                        "title": "Member",
                        "pattern": ".+",
                        "type": "string",
                        "description": "get zipfile member"
                    },
                    "name": "member",
                    "in": "query"
                },
                {
                    "description": "feature flag for view/download",
                    "required": false,
                    "schema":
                    {
                        "title": "View",
                        "type": "boolean",
                        "description": "feature flag for view/download",
                        "default": false
                    },
                    "name": "view",
                    "in": "query"
                },
                {
                    "description": "byte ranges to return",
                    "required": false,
                    "schema":
                    {
                        "title": "Range",
                        "type": "string",
                        "description": "byte ranges to return"
                    },
                    "name": "range",
                    "in": "header"
                },
                {
                    "description": "redirect header",
                    "required": false,
                    "schema":
                    {
                        "title": "X-Accept-Feature",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "description": "redirect header"
                    },
                    "name": "x-accept-feature",
                    "in": "header"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Subjects  Cid  Analyses  Analysis Id  Inputs  Filename  Get",
                                    "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/DownloadTicketStub"
                                    },
                                    {
                                        "$ref": "#/components/schemas/ZipfileInfo"
                                    }]
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/subjects/{cid}/analyses/{analysis_id}/files/{filename}":
        {
            "get":
            {
                "tags": ["subjects"],
                "summary": "Download an analysis output file from a subject",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "download_output_from_subject_analysis",
                "parameters": [
                {
                    "description": "24-char hex id",
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex id"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "description": "24-char hex analysis id",
                    "required": true,
                    "schema":
                    {
                        "title": "Analysis Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex analysis id"
                    },
                    "name": "analysis_id",
                    "in": "path"
                },
                {
                    "description": "output file name",
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "pattern": ".+",
                        "type": "string",
                        "description": "output file name"
                    },
                    "name": "filename",
                    "in": "path"
                },
                {
                    "description": "24-char hex ticket id",
                    "required": false,
                    "schema":
                    {
                        "title": "Ticket",
                        "type": "string",
                        "description": "24-char hex ticket id"
                    },
                    "name": "ticket",
                    "in": "query"
                },
                {
                    "description": "get file info only",
                    "required": false,
                    "schema":
                    {
                        "title": "Info",
                        "type": "boolean",
                        "description": "get file info only",
                        "default": false
                    },
                    "name": "info",
                    "in": "query"
                },
                {
                    "description": "get zipfile member",
                    "required": false,
                    "schema":
                    {
                        "title": "Member",
                        "pattern": ".+",
                        "type": "string",
                        "description": "get zipfile member"
                    },
                    "name": "member",
                    "in": "query"
                },
                {
                    "description": "feature flag for view/download",
                    "required": false,
                    "schema":
                    {
                        "title": "View",
                        "type": "boolean",
                        "description": "feature flag for view/download",
                        "default": false
                    },
                    "name": "view",
                    "in": "query"
                },
                {
                    "description": "byte ranges to return",
                    "required": false,
                    "schema":
                    {
                        "title": "Range",
                        "type": "string",
                        "description": "byte ranges to return"
                    },
                    "name": "range",
                    "in": "header"
                },
                {
                    "description": "redirect header",
                    "required": false,
                    "schema":
                    {
                        "title": "X-Accept-Feature",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "description": "redirect header"
                    },
                    "name": "x-accept-feature",
                    "in": "header"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Subjects  Cid  Analyses  Analysis Id  Files  Filename  Get",
                                    "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/DownloadTicketStub"
                                    },
                                    {
                                        "$ref": "#/components/schemas/ZipfileInfo"
                                    }]
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/subjects/{cid}/analyses/{analysis_id}/files":
        {
            "post":
            {
                "tags": ["subjects"],
                "summary": "Upload an analysis output file to a subject",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "upload_output_to_subject_analysis",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Analysis Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "analysis_id",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "multipart/form-data":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/Body_partial_api_subjects__cid__analyses__analysis_id__files_post"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Subjects  Cid  Analyses  Analysis Id  Files Post",
                                    "type": "array",
                                    "items":
                                    {
                                        "$ref": "#/components/schemas/File"
                                    }
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/subjects/{cid}/analyses/{analysis_id}/files/{filename}/info":
        {
            "get":
            {
                "tags": ["subjects"],
                "summary": "Get file info from a subject",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "get_subject_file_info",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "type": "string"
                    },
                    "name": "filename",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Input Fallback",
                        "type": "boolean",
                        "default": true
                    },
                    "name": "input_fallback",
                    "in": "query"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/File"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/subjects/{cid}/analyses/{analysis_id}/inputs/{filename}/info":
        {
            "get":
            {
                "tags": ["subjects"],
                "summary": "Get file info from a subject",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "get_subject_file_info",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "type": "string"
                    },
                    "name": "filename",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Input Fallback",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "input_fallback",
                    "in": "query"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/File"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/subjects/{cid}/analyses/{analysis_id}/notes":
        {
            "post":
            {
                "tags": ["subjects"],
                "summary": "Add a note to a subject",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "add_subject_analysis_note",
                "parameters": [
                {
                    "description": "24-char hex id",
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex id"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "description": "24-char hex analysis id",
                    "required": true,
                    "schema":
                    {
                        "title": "Analysis Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex analysis id"
                    },
                    "name": "analysis_id",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "title": "Note",
                                "allOf": [
                                {
                                    "$ref": "#/components/schemas/NoteInput"
                                }],
                                "description": "note content"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/Note"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/subjects/{cid}/analyses/{analysis_id}/notes/{note_id}":
        {
            "delete":
            {
                "tags": ["subjects"],
                "summary": "Delete a note from a subject",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "delete_subject_analysis_note",
                "parameters": [
                {
                    "description": "24-char hex id",
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex id"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "description": "24-char hex analysis id",
                    "required": true,
                    "schema":
                    {
                        "title": "Analysis Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex analysis id"
                    },
                    "name": "analysis_id",
                    "in": "path"
                },
                {
                    "description": "24-char hex note id",
                    "required": true,
                    "schema":
                    {
                        "title": "Note Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex note id"
                    },
                    "name": "note_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/subjects/{cid}/files":
        {
            "post":
            {
                "tags": ["subjects"],
                "summary": "Upload a file to a subject",
                "operationId": "upload_file_to_subject",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Ticket",
                        "type": "string"
                    },
                    "name": "ticket",
                    "in": "query"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/subjects/{cid}/files/{filename}":
        {
            "get":
            {
                "tags": ["subjects"],
                "summary": "Download a file from a subject",
                "description": "Return an output file or other info.\nParameters\n    ctype (ContainerType)\n    cid (str)           24-char hex id\n    filename (str)      file to return\n    ticket (str)        24-char hex ticket id; if empty, request ticket stub\n    info (bool)         return input zipfile info\n    member (str)        return single member file of input zipfile\n    range (str)         byte range(s)\n    view (bool)         stream file return instead of downloading\n    hash (str)          file hash\n    range (str)         byte range(s) to return\nReturns\n    ticket stub, redirect, zipfile info, zipfile member, or file data",
                "operationId": "download_file_from_subject",
                "parameters": [
                {
                    "description": "24-char hex id",
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string",
                        "description": "24-char hex id"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "description": "output file name",
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "pattern": ".+",
                        "type": "string",
                        "description": "output file name"
                    },
                    "name": "filename",
                    "in": "path"
                },
                {
                    "description": "24-char hex ticket id",
                    "required": false,
                    "schema":
                    {
                        "title": "Ticket",
                        "type": "string",
                        "description": "24-char hex ticket id"
                    },
                    "name": "ticket",
                    "in": "query"
                },
                {
                    "description": "get file info only",
                    "required": false,
                    "schema":
                    {
                        "title": "Info",
                        "type": "boolean",
                        "description": "get file info only",
                        "default": false
                    },
                    "name": "info",
                    "in": "query"
                },
                {
                    "description": "get zipfile member",
                    "required": false,
                    "schema":
                    {
                        "title": "Member",
                        "pattern": ".+",
                        "type": "string",
                        "description": "get zipfile member"
                    },
                    "name": "member",
                    "in": "query"
                },
                {
                    "description": "feature flag for view/download",
                    "required": false,
                    "schema":
                    {
                        "title": "View",
                        "type": "boolean",
                        "description": "feature flag for view/download",
                        "default": false
                    },
                    "name": "view",
                    "in": "query"
                },
                {
                    "description": "file hash for comparison",
                    "required": false,
                    "schema":
                    {
                        "title": "Hash",
                        "type": "string",
                        "description": "file hash for comparison"
                    },
                    "name": "hash",
                    "in": "query"
                },
                {
                    "description": "byte ranges to return",
                    "required": false,
                    "schema":
                    {
                        "title": "Range",
                        "type": "string",
                        "description": "byte ranges to return"
                    },
                    "name": "range",
                    "in": "header"
                },
                {
                    "description": "redirect header",
                    "required": false,
                    "schema":
                    {
                        "title": "X-Accept-Feature",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "description": "redirect header"
                    },
                    "name": "x-accept-feature",
                    "in": "header"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Download File Api Subjects  Cid  Files  Filename  Get",
                                    "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/DownloadTicketStub"
                                    },
                                    {
                                        "$ref": "#/components/schemas/ZipfileInfo"
                                    }]
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put":
            {
                "tags": ["subjects"],
                "summary": "Modify a file in a subject",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "modify_subject_file",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "type": "string"
                    },
                    "name": "filename",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/FileModifyInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/File"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post":
            {
                "tags": ["subjects"],
                "summary": "Replace a file in a subject",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "replace_subject_file",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "type": "string"
                    },
                    "name": "filename",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/FileInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/File"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete":
            {
                "tags": ["subjects"],
                "summary": "Delete a file from a subject",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "delete_subject_file",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "type": "string"
                    },
                    "name": "filename",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/subjects/{cid}/files/{filename}/info":
        {
            "get":
            {
                "tags": ["subjects"],
                "summary": "Get file info from a subject",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "get_subject_file_info",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "type": "string"
                    },
                    "name": "filename",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Input Fallback",
                        "type": "boolean",
                        "default": true
                    },
                    "name": "input_fallback",
                    "in": "query"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/File"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post":
            {
                "tags": ["subjects"],
                "summary": "Modify file info for a subject",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "modify_subject_file_info",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "type": "string"
                    },
                    "name": "filename",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/Info"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Subjects  Cid  Files  Filename  Info Post",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/subjects/{cid}/inputs/{filename}/info":
        {
            "get":
            {
                "tags": ["subjects"],
                "summary": "Get file info from a subject",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "get_subject_file_info",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "type": "string"
                    },
                    "name": "filename",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Input Fallback",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "input_fallback",
                    "in": "query"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/File"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/subjects/{cid}/files/{filename}/classification":
        {
            "post":
            {
                "tags": ["subjects"],
                "summary": "Modify file classification for a subject",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "modify_subject_file_classification",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Filename",
                        "type": "string"
                    },
                    "name": "filename",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/FileClassification"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Subjects  Cid  Files  Filename  Classification Post",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/subjects/{cid}/notes":
        {
            "post":
            {
                "tags": ["subjects"],
                "summary": "Add a note to a subject",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "add_subject_note",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/NoteInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/Note"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/subjects/{cid}/notes/{note_id}":
        {
            "get":
            {
                "tags": ["subjects"],
                "summary": "Get a note for a subject",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "get_subject_note",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Note Id",
                        "type": "string"
                    },
                    "name": "note_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/Note"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put":
            {
                "tags": ["subjects"],
                "summary": "Modify a note for a subject",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "modify_subject_note",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Note Id",
                        "type": "string"
                    },
                    "name": "note_id",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/NoteInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Subjects  Cid  Notes  Note Id  Put",
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete":
            {
                "tags": ["subjects"],
                "summary": "Delete a note from a subject",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "delete_subject_note",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Note Id",
                        "type": "string"
                    },
                    "name": "note_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/subjects/{cid}/tags":
        {
            "post":
            {
                "tags": ["subjects"],
                "summary": "Add a tag to subject",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "add_subject_tag",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/Tag"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Subjects  Cid  Tags Post",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/subjects/{cid}/tags/{value}":
        {
            "get":
            {
                "tags": ["subjects"],
                "summary": "Get a tag from subject",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "get_subject_tag",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Value",
                        "pattern": "^[^/]{1,32}$",
                        "type": "string"
                    },
                    "name": "value",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Subjects  Cid  Tags  Value  Get",
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put":
            {
                "tags": ["subjects"],
                "summary": "Modify a tag for subject",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "rename_subject_tag",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Value",
                        "pattern": "^[^/]{1,32}$",
                        "type": "string"
                    },
                    "name": "value",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/Tag"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Subjects  Cid  Tags  Value  Put",
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete":
            {
                "tags": ["subjects"],
                "summary": "Delete a tag from subject",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "delete_subject_tag",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Value",
                        "type": "string"
                    },
                    "name": "value",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/subjects/{cid}/info":
        {
            "post":
            {
                "tags": ["subjects"],
                "summary": "Add/modify info for subject",
                "description": "partial(func, *args, **keywords) - new function with partial application\nof the given arguments and keywords.",
                "operationId": "modify_subject_info",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cid",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name": "cid",
                    "in": "path"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/Info"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Partial Api Subjects  Cid  Info Post",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/system":
        {
            "get":
            {
                "tags": ["system"],
                "summary": "Get All",
                "operationId": "get_all_api_system_get",
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    }
                }
            }
        },
        "/api/systemready":
        {
            "get":
            {
                "tags": ["system"],
                "summary": "Get Ready",
                "operationId": "get_ready_api_systemready_get",
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    }
                }
            }
        },
        "/api/tree":
        {
            "post":
            {
                "tags": ["tree"],
                "summary": "Query",
                "operationId": "query_api_tree_post",
                "parameters": [
                {
                    "description": "The filter to apply. (e.g. label=my-label,created>2018-09-22)",
                    "required": false,
                    "schema":
                    {
                        "title": "Filter",
                        "type": "string",
                        "description": "The filter to apply. (e.g. label=my-label,created>2018-09-22)"
                    },
                    "name": "filter",
                    "in": "query"
                },
                {
                    "description": "The sort fields and order.(e.g. label:asc,created:desc)",
                    "required": false,
                    "schema":
                    {
                        "title": "Sort",
                        "type": "string",
                        "description": "The sort fields and order.(e.g. label:asc,created:desc)"
                    },
                    "name": "sort",
                    "in": "query"
                },
                {
                    "description": "The maximum number of entries to return",
                    "required": false,
                    "schema":
                    {
                        "title": "Limit",
                        "type": "integer",
                        "description": "The maximum number of entries to return"
                    },
                    "name": "limit",
                    "in": "query"
                },
                {
                    "description": "The number of entries to skip",
                    "required": false,
                    "schema":
                    {
                        "title": "Skip",
                        "type": "integer",
                        "description": "The number of entries to skip"
                    },
                    "name": "skip",
                    "in": "query"
                },
                {
                    "description": "The page number (i.e. skip limit*page entries)",
                    "required": false,
                    "schema":
                    {
                        "title": "Page",
                        "type": "integer",
                        "description": "The page number (i.e. skip limit*page entries)"
                    },
                    "name": "page",
                    "in": "query"
                },
                {
                    "description": "Paginate after the given id. (Cannot be used with sort, page or skip)",
                    "required": false,
                    "schema":
                    {
                        "title": "After Id",
                        "type": "string",
                        "description": "Paginate after the given id. (Cannot be used with sort, page or skip)"
                    },
                    "name": "after_id",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Exhaustive",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "exhaustive",
                    "in": "query"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/GraphFilter"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tree/graph":
        {
            "get":
            {
                "tags": ["tree"],
                "summary": "Get Graph",
                "description": "(get container.handlers.TreeHandler.get_graph)",
                "operationId": "get_graph_api_tree_graph_get",
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    }
                }
            }
        },
        "/api/triggers/virus-scan":
        {
            "post":
            {
                "tags": ["triggers"],
                "summary": "Virus Scan",
                "description": "triggers.handlers.VirusScanTriggerHandler.post",
                "operationId": "virus_scan_api_triggers_virus_scan_post",
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/Config"
                            }
                        }
                    }
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/uids":
        {
            "post":
            {
                "tags": ["uids"],
                "summary": "Check Uids",
                "operationId": "check_uids_api_uids_post",
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "title": "Inputs",
                                "anyOf": [
                                {
                                    "$ref": "#/components/schemas/UidCheckInputSessions"
                                },
                                {
                                    "$ref": "#/components/schemas/UidCheckInputAcquisitions"
                                }]
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/UidCheckOutput"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/uids/projects":
        {
            "post":
            {
                "tags": ["uids"],
                "summary": "Check Uids With Projects",
                "operationId": "check_uids_with_projects_api_uids_projects_post",
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "title": "Inputs",
                                "anyOf": [
                                {
                                    "$ref": "#/components/schemas/UidCheckInputSessions"
                                },
                                {
                                    "$ref": "#/components/schemas/UidCheckInputAcquisitions"
                                }]
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Check Uids With Projects Api Uids Projects Post",
                                    "type": "object",
                                    "additionalProperties":
                                    {
                                        "$ref": "#/components/schemas/UidCheckOutput"
                                    }
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/upload/label":
        {
            "post":
            {
                "tags": ["files", "upload"],
                "summary": "Multipart form upload with N file fields, each with their desired filename.",
                "description": "Label Upload",
                "operationId": "upload_by_label",
                "parameters": [
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Ticket",
                        "type": "string"
                    },
                    "name": "ticket",
                    "in": "query"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Label Api Upload Label Post",
                                    "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/UploadTicketOutput"
                                    },
                                    {
                                        "type": "array",
                                        "items":
                                        {
                                            "$ref": "#/components/schemas/File"
                                        }
                                    }]
                                }
                            }
                        }
                    },
                    "204":
                    {
                        "description": "No Content"
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/upload/uid":
        {
            "post":
            {
                "tags": ["files", "upload"],
                "summary": "Multipart form upload with N file fields, each with their desired filename.",
                "description": "UID Upload",
                "operationId": "upload_by_uid",
                "parameters": [
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Ticket",
                        "type": "string"
                    },
                    "name": "ticket",
                    "in": "query"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Uid Api Upload Uid Post",
                                    "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/UploadTicketOutput"
                                    },
                                    {
                                        "type": "array",
                                        "items":
                                        {
                                            "$ref": "#/components/schemas/File"
                                        }
                                    }]
                                }
                            }
                        }
                    },
                    "204":
                    {
                        "description": "No Content"
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/upload/reaper":
        {
            "post":
            {
                "tags": ["files", "upload"],
                "summary": "Bottom-up UID matching of Multipart form upload with N file fields, each with their desired filename.",
                "description": "Reaper Upload",
                "operationId": "upload_by_reaper",
                "parameters": [
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Ticket",
                        "type": "string"
                    },
                    "name": "ticket",
                    "in": "query"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Reaper Api Upload Reaper Post",
                                    "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/UploadTicketOutput"
                                    },
                                    {
                                        "type": "array",
                                        "items":
                                        {
                                            "$ref": "#/components/schemas/File"
                                        }
                                    }]
                                }
                            }
                        }
                    },
                    "204":
                    {
                        "description": "No Content"
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/upload/uid-match":
        {
            "post":
            {
                "tags": ["files", "upload"],
                "summary": "Multipart form upload with N file fields, each with their desired filename.",
                "operationId": "upload_match_uid",
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    }
                },
                "deprecated": true
            }
        },
        "/api/users":
        {
            "get":
            {
                "tags": ["users"],
                "summary": "Get a list of all users",
                "description": "Gets all users with pagination\n\nArgs:",
                "operationId": "get_all_users",
                "parameters": [
                {
                    "description": "The filter to apply. (e.g. label=my-label,created>2018-09-22)",
                    "required": false,
                    "schema":
                    {
                        "title": "Filter",
                        "type": "string",
                        "description": "The filter to apply. (e.g. label=my-label,created>2018-09-22)",
                        "default": []
                    },
                    "name": "filter",
                    "in": "query"
                },
                {
                    "description": "The sort fields and order.(e.g. label:asc,created:desc)",
                    "required": false,
                    "schema":
                    {
                        "title": "Sort",
                        "type": "string",
                        "description": "The sort fields and order.(e.g. label:asc,created:desc)"
                    },
                    "name": "sort",
                    "in": "query"
                },
                {
                    "description": "The maximum number of entries to return",
                    "required": false,
                    "schema":
                    {
                        "title": "Limit",
                        "minimum": 0.0,
                        "type": "integer",
                        "description": "The maximum number of entries to return",
                        "default": 100
                    },
                    "name": "limit",
                    "in": "query"
                },
                {
                    "description": "The number of entries to skip",
                    "required": false,
                    "schema":
                    {
                        "title": "Skip",
                        "minimum": 0.0,
                        "type": "integer",
                        "description": "The number of entries to skip",
                        "default": 0
                    },
                    "name": "skip",
                    "in": "query"
                },
                {
                    "description": "The page number (i.e. skip limit*page entries)",
                    "required": false,
                    "schema":
                    {
                        "title": "Page",
                        "minimum": 0.0,
                        "type": "integer",
                        "description": "The page number (i.e. skip limit*page entries)"
                    },
                    "name": "page",
                    "in": "query"
                },
                {
                    "description": "Paginate after the given id. (Cannot be used with sort, page or skip)",
                    "required": false,
                    "schema":
                    {
                        "title": "After Id",
                        "type": "string",
                        "description": "Paginate after the given id. (Cannot be used with sort, page or skip)"
                    },
                    "name": "after_id",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "X-Accept-Feature",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    },
                    "name": "x-accept-feature",
                    "in": "header"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Get Users Api Users Get",
                                    "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/OutputUserPage"
                                    },
                                    {
                                        "type": "array",
                                        "items":
                                        {
                                            "$ref": "#/components/schemas/UserOutput"
                                        }
                                    }]
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post":
            {
                "tags": ["users"],
                "summary": "Add a new user",
                "description": "Creates a new user and returns the newly create user\n\nArgs:\n    params (UserInput): data model representing input data to create a new user\n\nReturns:\n    UserOutput: data model representing user excluding sensitive data",
                "operationId": "add_user",
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/UserInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/UserOutput"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/self":
        {
            "get":
            {
                "tags": ["users"],
                "summary": "Get info on the current user",
                "description": "gets current user\n\nArgs:\n    auth_session (AuthSession): session from incoming request\nReturns:\n    SelfUserOutput: Pydantic model for client side user data",
                "operationId": "get_current_user",
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/CurrentUserOutput"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/self/avatar":
        {
            "get":
            {
                "tags": ["users"],
                "summary": "Get avatar of the current user",
                "description": "Gets avatar of current user\n\nArgs:\n    auth_session (AuthSession): session from incoming request\nReturns:\n    str: url of avatar",
                "operationId": "get_current_user_avatar",
                "parameters": [
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Default",
                        "type": "string"
                    },
                    "name": "default",
                    "in": "query"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/self/key":
        {
            "post":
            {
                "tags": ["users"],
                "summary": "Generates user api key",
                "description": "Generates user api key\n\nArgs:\n    auth_session (AuthSession): auth session of user\nReturns:\n    UserApiKey (UserApiKey): Pydantic model representing api key",
                "operationId": "get_current_user_key",
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/ApiKey"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/self/info":
        {
            "get":
            {
                "tags": ["users"],
                "summary": "Get info on the current user",
                "description": "Gets user info fields.\n\nArgs:\n    fields (str): csv of arbitrary keys to look for in user info\n    auth_session (AuthSession): session from incoming request\nReturns:\n    dict: arbitrary data matching the provided csv values",
                "operationId": "get_current_user_info",
                "parameters": [
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Fields",
                        "type": "string"
                    },
                    "name": "fields",
                    "in": "query"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Get User Info Api Users Self Info Get",
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post":
            {
                "tags": ["users"],
                "summary": "Update info on the current user",
                "description": "Modifies user info fields\n\nArgs:\n    info (Info): Model representing arbitrary data\n    auth_session (AuthSession): session from incoming request\nReturns:\n    None",
                "operationId": "modify_current_user_info",
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/Info"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/self/jobs":
        {
            "get":
            {
                "tags": ["users"],
                "summary": "Get list of jobs created by the current user",
                "description": "Gets jobs assigned to user with optional gear name regex\n\nArgs:\n    gear_name (str): name of gear to filter by\n    auth_session (AuthSession): session from incoming request\nReturns:\n    list: List of jobs linked to the user",
                "operationId": "get_current_user_jobs",
                "parameters": [
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Gear",
                        "pattern": "^[a-z0-9\\-]+$",
                        "type": "string"
                    },
                    "name": "gear",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Filter",
                        "type": "string",
                        "default": []
                    },
                    "name": "filter",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Sort",
                        "type": "string"
                    },
                    "name": "sort",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Limit",
                        "type": "integer",
                        "default": 100
                    },
                    "name": "limit",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Skip",
                        "type": "integer",
                        "default": 0
                    },
                    "name": "skip",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Page",
                        "type": "integer"
                    },
                    "name": "page",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "After Id",
                        "type": "string"
                    },
                    "name": "after_id",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Exhaustive",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "exhaustive",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "X-Accept-Feature",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    },
                    "name": "x-accept-feature",
                    "in": "header"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Get Jobs Api Users Self Jobs Get",
                                    "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/UserJobs"
                                    },
                                    {
                                        "type": "array",
                                        "items":
                                        {
                                            "type": "object"
                                        }
                                    }]
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/{uid}":
        {
            "get":
            {
                "tags": ["users"],
                "summary": "Get info on a user",
                "description": "Get user by id\n\nArgs:\n    uid (str): string matching uid pattern\nReturns:\n    UserOutput: Pydantic model for sending data to client",
                "operationId": "get_user",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Uid",
                        "pattern": "[0-9a-zA-Z.@_-]*",
                        "type": "string"
                    },
                    "name": "uid",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/UserOutput"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put":
            {
                "tags": ["users"],
                "summary": "Modify",
                "description": "Modifies user with a provided user id\n\nArgs:\n    uid (str): string matching uid pattern\n    params (ModifyUserInput): optional allowed data to update in db\nReturns:\n    UserOutput:  UserOutput: Pydantic model for sending data to client",
                "operationId": "modify_user",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Uid",
                        "pattern": "[0-9a-zA-Z.@_-]*",
                        "type": "string"
                    },
                    "name": "uid",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Clear Permissions",
                        "type": "boolean",
                        "default": false
                    },
                    "name": "clear_permissions",
                    "in": "query"
                }],
                "requestBody":
                {
                    "content":
                    {
                        "application/json":
                        {
                            "schema":
                            {
                                "$ref": "#/components/schemas/ModifyUserInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/ModifiedResult"
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete":
            {
                "tags": ["users"],
                "summary": "Delete",
                "description": "Deletes user by id\n\nArgs:\n     uid (str): string matching uid pattern\n\nReturns:\n    None",
                "operationId": "delete_user",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Uid",
                        "pattern": "[0-9a-zA-Z.@_-]*",
                        "type": "string"
                    },
                    "name": "uid",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/{uid}/groups":
        {
            "get":
            {
                "tags": ["users"],
                "summary": "Get groups of which a user is a member",
                "description": "gets all groups that user belongs to\nArgs:\n    uid (str): user oid\n    auth_session (AuthSession): auth session of user\n    exhaustive (bool): return full list if correct permissions\n    filter (str): filter groups by\n    sort (str): sort groups\n    limit (int): max number of documents\n    skip (int): documents to skip\n    x_accept_feature (list): list of headers\n    page (int): what page number to return\n    after_id (str): start pagination after id\nReturns:\n    list: list of all groups that user belongs to\n    page: Page of groups that user belongs to",
                "operationId": "get_user_groups",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Uid",
                        "pattern": "[0-9a-zA-Z.@_-]*",
                        "type": "string"
                    },
                    "name": "uid",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Exhaustive",
                        "type": "boolean"
                    },
                    "name": "exhaustive",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Filter",
                        "type": "string",
                        "default": []
                    },
                    "name": "filter",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Sort",
                        "type": "string"
                    },
                    "name": "sort",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Limit",
                        "type": "integer",
                        "default": 100
                    },
                    "name": "limit",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Skip",
                        "type": "integer",
                        "default": 0
                    },
                    "name": "skip",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Page",
                        "type": "integer"
                    },
                    "name": "page",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "After Id",
                        "type": "string"
                    },
                    "name": "after_id",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "X-Accept-Feature",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    },
                    "name": "x-accept-feature",
                    "in": "header"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Get User Groups Api Users  Uid  Groups Get",
                                    "type": "array",
                                    "items":
                                    {
                                        "$ref": "#/components/schemas/GroupOutput"
                                    }
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/{uid}/avatar":
        {
            "get":
            {
                "tags": ["users"],
                "summary": "Get avatar of a user",
                "description": "gets avatar of user and redirects to it\n\nArgs:\n    uid (str): user id matching uid regex\nReturns:\n    RedirectResponse: redirects user to avatar\nRaises (ResourceNotFound): Raises 404 if no user avatar",
                "operationId": "get_user_avatar",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Uid",
                        "pattern": "[0-9a-zA-Z.@_-]*",
                        "type": "string"
                    },
                    "name": "uid",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Default",
                        "type": "string"
                    },
                    "name": "default",
                    "in": "query"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/{uid}/acquisitions":
        {
            "get":
            {
                "tags": ["users"],
                "summary": "Get acquisitions of which a user is a member",
                "description": "Gets all user acquisitions\n\nArgs:\n     uid (str): user id matching uid regex\nReturns:\n    list: list of acquisitions",
                "operationId": "get_user_acquisitions",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Uid",
                        "pattern": "[0-9a-zA-Z.@_-]*",
                        "type": "string"
                    },
                    "name": "uid",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Filter",
                        "type": "string",
                        "default": []
                    },
                    "name": "filter",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Sort",
                        "type": "string"
                    },
                    "name": "sort",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Limit",
                        "type": "integer",
                        "default": 100
                    },
                    "name": "limit",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Skip",
                        "type": "integer",
                        "default": 0
                    },
                    "name": "skip",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Page",
                        "type": "integer"
                    },
                    "name": "page",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Exhaustive",
                        "type": "boolean"
                    },
                    "name": "exhaustive",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "After Id",
                        "type": "string"
                    },
                    "name": "after_id",
                    "in": "query"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Find User Acquisitions Api Users  Uid  Acquisitions Get",
                                    "type": "array",
                                    "items":
                                    {
                                        "$ref": "#/components/schemas/Acquisition"
                                    }
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/{user_id}/collections":
        {
            "get":
            {
                "tags": ["users"],
                "summary": "Get collections that belong to given user",
                "operationId": "get_user_collections",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "User Id",
                        "pattern": "[0-9a-zA-Z.@_-]*",
                        "type": "string"
                    },
                    "name": "user_id",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Filter",
                        "type": "string",
                        "default": []
                    },
                    "name": "filter",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Sort",
                        "type": "string"
                    },
                    "name": "sort",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Limit",
                        "type": "integer",
                        "default": 100
                    },
                    "name": "limit",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Skip",
                        "type": "integer",
                        "default": 0
                    },
                    "name": "skip",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Page",
                        "type": "integer"
                    },
                    "name": "page",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "After Id",
                        "type": "string"
                    },
                    "name": "after_id",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "X-Accept-Feature",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    },
                    "name": "x-accept-feature",
                    "in": "header"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Find User Collections Api Users  User Id  Collections Get",
                                    "anyOf": [
                                    {
                                        "type": "array",
                                        "items":
                                        {
                                            "$ref": "#/components/schemas/Collection"
                                        }
                                    },
                                    {
                                        "$ref": "#/components/schemas/Page"
                                    }]
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/{uid}/projects":
        {
            "get":
            {
                "tags": ["users"],
                "summary": "Get projects that belong to given user",
                "description": "Gets all user projects\n\nArgs:\n    uid (str): user id matching uid regex\nReturns:\n   list: list of projects",
                "operationId": "get_user_projects",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Uid",
                        "pattern": "[0-9a-zA-Z.@_-]*",
                        "type": "string"
                    },
                    "name": "uid",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Filter",
                        "type": "string",
                        "default": []
                    },
                    "name": "filter",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Sort",
                        "type": "string"
                    },
                    "name": "sort",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Limit",
                        "type": "integer",
                        "default": 100
                    },
                    "name": "limit",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Skip",
                        "type": "integer",
                        "default": 0
                    },
                    "name": "skip",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Page",
                        "type": "integer"
                    },
                    "name": "page",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "After Id",
                        "type": "string"
                    },
                    "name": "after_id",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Exhaustive",
                        "type": "boolean"
                    },
                    "name": "exhaustive",
                    "in": "query"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Find User Projects Api Users  Uid  Projects Get",
                                    "type": "array",
                                    "items":
                                    {
                                        "$ref": "#/components/schemas/Project"
                                    }
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/{uid}/sessions":
        {
            "get":
            {
                "tags": ["users"],
                "summary": "Get sessions that belong to given user",
                "description": "Gets all user sessions\n\nArgs:\n    uid (str): user id matching uid regex\nReturns:\n   list: list of sessions",
                "operationId": "get_user_sessions",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Uid",
                        "pattern": "[0-9a-zA-Z.@_-]*",
                        "type": "string"
                    },
                    "name": "uid",
                    "in": "path"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Filter",
                        "type": "string",
                        "default": []
                    },
                    "name": "filter",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Sort",
                        "type": "string"
                    },
                    "name": "sort",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Limit",
                        "type": "integer",
                        "default": 100
                    },
                    "name": "limit",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Skip",
                        "type": "integer",
                        "default": 0
                    },
                    "name": "skip",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Page",
                        "type": "integer"
                    },
                    "name": "page",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "After Id",
                        "type": "string"
                    },
                    "name": "after_id",
                    "in": "query"
                },
                {
                    "required": false,
                    "schema":
                    {
                        "title": "Exhaustive",
                        "type": "boolean"
                    },
                    "name": "exhaustive",
                    "in": "query"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "title": "Response Find User Sessions Api Users  Uid  Sessions Get",
                                    "type": "array",
                                    "items":
                                    {
                                        "$ref": "#/components/schemas/Session"
                                    }
                                }
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/{uid}/{cname}":
        {
            "get":
            {
                "tags": ["users"],
                "summary": "Get All For User",
                "description": "handler.containerhandler.ContainerHandler.get_all_for_user",
                "operationId": "get_all_for_user_api_users__uid___cname__get",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Uid",
                        "pattern": "[0-9a-zA-Z.@_-]*",
                        "type": "string"
                    },
                    "name": "uid",
                    "in": "path"
                },
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Cname",
                        "pattern": "groups|projects|subjects|sessions|acquisitions|collections|analyses",
                        "type": "string"
                    },
                    "name": "cname",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "deprecated": true
            }
        },
        "/api/users/{uid}/reset-registration":
        {
            "post":
            {
                "tags": ["users"],
                "summary": "Reset User Registration",
                "operationId": "reset_user_registration_api_users__uid__reset_registration_post",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "Uid",
                        "pattern": "[0-9a-zA-Z.@_-]*",
                        "type": "string"
                    },
                    "name": "uid",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "deprecated": true
            }
        },
        "/api/views/data":
        {
            "post":
            {
                "tags": ["views"],
                "summary": "Execute Adhoc",
                "operationId": "execute_adhoc_api_views_data_post",
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    }
                }
            }
        },
        "/api/views/save":
        {
            "post":
            {
                "tags": ["views"],
                "summary": "Execute And Save",
                "operationId": "execute_and_save_api_views_save_post",
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    }
                }
            }
        },
        "/api/views/columns":
        {
            "get":
            {
                "tags": ["views"],
                "summary": "Get Columns",
                "operationId": "get_columns_api_views_columns_get",
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    }
                }
            }
        },
        "/api/views/{view_id}":
        {
            "get":
            {
                "tags": ["views"],
                "summary": "Get By Id",
                "operationId": "get_by_id_api_views__view_id__get",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "View Id",
                        "type": "string"
                    },
                    "name": "view_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put":
            {
                "tags": ["views"],
                "summary": "Modify",
                "operationId": "modify_api_views__view_id__put",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "View Id",
                        "type": "string"
                    },
                    "name": "view_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete":
            {
                "tags": ["views"],
                "summary": "Delete",
                "operationId": "delete_api_views__view_id__delete",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "View Id",
                        "type": "string"
                    },
                    "name": "view_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/views/{view_id}/data":
        {
            "get":
            {
                "tags": ["views"],
                "summary": "Execute Saved",
                "operationId": "execute_saved_api_views__view_id__data_get",
                "parameters": [
                {
                    "required": true,
                    "schema":
                    {
                        "title": "View Id",
                        "type": "string"
                    },
                    "name": "view_id",
                    "in": "path"
                }],
                "responses":
                {
                    "200":
                    {
                        "description": "Successful Response",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {}
                            }
                        }
                    },
                    "422":
                    {
                        "description": "Validation Error",
                        "content":
                        {
                            "application/json":
                            {
                                "schema":
                                {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components":
    {
        "schemas":
        {
            "AccessLevel":
            {
                "title": "AccessLevel",
                "enum": ["ro", "rw", "admin"],
                "type": "string",
                "description": "An enumeration."
            },
            "AccessPermission":
            {
                "title": "AccessPermission",
                "required": ["_id", "access"],
                "type": "object",
                "properties":
                {
                    "_id":
                    {
                        "title": " Id",
                        "pattern": "[0-9a-zA-Z.@_-]*",
                        "type": "string"
                    },
                    "access":
                    {
                        "$ref": "#/components/schemas/AccessLevel"
                    }
                },
                "description": "Model for an access permission\n\nAttributes:\n    id: The id of the user\n    access: The access level the user has on the resource"
            },
            "AccessPermissionOutput":
            {
                "title": "AccessPermissionOutput",
                "required": ["_id", "access"],
                "type": "object",
                "properties":
                {
                    "_id":
                    {
                        "title": " Id",
                        "pattern": "[0-9a-zA-Z.@_-]*",
                        "type": "string"
                    },
                    "access":
                    {
                        "$ref": "#/components/schemas/AccessLevel"
                    }
                }
            },
            "AccessPermissionUpdate":
            {
                "title": "AccessPermissionUpdate",
                "required": ["access"],
                "type": "object",
                "properties":
                {
                    "access":
                    {
                        "$ref": "#/components/schemas/AccessLevel"
                    }
                }
            },
            "Acquisition":
            {
                "title": "Acquisition",
                "required": ["_id", "parents", "session"],
                "type": "object",
                "properties":
                {
                    "_id":
                    {
                        "title": " Id",
                        "type": "string"
                    },
                    "parents":
                    {
                        "$ref": "#/components/schemas/AcquisitionParents"
                    },
                    "label":
                    {
                        "title": "Label",
                        "type": "string"
                    },
                    "session":
                    {
                        "title": "Session",
                        "type": "string"
                    },
                    "info":
                    {
                        "title": "Info",
                        "type": "object",
                        "default":
                        {}
                    },
                    "metadata":
                    {
                        "title": "Metadata",
                        "type": "object"
                    },
                    "uid":
                    {
                        "title": "Uid",
                        "pattern": ".*",
                        "type": "string"
                    },
                    "files":
                    {
                        "title": "Files",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/File"
                        },
                        "default": []
                    },
                    "timestamp":
                    {
                        "title": "Timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "timezone":
                    {
                        "title": "Timezone",
                        "type": "string"
                    },
                    "created":
                    {
                        "title": "Created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "modified":
                    {
                        "title": "Modified",
                        "type": "string",
                        "format": "date-time"
                    },
                    "revision":
                    {
                        "title": "Revision",
                        "type": "integer",
                        "default": 1
                    },
                    "permissions":
                    {
                        "title": "Permissions",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/RolePermission"
                        },
                        "default": []
                    },
                    "tags":
                    {
                        "title": "Tags",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    },
                    "notes":
                    {
                        "title": "Notes",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/Note"
                        },
                        "default": []
                    },
                    "analyses":
                    {
                        "title": "Analyses",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/Analysis"
                        },
                        "default": []
                    },
                    "deleted":
                    {
                        "title": "Deleted",
                        "type": "string",
                        "format": "date-time"
                    },
                    "collections":
                    {
                        "title": "Collections",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    }
                },
                "description": "Representation of the acquisition\n\nAttributes:\n    id (str): The id of the acquisition\n    parents (AcquisitionParents): The mapping of parents to parent id for\n        the acquisition\n    label (str): The label of the acquisition\n    session (str): The parent session\n    info (Optional[dict]): The custom info object of the acquisition\n    uid (Optional[str]): The optional universal identification for the\n        acquisition\n    files (List[File]): The list of files attached to the acquisition\n    timestamp (Optional[datetime.datetime]): The timestamp of the\n        acquisition\n    timezone (Optional[str]): The timezone of the timestamp\n    created (datetime.datetime): The time the acquisition was created in\n        flywheel\n    modified (datetime.datetime): The last modified time of the acquisition\n    revision (int): The revision number of the acquisition\n    permissions (List[RolePermission]): The list of permissions on the\n        acquisition\n    tags (List[str]): The list of tags\n    notes (List[Note]): The list of notes\n    analyses (List[Analysis]): The list of analyses children of the\n        acquisition\n    collections (List[str]): The collections the acquisition is a part of"
            },
            "AcquisitionContainerOutput":
            {
                "title": "AcquisitionContainerOutput",
                "required": ["_id", "parents", "session", "info_exists", "created", "modified", "permissions", "tags", "notes"],
                "type": "object",
                "properties":
                {
                    "_id":
                    {
                        "title": " Id",
                        "type": "string"
                    },
                    "parents":
                    {
                        "$ref": "#/components/schemas/AcquisitionParents"
                    },
                    "label":
                    {
                        "title": "Label",
                        "type": "string"
                    },
                    "session":
                    {
                        "title": "Session",
                        "type": "string"
                    },
                    "info_exists":
                    {
                        "title": "Info Exists",
                        "type": "boolean"
                    },
                    "info":
                    {
                        "title": "Info",
                        "type": "object"
                    },
                    "metadata":
                    {
                        "title": "Metadata",
                        "type": "object"
                    },
                    "uid":
                    {
                        "title": "Uid",
                        "pattern": ".*",
                        "type": "string"
                    },
                    "files":
                    {
                        "title": "Files",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/File"
                        },
                        "default": []
                    },
                    "timestamp":
                    {
                        "title": "Timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "timezone":
                    {
                        "title": "Timezone",
                        "type": "string"
                    },
                    "created":
                    {
                        "title": "Created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "modified":
                    {
                        "title": "Modified",
                        "type": "string",
                        "format": "date-time"
                    },
                    "revision":
                    {
                        "title": "Revision",
                        "type": "integer",
                        "default": 1
                    },
                    "permissions":
                    {
                        "title": "Permissions",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/RolePermission"
                        }
                    },
                    "tags":
                    {
                        "title": "Tags",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "notes":
                    {
                        "title": "Notes",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/Note"
                        }
                    },
                    "analyses":
                    {
                        "title": "Analyses",
                        "type": "array",
                        "items":
                        {
                            "anyOf": [
                            {
                                "$ref": "#/components/schemas/AnalysisOutput"
                            },
                            {
                                "$ref": "#/components/schemas/AnalysisOutputInflatedJob"
                            }]
                        },
                        "default": []
                    },
                    "collections":
                    {
                        "title": "Collections",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    },
                    "join-origin":
                    {
                        "$ref": "#/components/schemas/JoinOrigins"
                    },
                    "container_type":
                    {
                        "$ref": "#/components/schemas/ContainerType"
                    }
                },
                "description": "Representation of the acquisition to be returned\n\nAttributes:\n    id (str): The id of the acquisition\n    parents (AcquisitionParents): The mapping of parents to parent id for\n        the acquisition\n    label (str): The label of the acquisition\n    session (str): The parent session\n    info (Optional[dict]): The custom info object of the acquisition\n    uid (Optional[str]): The optional universal identification for the\n        acquisition\n    files (List[File]): The list of files attached to the acquisition\n    timestamp (Optional[datetime.datetime]): The timestamp of the\n        acquisition\n    timezone (Optional[str]): The timezone of the timestamp\n    created (datetime.datetime): The time the acquisition was created in\n        flywheel\n    modified (datetime.datetime): The last modified time of the acquisition\n    revision (int): The revision number of the acquisition\n    permissions (List[RolePermission]): The list of permissions on the\n        acquisition\n    tags (List[str]): The list of tags\n    notes (List[Note]): The list of notes\n    analyses (List[Analysis]): The list of analyses children of the\n    collections (List[str]): The collections the acquisition is a part of\n    acquisition"
            },
            "AcquisitionInput":
            {
                "title": "AcquisitionInput",
                "required": ["label", "session"],
                "type": "object",
                "properties":
                {
                    "label":
                    {
                        "title": "Label",
                        "type": "string"
                    },
                    "session":
                    {
                        "title": "Session",
                        "type": "string"
                    },
                    "uid":
                    {
                        "title": "Uid",
                        "pattern": ".*",
                        "type": "string"
                    },
                    "timestamp":
                    {
                        "title": "Timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "timezone":
                    {
                        "title": "Timezone",
                        "type": "string"
                    },
                    "info":
                    {
                        "title": "Info",
                        "type": "object",
                        "default":
                        {}
                    }
                },
                "description": "Input model for acquisition\n\nAttributes:\n    label (str): The label of the acquisition\n    session (str): The parent session\n    info (Optional[dict]): The custom info object of the acquisition\n    uid (Optional[str]): The optional universal identification for the\n        acquisition\n    timestamp (Optional[datetime.datetime]): The timestamp of the\n        acquisition\n    timezone (Optional[str]): The timezone of the timestamp"
            },
            "AcquisitionListOutput":
            {
                "title": "AcquisitionListOutput",
                "required": ["_id", "parents", "session", "info_exists", "created", "modified", "permissions", "notes"],
                "type": "object",
                "properties":
                {
                    "_id":
                    {
                        "title": " Id",
                        "type": "string"
                    },
                    "parents":
                    {
                        "$ref": "#/components/schemas/AcquisitionParents"
                    },
                    "label":
                    {
                        "title": "Label",
                        "type": "string"
                    },
                    "session":
                    {
                        "title": "Session",
                        "type": "string"
                    },
                    "info":
                    {
                        "$ref": "#/components/schemas/BIDSInfo"
                    },
                    "info_exists":
                    {
                        "title": "Info Exists",
                        "type": "boolean"
                    },
                    "metadata":
                    {
                        "title": "Metadata",
                        "type": "object"
                    },
                    "uid":
                    {
                        "title": "Uid",
                        "pattern": ".*",
                        "type": "string"
                    },
                    "files":
                    {
                        "title": "Files",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/FileListOutput"
                        },
                        "default": []
                    },
                    "timestamp":
                    {
                        "title": "Timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "timezone":
                    {
                        "title": "Timezone",
                        "type": "string"
                    },
                    "created":
                    {
                        "title": "Created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "modified":
                    {
                        "title": "Modified",
                        "type": "string",
                        "format": "date-time"
                    },
                    "revision":
                    {
                        "title": "Revision",
                        "type": "integer",
                        "default": 1
                    },
                    "permissions":
                    {
                        "title": "Permissions",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/RolePermission"
                        }
                    },
                    "notes":
                    {
                        "title": "Notes",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/Note"
                        }
                    },
                    "analyses":
                    {
                        "title": "Analyses",
                        "type": "array",
                        "items":
                        {
                            "anyOf": [
                            {
                                "$ref": "#/components/schemas/AnalysisListOutput"
                            },
                            {
                                "$ref": "#/components/schemas/AnalysisListOutputInflatedJob"
                            }]
                        },
                        "default": []
                    },
                    "collections":
                    {
                        "title": "Collections",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    },
                    "join-origin":
                    {
                        "$ref": "#/components/schemas/JoinOrigins"
                    }
                },
                "description": "Representation of the acquisition to be returned\n\nAttributes:\n    id (str): The id of the acquisition\n    parents (AcquisitionParents): The mapping of parents to parent id for\n        the acquisition\n    label (str): The label of the acquisition\n    session (str): The parent session\n    info (Optional[dict]): The custom info object of the acquisition\n    uid (Optional[str]): The optional universal identification for the\n        acquisition\n    files (List[File]): The list of files attached to the acquisition\n    timestamp (Optional[datetime.datetime]): The timestamp of the\n        acquisition\n    timezone (Optional[str]): The timezone of the timestamp\n    created (datetime.datetime): The time the acquisition was created in\n        flywheel\n    modified (datetime.datetime): The last modified time of the acquisition\n    revision (int): The revision number of the acquisition\n    permissions (List[RolePermission]): The list of permissions on the\n        acquisition\n    tags (List[str]): The list of tags\n    notes (List[Note]): The list of notes\n    analyses (List[Analysis]): The list of analyses children of the\n    collections (List[str]): The collections the acquisition is a part of\n    acquisition"
            },
            "AcquisitionModifyInput":
            {
                "title": "AcquisitionModifyInput",
                "type": "object",
                "properties":
                {
                    "label":
                    {
                        "title": "Label",
                        "type": "string"
                    },
                    "session":
                    {
                        "title": "Session",
                        "type": "string"
                    },
                    "info":
                    {
                        "title": "Info",
                        "type": "object"
                    },
                    "uid":
                    {
                        "title": "Uid",
                        "pattern": ".*",
                        "type": "string"
                    },
                    "timestamp":
                    {
                        "title": "Timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "timezone":
                    {
                        "title": "Timezone",
                        "type": "string"
                    }
                },
                "description": "Input model for acquisition modifications\n\nAttributes:\n    label (Optional[str]): The label of the acquisition\n    session (Optional[str]): The parent session\n    info (Optional[dict]): The custom info object of the acquisition\n    uid (Optional[str]): The optional universal identification for the\n        acquisition\n    timestamp (Optional[datetime.datetime]): The timestamp of the\n        acquisition\n    timezone (Optional[str]): The timezone of the timestamp"
            },
            "AcquisitionOutput":
            {
                "title": "AcquisitionOutput",
                "required": ["_id", "parents", "session", "info_exists", "created", "modified", "permissions", "tags", "notes"],
                "type": "object",
                "properties":
                {
                    "_id":
                    {
                        "title": " Id",
                        "type": "string"
                    },
                    "parents":
                    {
                        "$ref": "#/components/schemas/AcquisitionParents"
                    },
                    "label":
                    {
                        "title": "Label",
                        "type": "string"
                    },
                    "session":
                    {
                        "title": "Session",
                        "type": "string"
                    },
                    "info_exists":
                    {
                        "title": "Info Exists",
                        "type": "boolean"
                    },
                    "info":
                    {
                        "title": "Info",
                        "type": "object"
                    },
                    "metadata":
                    {
                        "title": "Metadata",
                        "type": "object"
                    },
                    "uid":
                    {
                        "title": "Uid",
                        "pattern": ".*",
                        "type": "string"
                    },
                    "files":
                    {
                        "title": "Files",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/File"
                        },
                        "default": []
                    },
                    "timestamp":
                    {
                        "title": "Timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "timezone":
                    {
                        "title": "Timezone",
                        "type": "string"
                    },
                    "created":
                    {
                        "title": "Created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "modified":
                    {
                        "title": "Modified",
                        "type": "string",
                        "format": "date-time"
                    },
                    "revision":
                    {
                        "title": "Revision",
                        "type": "integer",
                        "default": 1
                    },
                    "permissions":
                    {
                        "title": "Permissions",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/RolePermission"
                        }
                    },
                    "tags":
                    {
                        "title": "Tags",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "notes":
                    {
                        "title": "Notes",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/Note"
                        }
                    },
                    "analyses":
                    {
                        "title": "Analyses",
                        "type": "array",
                        "items":
                        {
                            "anyOf": [
                            {
                                "$ref": "#/components/schemas/AnalysisOutput"
                            },
                            {
                                "$ref": "#/components/schemas/AnalysisOutputInflatedJob"
                            }]
                        },
                        "default": []
                    },
                    "collections":
                    {
                        "title": "Collections",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    },
                    "join-origin":
                    {
                        "$ref": "#/components/schemas/JoinOrigins"
                    }
                },
                "description": "Representation of the acquisition to be returned\n\nAttributes:\n    id (str): The id of the acquisition\n    parents (AcquisitionParents): The mapping of parents to parent id for\n        the acquisition\n    label (str): The label of the acquisition\n    session (str): The parent session\n    info (Optional[dict]): The custom info object of the acquisition\n    uid (Optional[str]): The optional universal identification for the\n        acquisition\n    files (List[File]): The list of files attached to the acquisition\n    timestamp (Optional[datetime.datetime]): The timestamp of the\n        acquisition\n    timezone (Optional[str]): The timezone of the timestamp\n    created (datetime.datetime): The time the acquisition was created in\n        flywheel\n    modified (datetime.datetime): The last modified time of the acquisition\n    revision (int): The revision number of the acquisition\n    permissions (List[RolePermission]): The list of permissions on the\n        acquisition\n    tags (List[str]): The list of tags\n    notes (List[Note]): The list of notes\n    analyses (List[Analysis]): The list of analyses children of the\n    collections (List[str]): The collections the acquisition is a part of\n    acquisition"
            },
            "AcquisitionParents":
            {
                "title": "AcquisitionParents",
                "required": ["group", "project", "subject", "session"],
                "type": "object",
                "properties":
                {
                    "group":
                    {
                        "title": "Group",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "project":
                    {
                        "title": "Project",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "subject":
                    {
                        "title": "Subject",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "session":
                    {
                        "title": "Session",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    }
                }
            },
            "AcquisitionSpec":
            {
                "title": "AcquisitionSpec",
                "required": ["fields"],
                "type": "object",
                "properties":
                {
                    "fields":
                    {
                        "title": "Fields",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "filter":
                    {
                        "title": "Filter",
                        "type": "string"
                    },
                    "limit":
                    {
                        "title": "Limit",
                        "type": "integer",
                        "default": 50
                    },
                    "sort":
                    {
                        "title": "Sort",
                        "type": "string"
                    },
                    "files":
                    {
                        "$ref": "#/components/schemas/FileFilter"
                    },
                    "jobs":
                    {
                        "$ref": "#/components/schemas/JobSpec"
                    },
                    "analyses":
                    {
                        "$ref": "#/components/schemas/ContainerSpecWithInputs"
                    },
                    "group":
                    {
                        "$ref": "#/components/schemas/GroupSpec"
                    },
                    "project":
                    {
                        "$ref": "#/components/schemas/ProjectSpec"
                    },
                    "subject":
                    {
                        "$ref": "#/components/schemas/SubjectSpec"
                    },
                    "session":
                    {
                        "$ref": "#/components/schemas/SessionSpec"
                    }
                },
                "additionalProperties": false
            },
            "AcquisitionTemplateOptions":
            {
                "title": "AcquisitionTemplateOptions",
                "type": "object",
                "properties":
                {
                    "minimum":
                    {
                        "title": "Minimum",
                        "type": "integer"
                    },
                    "maximum":
                    {
                        "title": "Maximum",
                        "type": "integer"
                    },
                    "files":
                    {
                        "title": "Files",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/FileTemplateOptions"
                        },
                        "default": []
                    },
                    "label":
                    {
                        "title": "Label",
                        "type": "string"
                    },
                    "tags":
                    {
                        "title": "Tags",
                        "type": "string"
                    }
                }
            },
            "Action":
            {
                "title": "Action",
                "enum": ["containers_view_metadata", "containers_create_hierarchy", "containers_modify_metadata", "containers_delete_hierarchy", "containers_delete_project", "analyses_view_metadata", "analyses_create_sdk", "analyses_create_job", "analyses_modify_metadata", "analyses_delete", "files_view_metadata", "files_view_contents", "files_download", "files_create_upload", "files_modify_metadata", "files_delete_non_device_data", "files_delete_device_data", "tags_view", "tags_manage", "notes_view", "notes_manage", "project_permissions_view", "project_permissions_manage", "gear_rules_view", "gear_rules_manage", "data_views_view", "data_views_manage", "session_templates_view", "session_templates_manage", "jobs_view", "jobs_run_cancel", "jobs_cancel_any", "settings_modify", "settings_view"],
                "type": "string",
                "description": "An enumeration."
            },
            "AdhocAnalysisInput":
            {
                "title": "AdhocAnalysisInput",
                "required": ["label"],
                "type": "object",
                "properties":
                {
                    "label":
                    {
                        "title": "Label",
                        "type": "string"
                    },
                    "inputs":
                    {
                        "title": "Inputs",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/FileReference"
                        },
                        "default": []
                    },
                    "description":
                    {
                        "title": "Description",
                        "type": "string",
                        "default": ""
                    },
                    "info":
                    {
                        "title": "Info",
                        "type": "object",
                        "default":
                        {}
                    }
                },
                "additionalProperties": false
            },
            "AggregateFieldValues":
            {
                "title": "AggregateFieldValues",
                "required": ["buckets"],
                "type": "object",
                "properties":
                {
                    "buckets":
                    {
                        "title": "Buckets",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/FieldValueBucket"
                        }
                    },
                    "doc_count_error_upper_bound":
                    {
                        "title": "Doc Count Error Upper Bound",
                        "type": "integer"
                    },
                    "sum_other_doc_count":
                    {
                        "title": "Sum Other Doc Count",
                        "type": "integer"
                    }
                }
            },
            "AggregateFieldValuesQuery":
            {
                "title": "AggregateFieldValuesQuery",
                "required": ["field_name"],
                "type": "object",
                "properties":
                {
                    "field_name":
                    {
                        "title": "Field Name",
                        "type": "string"
                    },
                    "search_string":
                    {
                        "title": "Search String",
                        "type": "string"
                    }
                }
            },
            "AggregateFieldValuesStats":
            {
                "title": "AggregateFieldValuesStats",
                "required": ["count"],
                "type": "object",
                "properties":
                {
                    "count":
                    {
                        "title": "Count",
                        "type": "integer"
                    },
                    "min":
                    {
                        "title": "Min",
                        "type": "integer"
                    },
                    "max":
                    {
                        "title": "Max",
                        "type": "integer"
                    },
                    "avg":
                    {
                        "title": "Avg",
                        "type": "integer"
                    },
                    "sum":
                    {
                        "title": "Sum",
                        "type": "integer"
                    },
                    "min_as_string":
                    {
                        "title": "Min As String",
                        "type": "string"
                    },
                    "max_as_string":
                    {
                        "title": "Max As String",
                        "type": "string"
                    },
                    "avg_as_string":
                    {
                        "title": "Avg As String",
                        "type": "string"
                    },
                    "sum_as_string":
                    {
                        "title": "Sum As String",
                        "type": "string"
                    }
                }
            },
            "AnalysesSpec":
            {
                "title": "AnalysesSpec",
                "required": ["fields"],
                "type": "object",
                "properties":
                {
                    "fields":
                    {
                        "title": "Fields",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "filter":
                    {
                        "title": "Filter",
                        "type": "string"
                    },
                    "limit":
                    {
                        "title": "Limit",
                        "type": "integer",
                        "default": 50
                    },
                    "sort":
                    {
                        "title": "Sort",
                        "type": "string"
                    },
                    "files":
                    {
                        "$ref": "#/components/schemas/FileFilter"
                    },
                    "inputs":
                    {
                        "$ref": "#/components/schemas/FileFilter"
                    },
                    "project":
                    {
                        "$ref": "#/components/schemas/ProjectSpec"
                    },
                    "subject":
                    {
                        "$ref": "#/components/schemas/SubjectSpec"
                    },
                    "session":
                    {
                        "$ref": "#/components/schemas/SessionSpec"
                    },
                    "acquisition":
                    {
                        "$ref": "#/components/schemas/AcquisitionSpec"
                    }
                },
                "additionalProperties": false,
                "description": "Top level analyses is different from lower level spec"
            },
            "Analysis":
            {
                "title": "Analysis",
                "required": ["created", "modified", "revision", "inputs", "label", "parent", "parents", "files", "notes", "tags", "_id"],
                "type": "object",
                "properties":
                {
                    "created":
                    {
                        "title": "Created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "modified":
                    {
                        "title": "Modified",
                        "type": "string",
                        "format": "date-time"
                    },
                    "timestamp":
                    {
                        "title": "Timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "revision":
                    {
                        "title": "Revision",
                        "type": "integer"
                    },
                    "inputs":
                    {
                        "title": "Inputs",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/File"
                        }
                    },
                    "description":
                    {
                        "title": "Description",
                        "type": "string",
                        "default": ""
                    },
                    "info":
                    {
                        "title": "Info",
                        "type": "object",
                        "default":
                        {}
                    },
                    "label":
                    {
                        "title": "Label",
                        "type": "string"
                    },
                    "parent":
                    {
                        "$ref": "#/components/schemas/ContainerReference"
                    },
                    "parents":
                    {
                        "$ref": "#/components/schemas/AnalysisParents"
                    },
                    "job_id":
                    {
                        "title": "Job Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "job":
                    {
                        "title": "Job",
                        "anyOf": [
                        {
                            "$ref": "#/components/schemas/Job"
                        },
                        {
                            "type": "string"
                        }]
                    },
                    "compute_provider_id":
                    {
                        "title": "Compute Provider Id",
                        "type": "string"
                    },
                    "files":
                    {
                        "title": "Files",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/File"
                        }
                    },
                    "notes":
                    {
                        "title": "Notes",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/Note"
                        }
                    },
                    "tags":
                    {
                        "title": "Tags",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "_id":
                    {
                        "title": " Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "gear_info":
                    {
                        "$ref": "#/components/schemas/GearInfo"
                    }
                }
            },
            "AnalysisContainerOutput":
            {
                "title": "AnalysisContainerOutput",
                "required": ["_id", "label", "parent", "parents", "created", "modified", "revision", "inputs", "description", "files", "notes", "tags"],
                "type": "object",
                "properties":
                {
                    "_id":
                    {
                        "title": " Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "label":
                    {
                        "title": "Label",
                        "type": "string"
                    },
                    "parent":
                    {
                        "$ref": "#/components/schemas/ContainerReference"
                    },
                    "parents":
                    {
                        "$ref": "#/components/schemas/AnalysisParents"
                    },
                    "created":
                    {
                        "title": "Created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "modified":
                    {
                        "title": "Modified",
                        "type": "string",
                        "format": "date-time"
                    },
                    "timestamp":
                    {
                        "title": "Timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "revision":
                    {
                        "title": "Revision",
                        "type": "integer"
                    },
                    "inputs":
                    {
                        "title": "Inputs",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/File"
                        }
                    },
                    "description":
                    {
                        "title": "Description",
                        "type": "string"
                    },
                    "info":
                    {
                        "title": "Info",
                        "type": "object",
                        "default":
                        {}
                    },
                    "files":
                    {
                        "title": "Files",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/File"
                        }
                    },
                    "notes":
                    {
                        "title": "Notes",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/Note"
                        }
                    },
                    "tags":
                    {
                        "title": "Tags",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "job":
                    {
                        "title": "Job",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "gear_info":
                    {
                        "$ref": "#/components/schemas/GearInfo"
                    },
                    "compute_provider_id":
                    {
                        "title": "Compute Provider Id",
                        "type": "string"
                    },
                    "join-origin":
                    {
                        "$ref": "#/components/schemas/JoinOrigins"
                    },
                    "container_type":
                    {
                        "$ref": "#/components/schemas/ContainerType"
                    }
                },
                "description": "Job is the job id"
            },
            "AnalysisListOutput":
            {
                "title": "AnalysisListOutput",
                "required": ["_id", "label", "parent", "parents", "created", "modified", "revision", "inputs", "description", "files", "notes"],
                "type": "object",
                "properties":
                {
                    "_id":
                    {
                        "title": " Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "label":
                    {
                        "title": "Label",
                        "type": "string"
                    },
                    "parent":
                    {
                        "$ref": "#/components/schemas/ContainerReference"
                    },
                    "parents":
                    {
                        "$ref": "#/components/schemas/AnalysisParents"
                    },
                    "created":
                    {
                        "title": "Created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "modified":
                    {
                        "title": "Modified",
                        "type": "string",
                        "format": "date-time"
                    },
                    "revision":
                    {
                        "title": "Revision",
                        "type": "integer"
                    },
                    "inputs":
                    {
                        "title": "Inputs",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/File"
                        }
                    },
                    "description":
                    {
                        "title": "Description",
                        "type": "string"
                    },
                    "files":
                    {
                        "title": "Files",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/FileListOutput"
                        }
                    },
                    "notes":
                    {
                        "title": "Notes",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/Note"
                        }
                    },
                    "job":
                    {
                        "title": "Job",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "gear_info":
                    {
                        "$ref": "#/components/schemas/GearInfo"
                    },
                    "compute_provider_id":
                    {
                        "title": "Compute Provider Id",
                        "type": "string"
                    },
                    "join-origin":
                    {
                        "$ref": "#/components/schemas/JoinOrigins"
                    }
                },
                "description": "Job is the job id"
            },
            "AnalysisListOutputInflatedJob":
            {
                "title": "AnalysisListOutputInflatedJob",
                "required": ["_id", "label", "parent", "parents", "created", "modified", "revision", "inputs", "description", "files", "notes"],
                "type": "object",
                "properties":
                {
                    "_id":
                    {
                        "title": " Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "label":
                    {
                        "title": "Label",
                        "type": "string"
                    },
                    "parent":
                    {
                        "$ref": "#/components/schemas/ContainerReference"
                    },
                    "parents":
                    {
                        "$ref": "#/components/schemas/AnalysisParents"
                    },
                    "created":
                    {
                        "title": "Created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "modified":
                    {
                        "title": "Modified",
                        "type": "string",
                        "format": "date-time"
                    },
                    "revision":
                    {
                        "title": "Revision",
                        "type": "integer"
                    },
                    "inputs":
                    {
                        "title": "Inputs",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/File"
                        }
                    },
                    "description":
                    {
                        "title": "Description",
                        "type": "string"
                    },
                    "files":
                    {
                        "title": "Files",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/FileListOutput"
                        }
                    },
                    "notes":
                    {
                        "title": "Notes",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/Note"
                        }
                    },
                    "job_id":
                    {
                        "title": "Job Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "job":
                    {
                        "$ref": "#/components/schemas/JobListOutput"
                    },
                    "gear_info":
                    {
                        "$ref": "#/components/schemas/GearInfo"
                    },
                    "compute_provider_id":
                    {
                        "title": "Compute Provider Id",
                        "type": "string"
                    },
                    "join-origin":
                    {
                        "$ref": "#/components/schemas/JoinOrigins"
                    }
                },
                "description": "Job is the job"
            },
            "AnalysisModifyInput":
            {
                "title": "AnalysisModifyInput",
                "type": "object",
                "properties":
                {
                    "description":
                    {
                        "title": "Description",
                        "type": "string"
                    },
                    "label":
                    {
                        "title": "Label",
                        "type": "string"
                    }
                },
                "additionalProperties": false
            },
            "AnalysisOutput":
            {
                "title": "AnalysisOutput",
                "required": ["_id", "label", "parent", "parents", "created", "modified", "revision", "inputs", "description", "files", "notes", "tags"],
                "type": "object",
                "properties":
                {
                    "_id":
                    {
                        "title": " Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "label":
                    {
                        "title": "Label",
                        "type": "string"
                    },
                    "parent":
                    {
                        "$ref": "#/components/schemas/ContainerReference"
                    },
                    "parents":
                    {
                        "$ref": "#/components/schemas/AnalysisParents"
                    },
                    "created":
                    {
                        "title": "Created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "modified":
                    {
                        "title": "Modified",
                        "type": "string",
                        "format": "date-time"
                    },
                    "timestamp":
                    {
                        "title": "Timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "revision":
                    {
                        "title": "Revision",
                        "type": "integer"
                    },
                    "inputs":
                    {
                        "title": "Inputs",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/File"
                        }
                    },
                    "description":
                    {
                        "title": "Description",
                        "type": "string"
                    },
                    "info":
                    {
                        "title": "Info",
                        "type": "object",
                        "default":
                        {}
                    },
                    "files":
                    {
                        "title": "Files",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/File"
                        }
                    },
                    "notes":
                    {
                        "title": "Notes",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/Note"
                        }
                    },
                    "tags":
                    {
                        "title": "Tags",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "job":
                    {
                        "title": "Job",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "gear_info":
                    {
                        "$ref": "#/components/schemas/GearInfo"
                    },
                    "compute_provider_id":
                    {
                        "title": "Compute Provider Id",
                        "type": "string"
                    },
                    "join-origin":
                    {
                        "$ref": "#/components/schemas/JoinOrigins"
                    }
                },
                "description": "Job is the job id"
            },
            "AnalysisOutputInflatedJob":
            {
                "title": "AnalysisOutputInflatedJob",
                "required": ["_id", "label", "parent", "parents", "created", "modified", "revision", "inputs", "description", "files", "notes", "tags"],
                "type": "object",
                "properties":
                {
                    "_id":
                    {
                        "title": " Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "label":
                    {
                        "title": "Label",
                        "type": "string"
                    },
                    "parent":
                    {
                        "$ref": "#/components/schemas/ContainerReference"
                    },
                    "parents":
                    {
                        "$ref": "#/components/schemas/AnalysisParents"
                    },
                    "created":
                    {
                        "title": "Created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "modified":
                    {
                        "title": "Modified",
                        "type": "string",
                        "format": "date-time"
                    },
                    "revision":
                    {
                        "title": "Revision",
                        "type": "integer"
                    },
                    "inputs":
                    {
                        "title": "Inputs",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/File"
                        }
                    },
                    "description":
                    {
                        "title": "Description",
                        "type": "string"
                    },
                    "info":
                    {
                        "title": "Info",
                        "type": "object",
                        "default":
                        {}
                    },
                    "files":
                    {
                        "title": "Files",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/File"
                        }
                    },
                    "notes":
                    {
                        "title": "Notes",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/Note"
                        }
                    },
                    "tags":
                    {
                        "title": "Tags",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "job_id":
                    {
                        "title": "Job Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "job":
                    {
                        "$ref": "#/components/schemas/JobOutput"
                    },
                    "gear_info":
                    {
                        "$ref": "#/components/schemas/GearInfo"
                    },
                    "compute_provider_id":
                    {
                        "title": "Compute Provider Id",
                        "type": "string"
                    },
                    "join-origin":
                    {
                        "$ref": "#/components/schemas/JoinOrigins"
                    }
                },
                "description": "Job is the job"
            },
            "AnalysisParents":
            {
                "title": "AnalysisParents",
                "required": ["group", "project"],
                "type": "object",
                "properties":
                {
                    "group":
                    {
                        "title": "Group",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "project":
                    {
                        "title": "Project",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "subject":
                    {
                        "title": "Subject",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "session":
                    {
                        "title": "Session",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "acquisition":
                    {
                        "title": "Acquisition",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    }
                }
            },
            "ApiKey":
            {
                "title": "ApiKey",
                "required": ["created", "type", "origin"],
                "type": "object",
                "properties":
                {
                    "_id":
                    {
                        "title": " Id",
                        "type": "string"
                    },
                    "created":
                    {
                        "title": "Created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "type":
                    {
                        "$ref": "#/components/schemas/KeyType"
                    },
                    "last_used":
                    {
                        "title": "Last Used",
                        "type": "string",
                        "format": "date-time"
                    },
                    "origin":
                    {
                        "title": "Origin",
                        "anyOf": [
                        {
                            "$ref": "#/components/schemas/ApiKeyOrigin"
                        },
                        {
                            "$ref": "#/components/schemas/Origin"
                        }]
                    },
                    "scope":
                    {
                        "$ref": "#/components/schemas/Scope"
                    },
                    "job":
                    {
                        "title": "Job",
                        "type": "string"
                    }
                }
            },
            "ApiKeyInput":
            {
                "title": "ApiKeyInput",
                "type": "object",
                "properties":
                {
                    "base":
                    {
                        "title": "Base",
                        "type": "string"
                    },
                    "key":
                    {
                        "title": "Key",
                        "type": "string"
                    }
                },
                "description": "Represents an api key input for a job to use to interact with the api\n\nAttributes:\n    base (str): The input type\n    key (Optional[str]): The key?"
            },
            "ApiKeyOrigin":
            {
                "title": "ApiKeyOrigin",
                "required": ["type", "via"],
                "type": "object",
                "properties":
                {
                    "type":
                    {
                        "$ref": "#/components/schemas/OriginType"
                    },
                    "id":
                    {
                        "title": "Id",
                        "type": "string"
                    },
                    "via":
                    {
                        "$ref": "#/components/schemas/Origin"
                    }
                }
            },
            "ApiKeyOutput":
            {
                "title": "ApiKeyOutput",
                "required": ["key", "created"],
                "type": "object",
                "properties":
                {
                    "key":
                    {
                        "title": "Key",
                        "type": "string"
                    },
                    "created":
                    {
                        "title": "Created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_used":
                    {
                        "title": "Last Used",
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "AsStorage":
            {
                "title": "AsStorage",
                "required": ["region", "bucket"],
                "type": "object",
                "properties":
                {
                    "region":
                    {
                        "title": "Region",
                        "type": "string"
                    },
                    "bucket":
                    {
                        "title": "Bucket",
                        "type": "string"
                    },
                    "path":
                    {
                        "title": "Path",
                        "type": "string",
                        "default": ""
                    },
                    "signed_urls":
                    {
                        "title": "Signed Urls",
                        "type": "boolean",
                        "default": true
                    }
                },
                "additionalProperties": false
            },
            "Auth":
            {
                "title": "Auth",
                "type": "object",
                "properties":
                {
                    "google":
                    {
                        "title": "Google",
                        "allOf": [
                        {
                            "$ref": "#/components/schemas/GoogleAuth"
                        }]
                    },
                    "auth0":
                    {
                        "title": "Auth0",
                        "allOf": [
                        {
                            "$ref": "#/components/schemas/Auth0Auth"
                        }]
                    },
                    "jwt":
                    {
                        "title": "Jwt",
                        "allOf": [
                        {
                            "$ref": "#/components/schemas/JwtAuth"
                        }]
                    },
                    "ldap":
                    {
                        "title": "Ldap",
                        "allOf": [
                        {
                            "$ref": "#/components/schemas/LdapAuth"
                        }]
                    },
                    "saml":
                    {
                        "title": "Saml",
                        "allOf": [
                        {
                            "$ref": "#/components/schemas/SamlAuth"
                        }]
                    },
                    "basic":
                    {
                        "title": "Basic",
                        "type": "object"
                    },
                    "cas":
                    {
                        "title": "Cas",
                        "type": "object"
                    },
                    "mail":
                    {
                        "title": "Mail",
                        "type": "object"
                    },
                    "wechat":
                    {
                        "title": "Wechat",
                        "type": "object"
                    }
                },
                "additionalProperties": false,
                "description": "Base class for settings, allowing values to be overridden by environment variables.\n\nThis is useful in production for secrets you do not wish to save in code, it plays nicely with docker(-compose),\nHeroku and any 12 factor app design."
            },
            "Auth0Auth":
            {
                "title": "Auth0Auth",
                "required": ["client_id", "client_secret", "domain"],
                "type": "object",
                "properties":
                {
                    "client_id":
                    {
                        "title": "Client Id",
                        "type": "string"
                    },
                    "client_secret":
                    {
                        "title": "Client Secret",
                        "type": "string"
                    },
                    "domain":
                    {
                        "title": "Domain",
                        "type": "string"
                    },
                    "audience":
                    {
                        "title": "Audience",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": ["https://flywheel.io/api"]
                    },
                    "claim_namespace":
                    {
                        "title": "Claim Namespace",
                        "type": "string",
                        "default": "https://flywheel.io"
                    },
                    "jwks":
                    {
                        "title": "Jwks",
                        "type": "object",
                        "additionalProperties":
                        {
                            "type": "object"
                        },
                        "default":
                        {}
                    },
                    "options":
                    {
                        "title": "Options",
                        "allOf": [
                        {
                            "$ref": "#/components/schemas/Auth0Options"
                        }],
                        "default":
                        {
                            "onboarding": false,
                            "onboarding_eppn": true,
                            "fetch_profile": false,
                            "limit_social_domains": true,
                            "social_domain_whitelist": [],
                            "academic_idp_whitelist": []
                        }
                    }
                },
                "description": "Base class for settings, allowing values to be overridden by environment variables.\n\nThis is useful in production for secrets you do not wish to save in code, it plays nicely with docker(-compose),\nHeroku and any 12 factor app design."
            },
            "Auth0AuthOut":
            {
                "title": "Auth0AuthOut",
                "required": ["client_id", "domain", "audience", "claim_namespace", "jwks", "options"],
                "type": "object",
                "properties":
                {
                    "client_id":
                    {
                        "title": "Client Id",
                        "type": "string"
                    },
                    "domain":
                    {
                        "title": "Domain",
                        "type": "string"
                    },
                    "audience":
                    {
                        "title": "Audience",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "claim_namespace":
                    {
                        "title": "Claim Namespace",
                        "type": "string"
                    },
                    "jwks":
                    {
                        "title": "Jwks",
                        "type": "object",
                        "additionalProperties":
                        {
                            "type": "object"
                        }
                    },
                    "options":
                    {
                        "title": "Options",
                        "allOf": [
                        {
                            "$ref": "#/components/schemas/Auth0Options"
                        }]
                    }
                },
                "description": "Base class for settings, allowing values to be overridden by environment variables.\n\nThis is useful in production for secrets you do not wish to save in code, it plays nicely with docker(-compose),\nHeroku and any 12 factor app design."
            },
            "Auth0Options":
            {
                "title": "Auth0Options",
                "type": "object",
                "properties":
                {
                    "onboarding":
                    {
                        "title": "Onboarding",
                        "type": "boolean",
                        "default": false
                    },
                    "onboarding-eppn":
                    {
                        "title": "Onboarding-Eppn",
                        "type": "boolean",
                        "default": true
                    },
                    "fetch-profile":
                    {
                        "title": "Fetch-Profile",
                        "type": "boolean",
                        "default": false
                    },
                    "limit-social-domains":
                    {
                        "title": "Limit-Social-Domains",
                        "type": "boolean",
                        "default": true
                    },
                    "social-domain-whitelist":
                    {
                        "title": "Social-Domain-Whitelist",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    },
                    "academic-idp-whitelist":
                    {
                        "title": "Academic-Idp-Whitelist",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    }
                },
                "description": "Base class for settings, allowing values to be overridden by environment variables.\n\nThis is useful in production for secrets you do not wish to save in code, it plays nicely with docker(-compose),\nHeroku and any 12 factor app design."
            },
            "AuthOut":
            {
                "title": "AuthOut",
                "required": ["google"],
                "type": "object",
                "properties":
                {
                    "google":
                    {
                        "title": "Google",
                        "allOf": [
                        {
                            "$ref": "#/components/schemas/GoogleAuthOut"
                        }]
                    },
                    "auth0":
                    {
                        "title": "Auth0",
                        "allOf": [
                        {
                            "$ref": "#/components/schemas/Auth0AuthOut"
                        }]
                    },
                    "basic":
                    {
                        "title": "Basic",
                        "type": "object"
                    },
                    "cas":
                    {
                        "title": "Cas",
                        "type": "object"
                    },
                    "ldap":
                    {
                        "title": "Ldap",
                        "type": "object"
                    },
                    "mail":
                    {
                        "title": "Mail",
                        "type": "object"
                    },
                    "saml":
                    {
                        "title": "Saml",
                        "type": "object"
                    },
                    "wechat":
                    {
                        "title": "Wechat",
                        "type": "object"
                    }
                },
                "description": "Base class for settings, allowing values to be overridden by environment variables.\n\nThis is useful in production for secrets you do not wish to save in code, it plays nicely with docker(-compose),\nHeroku and any 12 factor app design."
            },
            "AuthType":
            {
                "title": "AuthType",
                "enum": ["basic", "google", "jwt", "ldap", "saml", "auth0", "<class 'core.models.auth_token.AuthType.Config'>"],
                "type": "string",
                "description": "An enumeration."
            },
            "AvatarList":
            {
                "title": "AvatarList",
                "type": "object",
                "properties":
                {
                    "gravatar":
                    {
                        "title": "Gravatar",
                        "type": "string"
                    },
                    "provider":
                    {
                        "title": "Provider",
                        "type": "string"
                    },
                    "custom":
                    {
                        "title": "Custom",
                        "type": "string"
                    }
                }
            },
            "AwsCreds":
            {
                "title": "AwsCreds",
                "type": "object",
                "properties":
                {
                    "aws_access_key_id":
                    {
                        "title": "Aws Access Key Id",
                        "type": "string"
                    },
                    "aws_secret_access_key":
                    {
                        "title": "Aws Secret Access Key",
                        "type": "string"
                    }
                },
                "additionalProperties": false,
                "description": "Creds for AWS can be excluded and then they are loaded from the ENV "
            },
            "AwsStorage":
            {
                "title": "AwsStorage",
                "required": ["region", "bucket"],
                "type": "object",
                "properties":
                {
                    "region":
                    {
                        "title": "Region",
                        "type": "string"
                    },
                    "bucket":
                    {
                        "title": "Bucket",
                        "type": "string"
                    },
                    "path":
                    {
                        "title": "Path",
                        "type": "string",
                        "default": ""
                    }
                },
                "additionalProperties": false
            },
            "AzureCreds":
            {
                "title": "AzureCreds",
                "required": ["azure_account_name", "azure_account_key"],
                "type": "object",
                "properties":
                {
                    "azure_account_name":
                    {
                        "title": "Azure Account Name",
                        "type": "string"
                    },
                    "azure_account_key":
                    {
                        "title": "Azure Account Key",
                        "type": "string"
                    }
                },
                "additionalProperties": false,
                "description": "Creds for Azure can be excluded and then they are loaded from the ENV "
            },
            "BIDSInfo":
            {
                "title": "BIDSInfo",
                "type": "object",
                "properties":
                {
                    "BIDS":
                    {
                        "title": "Bids",
                        "type": "object"
                    }
                }
            },
            "BaseCompute":
            {
                "title": "BaseCompute",
                "required": ["queue_threshold", "max_compute", "machine_type", "disk_size", "preemptible", "zone", "region"],
                "type": "object",
                "properties":
                {
                    "queue_threshold":
                    {
                        "title": "Queue Threshold",
                        "type": "integer"
                    },
                    "max_compute":
                    {
                        "title": "Max Compute",
                        "type": "integer"
                    },
                    "machine_type":
                    {
                        "title": "Machine Type",
                        "type": "string"
                    },
                    "disk_size":
                    {
                        "title": "Disk Size",
                        "type": "integer"
                    },
                    "swap_size":
                    {
                        "title": "Swap Size",
                        "pattern": "^[1-9]+\\d*[KGMT]$",
                        "type": "string",
                        "default": "30G"
                    },
                    "preemptible":
                    {
                        "title": "Preemptible",
                        "type": "boolean"
                    },
                    "zone":
                    {
                        "title": "Zone",
                        "type": "string"
                    },
                    "region":
                    {
                        "title": "Region",
                        "type": "string"
                    }
                },
                "additionalProperties": false
            },
            "BasicLogin":
            {
                "title": "BasicLogin",
                "required": ["email", "password"],
                "type": "object",
                "properties":
                {
                    "auth_type":
                    {
                        "$ref": "#/components/schemas/AuthType"
                    },
                    "email":
                    {
                        "title": "Email",
                        "type": "string"
                    },
                    "password":
                    {
                        "title": "Password",
                        "type": "string"
                    }
                }
            },
            "BatchJobAnalysisInput":
            {
                "title": "BatchJobAnalysisInput",
                "type": "object",
                "properties":
                {
                    "job":
                    {
                        "$ref": "#/components/schemas/InputJob"
                    },
                    "label":
                    {
                        "title": "Label",
                        "type": "string"
                    },
                    "description":
                    {
                        "title": "Description",
                        "type": "string"
                    },
                    "compute_provider_id":
                    {
                        "title": "Compute Provider Id",
                        "type": "string"
                    },
                    "info":
                    {
                        "title": "Info",
                        "type": "object"
                    }
                }
            },
            "Body_partial_api_acquisitions__cid__analyses__analysis_id__files_post":
            {
                "title": "Body_partial_api_acquisitions__cid__analyses__analysis_id__files_post",
                "required": ["file"],
                "type": "object",
                "properties":
                {
                    "file":
                    {
                        "title": "File",
                        "type": "string",
                        "format": "binary"
                    }
                }
            },
            "Body_partial_api_collections__cid__analyses__analysis_id__files_post":
            {
                "title": "Body_partial_api_collections__cid__analyses__analysis_id__files_post",
                "required": ["file"],
                "type": "object",
                "properties":
                {
                    "file":
                    {
                        "title": "File",
                        "type": "string",
                        "format": "binary"
                    }
                }
            },
            "Body_partial_api_projects__cid__analyses__analysis_id__files_post":
            {
                "title": "Body_partial_api_projects__cid__analyses__analysis_id__files_post",
                "required": ["file"],
                "type": "object",
                "properties":
                {
                    "file":
                    {
                        "title": "File",
                        "type": "string",
                        "format": "binary"
                    }
                }
            },
            "Body_partial_api_sessions__cid__analyses__analysis_id__files_post":
            {
                "title": "Body_partial_api_sessions__cid__analyses__analysis_id__files_post",
                "required": ["file"],
                "type": "object",
                "properties":
                {
                    "file":
                    {
                        "title": "File",
                        "type": "string",
                        "format": "binary"
                    }
                }
            },
            "Body_partial_api_subjects__cid__analyses__analysis_id__files_post":
            {
                "title": "Body_partial_api_subjects__cid__analyses__analysis_id__files_post",
                "required": ["file"],
                "type": "object",
                "properties":
                {
                    "file":
                    {
                        "title": "File",
                        "type": "string",
                        "format": "binary"
                    }
                }
            },
            "BulkMoveInput":
            {
                "title": "BulkMoveInput",
                "required": ["destination_container_type", "sources", "destinations", "conflict_mode"],
                "type": "object",
                "properties":
                {
                    "destination_container_type":
                    {
                        "$ref": "#/components/schemas/DestinationContainerType"
                    },
                    "sources":
                    {
                        "title": "Sources",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "array",
                        "items":
                        {
                            "type": "string",
                            "pattern": "^[0-9a-fA-F]{24}$"
                        }
                    },
                    "destinations":
                    {
                        "title": "Destinations",
                        "maxItems": 1,
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "conflict_mode":
                    {
                        "$ref": "#/components/schemas/ConflictTypes"
                    }
                }
            },
            "ClassicBatchProposalInput":
            {
                "title": "ClassicBatchProposalInput",
                "required": ["gear_id", "targets"],
                "type": "object",
                "properties":
                {
                    "gear_id":
                    {
                        "title": "Gear Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "targets":
                    {
                        "title": "Targets",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/ContainerReference"
                        }
                    },
                    "config":
                    {
                        "title": "Config",
                        "type": "object"
                    },
                    "tags":
                    {
                        "title": "Tags",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/Tag"
                        },
                        "default": []
                    },
                    "analysis":
                    {
                        "$ref": "#/components/schemas/BatchJobAnalysisInput"
                    },
                    "optional_input_policy":
                    {
                        "$ref": "#/components/schemas/OptionalInputPolicy"
                    },
                    "compute_provider_id":
                    {
                        "title": "Compute Provider Id",
                        "type": "string"
                    }
                }
            },
            "ClassicBatchProposalOutput":
            {
                "title": "ClassicBatchProposalOutput",
                "required": ["ambiguous", "not_matched", "matched"],
                "type": "object",
                "properties":
                {
                    "_id":
                    {
                        "title": " Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "gear_id":
                    {
                        "title": "Gear Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "state":
                    {
                        "$ref": "#/components/schemas/JobState"
                    },
                    "origin":
                    {
                        "$ref": "#/components/schemas/Origin"
                    },
                    "config":
                    {
                        "title": "Config",
                        "type": "object"
                    },
                    "created":
                    {
                        "title": "Created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "modified":
                    {
                        "title": "Modified",
                        "type": "string",
                        "format": "date-time"
                    },
                    "optional_input_policy":
                    {
                        "$ref": "#/components/schemas/OptionalInputPolicy"
                    },
                    "ambiguous":
                    {
                        "title": "Ambiguous",
                        "anyOf": [
                        {
                            "type": "array",
                            "items":
                            {
                                "$ref": "#/components/schemas/Session"
                            }
                        },
                        {
                            "type": "array",
                            "items":
                            {
                                "$ref": "#/components/schemas/Acquisition"
                            }
                        }]
                    },
                    "not_matched":
                    {
                        "title": "Not Matched",
                        "anyOf": [
                        {
                            "type": "array",
                            "items":
                            {
                                "$ref": "#/components/schemas/Session"
                            }
                        },
                        {
                            "type": "array",
                            "items":
                            {
                                "$ref": "#/components/schemas/Acquisition"
                            }
                        }]
                    },
                    "matched":
                    {
                        "title": "Matched",
                        "anyOf": [
                        {
                            "type": "array",
                            "items":
                            {
                                "$ref": "#/components/schemas/Acquisition"
                            }
                        },
                        {
                            "type": "array",
                            "items":
                            {
                                "$ref": "#/components/schemas/ContainerReference"
                            }
                        }]
                    },
                    "improper_permissions":
                    {
                        "title": "Improper Permissions",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    }
                }
            },
            "Collection":
            {
                "title": "Collection",
                "required": ["label", "description", "info", "curator"],
                "type": "object",
                "properties":
                {
                    "created":
                    {
                        "title": "Created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "modified":
                    {
                        "title": "Modified",
                        "type": "string",
                        "format": "date-time"
                    },
                    "label":
                    {
                        "title": "Label",
                        "type": "string"
                    },
                    "description":
                    {
                        "title": "Description",
                        "type": "string"
                    },
                    "info":
                    {
                        "title": "Info",
                        "type": "object"
                    },
                    "_id":
                    {
                        "title": " Id",
                        "type": "string"
                    },
                    "curator":
                    {
                        "title": "Curator",
                        "type": "string"
                    },
                    "revision":
                    {
                        "title": "Revision",
                        "type": "integer",
                        "default": 1
                    },
                    "files":
                    {
                        "title": "Files",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/File"
                        },
                        "default": []
                    },
                    "notes":
                    {
                        "title": "Notes",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/Note"
                        },
                        "default": []
                    },
                    "tags":
                    {
                        "title": "Tags",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    },
                    "analyses":
                    {
                        "title": "Analyses",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/Analysis"
                        },
                        "default": []
                    },
                    "permissions":
                    {
                        "title": "Permissions",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/AccessPermission"
                        },
                        "default": []
                    },
                    "join-origin":
                    {
                        "$ref": "#/components/schemas/JoinOrigins"
                    }
                }
            },
            "CollectionContainerOutput":
            {
                "title": "CollectionContainerOutput",
                "required": ["label", "description", "info", "curator"],
                "type": "object",
                "properties":
                {
                    "created":
                    {
                        "title": "Created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "modified":
                    {
                        "title": "Modified",
                        "type": "string",
                        "format": "date-time"
                    },
                    "label":
                    {
                        "title": "Label",
                        "type": "string"
                    },
                    "description":
                    {
                        "title": "Description",
                        "type": "string"
                    },
                    "info":
                    {
                        "title": "Info",
                        "type": "object"
                    },
                    "_id":
                    {
                        "title": " Id",
                        "type": "string"
                    },
                    "curator":
                    {
                        "title": "Curator",
                        "type": "string"
                    },
                    "revision":
                    {
                        "title": "Revision",
                        "type": "integer",
                        "default": 1
                    },
                    "files":
                    {
                        "title": "Files",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/File"
                        },
                        "default": []
                    },
                    "notes":
                    {
                        "title": "Notes",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/Note"
                        },
                        "default": []
                    },
                    "tags":
                    {
                        "title": "Tags",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    },
                    "analyses":
                    {
                        "title": "Analyses",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/Analysis"
                        },
                        "default": []
                    },
                    "permissions":
                    {
                        "title": "Permissions",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/AccessPermission"
                        },
                        "default": []
                    },
                    "join-origin":
                    {
                        "$ref": "#/components/schemas/JoinOrigins"
                    },
                    "container_type":
                    {
                        "title": "Container Type",
                        "type": "string",
                        "default": "collection"
                    }
                }
            },
            "CollectionInput":
            {
                "title": "CollectionInput",
                "required": ["label"],
                "type": "object",
                "properties":
                {
                    "label":
                    {
                        "title": "Label",
                        "type": "string"
                    },
                    "info":
                    {
                        "title": "Info",
                        "type": "object",
                        "default":
                        {}
                    },
                    "description":
                    {
                        "title": "Description",
                        "type": "string"
                    }
                },
                "additionalProperties": false
            },
            "CollectionInputWithContents":
            {
                "title": "CollectionInputWithContents",
                "type": "object",
                "properties":
                {
                    "contents":
                    {
                        "$ref": "#/components/schemas/CollectionOperation"
                    },
                    "label":
                    {
                        "title": "Label",
                        "type": "string"
                    },
                    "info":
                    {
                        "title": "Info",
                        "type": "object"
                    },
                    "description":
                    {
                        "title": "Description",
                        "type": "string"
                    }
                },
                "additionalProperties": false
            },
            "CollectionNode":
            {
                "title": "CollectionNode",
                "required": ["level", "_id"],
                "type": "object",
                "properties":
                {
                    "level":
                    {
                        "$ref": "#/components/schemas/CollectionNodeLevel"
                    },
                    "_id":
                    {
                        "title": " Id",
                        "type": "string"
                    }
                },
                "additionalProperties": false
            },
            "CollectionNodeLevel":
            {
                "title": "CollectionNodeLevel",
                "enum": ["project", "session", "subject", "acquisition"],
                "type": "string",
                "description": "An enumeration."
            },
            "CollectionOperation":
            {
                "title": "CollectionOperation",
                "required": ["operation", "nodes"],
                "type": "object",
                "properties":
                {
                    "operation":
                    {
                        "$ref": "#/components/schemas/CollectionOperationType"
                    },
                    "nodes":
                    {
                        "title": "Nodes",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/CollectionNode"
                        }
                    }
                },
                "additionalProperties": false
            },
            "CollectionOperationType":
            {
                "title": "CollectionOperationType",
                "enum": ["add", "remove"],
                "type": "string",
                "description": "An enumeration."
            },
            "CollectionWithStats":
            {
                "title": "CollectionWithStats",
                "required": ["label", "description", "info", "curator"],
                "type": "object",
                "properties":
                {
                    "created":
                    {
                        "title": "Created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "modified":
                    {
                        "title": "Modified",
                        "type": "string",
                        "format": "date-time"
                    },
                    "label":
                    {
                        "title": "Label",
                        "type": "string"
                    },
                    "description":
                    {
                        "title": "Description",
                        "type": "string"
                    },
                    "info":
                    {
                        "title": "Info",
                        "type": "object"
                    },
                    "_id":
                    {
                        "title": " Id",
                        "type": "string"
                    },
                    "curator":
                    {
                        "title": "Curator",
                        "type": "string"
                    },
                    "revision":
                    {
                        "title": "Revision",
                        "type": "integer",
                        "default": 1
                    },
                    "files":
                    {
                        "title": "Files",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/File"
                        },
                        "default": []
                    },
                    "notes":
                    {
                        "title": "Notes",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/Note"
                        },
                        "default": []
                    },
                    "tags":
                    {
                        "title": "Tags",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    },
                    "analyses":
                    {
                        "title": "Analyses",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/Analysis"
                        },
                        "default": []
                    },
                    "permissions":
                    {
                        "title": "Permissions",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/AccessPermission"
                        },
                        "default": []
                    },
                    "join-origin":
                    {
                        "$ref": "#/components/schemas/JoinOrigins"
                    },
                    "attachment_count":
                    {
                        "title": "Attachment Count",
                        "type": "integer",
                        "default": 0
                    },
                    "session_count":
                    {
                        "title": "Session Count",
                        "type": "integer",
                        "default": 0
                    },
                    "noncompliant_session_count":
                    {
                        "title": "Noncompliant Session Count",
                        "type": "integer",
                        "default": 0
                    },
                    "subject_count":
                    {
                        "title": "Subject Count",
                        "type": "integer",
                        "default": 0
                    }
                }
            },
            "Config":
            {
                "title": "Config",
                "required": ["auth"],
                "type": "object",
                "properties":
                {
                    "last_updated":
                    {
                        "title": "Last Updated",
                        "type": "string",
                        "format": "date-time"
                    },
                    "_id":
                    {
                        "title": " Id",
                        "type": "string"
                    },
                    "default_page_size":
                    {
                        "title": "Default Page Size",
                        "type": "integer",
                        "default": 100
                    },
                    "core":
                    {
                        "title": "Core",
                        "allOf": [
                        {
                            "$ref": "#/components/schemas/Core"
                        }],
                        "default":
                        {
                            "debug": false,
                            "access_log_enabled": true,
                            "signed_url_secret": "secret",
                            "log_level": "info",
                            "log_path": "config/logging.yml",
                            "drone_secret": "23rt7PtEn8NuuMibZtFFr3LB81mOYofzdlCt5khIwTByxr27IalVkmAC",
                            "urllib_connect_timeout": 5,
                            "urllib_read_timeout": 10
                        }
                    },
                    "site":
                    {
                        "title": "Site",
                        "allOf": [
                        {
                            "$ref": "#/components/schemas/Site"
                        }],
                        "default":
                        {
                            "id": "local",
                            "api_url": "https://localhost/api",
                            "central_url": "https://sdmc.scitran.io/api",
                            "name": "Local",
                            "redirect_url": "https://local.flywheel.io",
                            "registered": false,
                            "upload_maximum_bytes": "10737418240"
                        }
                    },
                    "features":
                    {
                        "title": "Features",
                        "allOf": [
                        {
                            "$ref": "#/components/schemas/Features"
                        }],
                        "default":
                        {
                            "auth0": false,
                            "collections": true,
                            "crawler": true,
                            "default_viewer_apps": true,
                            "deid_log": false,
                            "deid_profile": true,
                            "dimse": false,
                            "healthcare_api": false,
                            "job_ask": true,
                            "job_tickets": true,
                            "ldap_sync": false,
                            "multiproject": false,
                            "ohif_react": false,
                            "roles_and_permissions": true,
                            "signed_url": false,
                            "unsafe_login": true,
                            "virus_scan": false,
                            "change_logging": false
                        }
                    },
                    "signed_url":
                    {
                        "title": "Signed Url",
                        "type": "boolean",
                        "default": false
                    },
                    "created":
                    {
                        "title": "Created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "modified":
                    {
                        "title": "Modified",
                        "type": "string",
                        "format": "date-time"
                    },
                    "master_subject_code":
                    {
                        "title": "Master Subject Code",
                        "allOf": [
                        {
                            "$ref": "#/components/schemas/MasterSubjectCode"
                        }],
                        "default":
                        {
                            "size": "6",
                            "prefix": "fw",
                            "chars": "BCDFGHJKLMNPQRSTVWXYZ123456789"
                        }
                    },
                    "persistent":
                    {
                        "title": "Persistent",
                        "allOf": [
                        {
                            "$ref": "#/components/schemas/Persistent"
                        }],
                        "default":
                        {
                            "data_path": "/var/scitran/data",
                            "db_connect_timeout": 2000,
                            "elasticsearch_timeout": 10,
                            "db_uri": "mongodb://flywheel-mongodb-replicaset-client:27017/scitran?replicaSet=elasticflywheel",
                            "support_legacy_fs": true,
                            "db_log_uri": "mongodb://flywheel-mongodb-replicaset-client:27017/logs?replicaSet=elasticflywheel",
                            "elasticsearch_host": "elasticsearch-master:9200",
                            "db_server_selection_timeout": 3000
                        }
                    },
                    "queue":
                    {
                        "title": "Queue",
                        "allOf": [
                        {
                            "$ref": "#/components/schemas/Queue"
                        }],
                        "default":
                        {
                            "max_retries": 3,
                            "retry_on_fail": false
                        }
                    },
                    "webhooks":
                    {
                        "title": "Webhooks",
                        "allOf": [
                        {
                            "$ref": "#/components/schemas/WebHooks"
                        }],
                        "default":
                        {}
                    },
                    "auth":
                    {
                        "title": "Auth",
                        "allOf": [
                        {
                            "$ref": "#/components/schemas/Auth"
                        }]
                    }
                },
                "additionalProperties": false,
                "description": "Base class for settings, allowing values to be overridden by environment variables.\n\nThis is useful in production for secrets you do not wish to save in code, it plays nicely with docker(-compose),\nHeroku and any 12 factor app design."
            },
            "ConfigOut":
            {
                "title": "ConfigOut",
                "required": ["last_updated", "auth"],
                "type": "object",
                "properties":
                {
                    "last_updated":
                    {
                        "title": "Last Updated",
                        "type": "string",
                        "format": "date-time"
                    },
                    "site":
                    {
                        "title": "Site",
                        "allOf": [
                        {
                            "$ref": "#/components/schemas/Site"
                        }],
                        "default":
                        {
                            "id": "local",
                            "api_url": "https://localhost/api",
                            "central_url": "https://sdmc.scitran.io/api",
                            "name": "Local",
                            "redirect_url": "https://local.flywheel.io",
                            "registered": false,
                            "upload_maximum_bytes": "10737418240"
                        }
                    },
                    "features":
                    {
                        "title": "Features",
                        "type": "object",
                        "additionalProperties":
                        {
                            "type": "boolean"
                        },
                        "default":
                        {}
                    },
                    "signed_url":
                    {
                        "title": "Signed Url",
                        "type": "boolean",
                        "default": false
                    },
                    "auth":
                    {
                        "title": "Auth",
                        "allOf": [
                        {
                            "$ref": "#/components/schemas/AuthOut"
                        }]
                    }
                },
                "description": "Base class for settings, allowing values to be overridden by environment variables.\n\nThis is useful in production for secrets you do not wish to save in code, it plays nicely with docker(-compose),\nHeroku and any 12 factor app design."
            },
            "ConflictTypes":
            {
                "title": "ConflictTypes",
                "enum": ["skip", "move", "dry"],
                "type": "string",
                "description": "An enumeration."
            },
            "ContainerReference":
            {
                "title": "ContainerReference",
                "required": ["id", "type"],
                "type": "object",
                "properties":
                {
                    "id":
                    {
                        "title": "Id",
                        "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "string"
                        }]
                    },
                    "type":
                    {
                        "$ref": "#/components/schemas/ContainerType"
                    }
                },
                "description": "Representation of a reference to a container\n\nAttributes:\n    id (str): The id of the container\n    type (ContainerType): The container type"
            },
            "ContainerSpecWithInputs":
            {
                "title": "ContainerSpecWithInputs",
                "required": ["fields"],
                "type": "object",
                "properties":
                {
                    "fields":
                    {
                        "title": "Fields",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "filter":
                    {
                        "title": "Filter",
                        "type": "string"
                    },
                    "limit":
                    {
                        "title": "Limit",
                        "type": "integer",
                        "default": 50
                    },
                    "sort":
                    {
                        "title": "Sort",
                        "type": "string"
                    },
                    "files":
                    {
                        "$ref": "#/components/schemas/FileFilter"
                    },
                    "inputs":
                    {
                        "$ref": "#/components/schemas/FileFilter"
                    }
                },
                "additionalProperties": false,
                "description": "Only works for Analyses or Jobs"
            },
            "ContainerType":
            {
                "title": "ContainerType",
                "enum": ["group", "project", "subject", "session", "acquisition", "analysis", "file", "user", "collection"],
                "type": "string",
                "description": "An enumeration."
            },
            "ContextInput":
            {
                "title": "ContextInput",
                "required": ["found"],
                "type": "object",
                "properties":
                {
                    "found":
                    {
                        "title": "Found",
                        "type": "boolean"
                    },
                    "value":
                    {
                        "title": "Value"
                    },
                    "base":
                    {
                        "title": "Base",
                        "type": "string"
                    }
                },
                "description": "Represents a context-based input to a job\n\nAttributes:\n    found (bool): Whether or not the context information was found\n    base (str): The input type"
            },
            "Core":
            {
                "title": "Core",
                "type": "object",
                "properties":
                {
                    "debug":
                    {
                        "title": "Debug",
                        "type": "boolean",
                        "default": false
                    },
                    "access_log_enabled":
                    {
                        "title": "Access Log Enabled",
                        "type": "boolean",
                        "default": true
                    },
                    "signed_url_secret":
                    {
                        "title": "Signed Url Secret",
                        "type": "string",
                        "default": "secret"
                    },
                    "log_level":
                    {
                        "title": "Log Level",
                        "type": "string",
                        "default": "info"
                    },
                    "log_path":
                    {
                        "title": "Log Path",
                        "type": "string",
                        "default": "config/logging.yml"
                    },
                    "drone_secret":
                    {
                        "title": "Drone Secret",
                        "type": "string",
                        "default": "change-me"
                    },
                    "urllib_connect_timeout":
                    {
                        "title": "Urllib Connect Timeout",
                        "type": "integer",
                        "default": 5
                    },
                    "urllib_read_timeout":
                    {
                        "title": "Urllib Read Timeout",
                        "type": "integer",
                        "default": 10
                    }
                },
                "additionalProperties": false,
                "description": "Base class for settings, allowing values to be overridden by environment variables.\n\nThis is useful in production for secrets you do not wish to save in code, it plays nicely with docker(-compose),\nHeroku and any 12 factor app design."
            },
            "Creds":
            {
                "title": "Creds",
                "type": "object",
                "properties":
                {},
                "additionalProperties": false,
                "description": "Used for creds that are empty\nProvider explicit type with no definition"
            },
            "Curator":
            {
                "title": "Curator",
                "required": ["_id", "firstname", "lastname"],
                "type": "object",
                "properties":
                {
                    "_id":
                    {
                        "title": " Id",
                        "type": "string"
                    },
                    "firstname":
                    {
                        "title": "Firstname",
                        "type": "string"
                    },
                    "lastname":
                    {
                        "title": "Lastname",
                        "type": "string"
                    }
                }
            },
            "CurrentUserOutput":
            {
                "title": "CurrentUserOutput",
                "required": ["_id", "firstname", "lastname", "email", "roles", "created", "modified"],
                "type": "object",
                "properties":
                {
                    "_id":
                    {
                        "title": " Id",
                        "type": "string"
                    },
                    "user_id":
                    {
                        "title": "User Id",
                        "type": "string"
                    },
                    "firstname":
                    {
                        "title": "Firstname",
                        "type": "string"
                    },
                    "lastname":
                    {
                        "title": "Lastname",
                        "type": "string"
                    },
                    "email":
                    {
                        "title": "Email",
                        "type": "string"
                    },
                    "auth0sub":
                    {
                        "title": "Auth0Sub",
                        "type": "string"
                    },
                    "roles":
                    {
                        "title": "Roles",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/RoleType"
                        }
                    },
                    "root":
                    {
                        "title": "Root",
                        "type": "boolean",
                        "default": false
                    },
                    "api_key":
                    {
                        "$ref": "#/components/schemas/ApiKeyOutput"
                    },
                    "avatar":
                    {
                        "title": "Avatar",
                        "type": "string"
                    },
                    "avatars":
                    {
                        "title": "Avatars",
                        "allOf": [
                        {
                            "$ref": "#/components/schemas/AvatarList"
                        }],
                        "default":
                        {}
                    },
                    "created":
                    {
                        "title": "Created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "modified":
                    {
                        "title": "Modified",
                        "type": "string",
                        "format": "date-time"
                    },
                    "info":
                    {
                        "title": "Info",
                        "type": "object"
                    }
                }
            },
            "DeletedResult":
            {
                "title": "DeletedResult",
                "required": ["deleted"],
                "type": "object",
                "properties":
                {
                    "deleted":
                    {
                        "title": "Deleted",
                        "type": "boolean"
                    }
                }
            },
            "DestinationContainerType":
            {
                "title": "DestinationContainerType",
                "enum": ["subjects", "projects"],
                "type": "string",
                "description": "An enumeration."
            },
            "DeviceAdminUpdate":
            {
                "title": "DeviceAdminUpdate",
                "required": ["disabled"],
                "type": "object",
                "properties":
                {
                    "disabled":
                    {
                        "title": "Disabled",
                        "type": "boolean"
                    }
                }
            },
            "DeviceCreate":
            {
                "title": "DeviceCreate",
                "type": "object",
                "properties":
                {
                    "label":
                    {
                        "title": "Label",
                        "type": "string"
                    },
                    "type":
                    {
                        "title": "Type",
                        "type": "string"
                    }
                },
                "description": "Used only for Post inputs"
            },
            "DeviceUpdate":
            {
                "title": "DeviceUpdate",
                "type": "object",
                "properties":
                {
                    "type":
                    {
                        "title": "Type",
                        "type": "string"
                    },
                    "version":
                    {
                        "title": "Version",
                        "type": "string"
                    },
                    "interval":
                    {
                        "title": "Interval",
                        "type": "integer"
                    },
                    "errors":
                    {
                        "title": "Errors",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "info":
                    {
                        "title": "Info",
                        "type": "object"
                    }
                }
            },
            "DownloadInput":
            {
                "title": "DownloadInput",
                "type": "object",
                "properties":
                {
                    "nodes":
                    {
                        "title": "Nodes",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/DownloadNode"
                        },
                        "default": []
                    },
                    "optional":
                    {
                        "title": "Optional",
                        "type": "boolean",
                        "default": false
                    },
                    "files":
                    {
                        "title": "Files",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/FileReference"
                        },
                        "default": []
                    },
                    "metadata":
                    {
                        "title": "Metadata",
                        "type": "boolean"
                    },
                    "analyses":
                    {
                        "title": "Analyses",
                        "type": "boolean"
                    },
                    "filters":
                    {
                        "title": "Filters",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/InputFilter"
                        },
                        "default": []
                    },
                    "prefix":
                    {
                        "title": "Prefix",
                        "type": "string"
                    }
                },
                "additionalProperties": false
            },
            "DownloadNode":
            {
                "title": "DownloadNode",
                "required": ["level", "_id"],
                "type": "object",
                "properties":
                {
                    "level":
                    {
                        "$ref": "#/components/schemas/ContainerType"
                    },
                    "_id":
                    {
                        "title": " Id",
                        "type": "string"
                    }
                },
                "additionalProperties": false
            },
            "DownloadStrategy":
            {
                "title": "DownloadStrategy",
                "enum": ["bulk", "classic", "full"],
                "type": "string",
                "description": "An enumeration."
            },
            "DownloadTicketStub":
            {
                "title": "DownloadTicketStub",
                "required": ["ticket", "filename", "file_cnt", "size"],
                "type": "object",
                "properties":
                {
                    "ticket":
                    {
                        "title": "Ticket",
                        "type": "string"
                    },
                    "filename":
                    {
                        "title": "Filename",
                        "type": "string"
                    },
                    "file_cnt":
                    {
                        "title": "File Cnt",
                        "type": "integer"
                    },
                    "size":
                    {
                        "title": "Size",
                        "type": "integer"
                    }
                },
                "description": "Returned by get_ticket(). Contains info on the\nDownloadTicket just created.\n\nAttributes:\n\n    ticket (str): unique id of ticket\n    filename (str): filename to use\n    file_cnt (int): number of files\n    size (int): total size, in bytes"
            },
            "Edition":
            {
                "title": "Edition",
                "type": "object",
                "properties":
                {
                    "lab":
                    {
                        "title": "Lab",
                        "type": "boolean",
                        "default": false
                    }
                }
            },
            "EgressDevice":
            {
                "title": "EgressDevice",
                "required": ["type", "last_seen", "disabled"],
                "type": "object",
                "properties":
                {
                    "_id":
                    {
                        "title": " Id",
                        "type": "string"
                    },
                    "label":
                    {
                        "title": "Label",
                        "type": "string"
                    },
                    "name":
                    {
                        "title": "Name",
                        "type": "string"
                    },
                    "method":
                    {
                        "title": "Method",
                        "type": "string"
                    },
                    "key":
                    {
                        "title": "Key",
                        "type": "string"
                    },
                    "type":
                    {
                        "title": "Type",
                        "type": "string"
                    },
                    "version":
                    {
                        "title": "Version",
                        "type": "string"
                    },
                    "errors":
                    {
                        "title": "Errors",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "info":
                    {
                        "title": "Info",
                        "type": "object"
                    },
                    "interval":
                    {
                        "title": "Interval",
                        "type": "integer"
                    },
                    "last_seen":
                    {
                        "title": "Last Seen",
                        "type": "string",
                        "format": "date-time"
                    },
                    "disabled":
                    {
                        "title": "Disabled",
                        "type": "boolean"
                    }
                }
            },
            "EgressProvider":
            {
                "title": "EgressProvider",
                "required": ["label", "provider_class", "provider_type", "config", "modified", "created"],
                "type": "object",
                "properties":
                {
                    "_id":
                    {
                        "title": " Id",
                        "type": "string"
                    },
                    "label":
                    {
                        "title": "Label",
                        "type": "string"
                    },
                    "provider_class":
                    {
                        "$ref": "#/components/schemas/ProviderClass"
                    },
                    "provider_type":
                    {
                        "$ref": "#/components/schemas/ProviderType"
                    },
                    "config":
                    {
                        "title": "Config",
                        "type": "object"
                    },
                    "modified":
                    {
                        "title": "Modified",
                        "type": "string",
                        "format": "date-time"
                    },
                    "created":
                    {
                        "title": "Created",
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "ExecutorInfo":
            {
                "title": "ExecutorInfo",
                "type": "object",
                "properties":
                {
                    "name":
                    {
                        "title": "Name",
                        "type": "string"
                    },
                    "host":
                    {
                        "title": "Host",
                        "type": "string"
                    },
                    "instance_type":
                    {
                        "title": "Instance Type",
                        "type": "string"
                    },
                    "cpu_cores":
                    {
                        "title": "Cpu Cores",
                        "type": "integer"
                    },
                    "gpu":
                    {
                        "title": "Gpu",
                        "type": "boolean"
                    },
                    "memory_bytes":
                    {
                        "title": "Memory Bytes",
                        "type": "integer"
                    },
                    "disk_bytes":
                    {
                        "title": "Disk Bytes",
                        "type": "integer"
                    },
                    "swap_bytes":
                    {
                        "title": "Swap Bytes",
                        "type": "integer"
                    }
                },
                "description": "Information about the entity executing the job\n\nAttributes:\n    name (Optional[str]): A machine or instance name, possibly a FQDN\n    host (Optional[str]): The hostname or (more likely) IP address of the\n        engine instance\n    instance_type (Optional[str]): A free form string describing the\n        instance type\n    cpu_cores (Optional[int]): The number of CPU cores\n    gpu (Optional[bool]): Whether or not a GPU is available\n    memory_bytes (Optional[int]): The amount of memory on the system,\n        in bytes\n    disk_bytes (Optional[int]): The size of the hard disk on the system,\n        in bytes\n    swap_bytes (Optional[int]): The available swap space, in bytes"
            },
            "FacetQuery":
            {
                "title": "FacetQuery",
                "type": "object",
                "properties":
                {
                    "return_type":
                    {
                        "$ref": "#/components/schemas/SearchReturnType"
                    },
                    "structured_query":
                    {
                        "title": "Structured Query",
                        "type": "string"
                    },
                    "search_string":
                    {
                        "title": "Search String",
                        "type": "string"
                    },
                    "all_data":
                    {
                        "title": "All Data",
                        "type": "boolean",
                        "default": false
                    },
                    "filters":
                    {
                        "title": "Filters",
                        "type": "array",
                        "items":
                        {
                            "type": "object"
                        }
                    }
                }
            },
            "Features":
            {
                "title": "Features",
                "type": "object",
                "properties":
                {
                    "auth0":
                    {
                        "title": "Auth0",
                        "type": "boolean"
                    },
                    "collections":
                    {
                        "title": "Collections",
                        "type": "boolean",
                        "default": false
                    },
                    "crawler":
                    {
                        "title": "Crawler",
                        "type": "boolean",
                        "default": false
                    },
                    "default_viewer_apps":
                    {
                        "title": "Default Viewer Apps",
                        "type": "boolean",
                        "default": true
                    },
                    "deid_log":
                    {
                        "title": "Deid Log",
                        "type": "boolean",
                        "default": false
                    },
                    "deid_profile":
                    {
                        "title": "Deid Profile",
                        "type": "boolean",
                        "default": false
                    },
                    "dimse":
                    {
                        "title": "Dimse",
                        "type": "boolean",
                        "default": false
                    },
                    "healthcare_api":
                    {
                        "title": "Healthcare Api",
                        "type": "boolean",
                        "default": false
                    },
                    "job_ask":
                    {
                        "title": "Job Ask",
                        "type": "boolean",
                        "default": true
                    },
                    "job_tickets":
                    {
                        "title": "Job Tickets",
                        "type": "boolean",
                        "default": true
                    },
                    "ldap_sync":
                    {
                        "title": "Ldap Sync",
                        "type": "boolean",
                        "default": false
                    },
                    "multiproject":
                    {
                        "title": "Multiproject",
                        "type": "boolean",
                        "default": false
                    },
                    "ohif_react":
                    {
                        "title": "Ohif React",
                        "type": "boolean",
                        "default": false
                    },
                    "ohif_slice_order":
                    {
                        "title": "Ohif Slice Order",
                        "type": "string"
                    },
                    "roles_and_permissions":
                    {
                        "title": "Roles And Permissions",
                        "type": "boolean",
                        "default": false
                    },
                    "signed_url":
                    {
                        "title": "Signed Url",
                        "type": "boolean",
                        "default": false
                    },
                    "subjects_view":
                    {
                        "title": "Subjects View",
                        "type": "boolean"
                    },
                    "unsafe_login":
                    {
                        "title": "Unsafe Login",
                        "type": "boolean",
                        "default": false
                    },
                    "virus_scan":
                    {
                        "title": "Virus Scan",
                        "type": "boolean",
                        "default": false
                    },
                    "change_logging":
                    {
                        "title": "Change Logging",
                        "type": "boolean",
                        "default": false
                    }
                },
                "additionalProperties": false,
                "description": "Base class for settings, allowing values to be overridden by environment variables.\n\nThis is useful in production for secrets you do not wish to save in code, it plays nicely with docker(-compose),\nHeroku and any 12 factor app design."
            },
            "FieldValueBucket":
            {
                "title": "FieldValueBucket",
                "type": "object",
                "properties":
                {
                    "key":
                    {
                        "title": "Key"
                    },
                    "key_as_string":
                    {
                        "title": "Key As String",
                        "type": "string"
                    },
                    "doc_count":
                    {
                        "title": "Doc Count",
                        "type": "integer"
                    }
                }
            },
            "File":
            {
                "title": "File",
                "required": ["_id", "name", "mimetype", "provider_id", "size"],
                "type": "object",
                "properties":
                {
                    "_id":
                    {
                        "title": " Id",
                        "type": "string"
                    },
                    "name":
                    {
                        "title": "Name",
                        "type": "string"
                    },
                    "type":
                    {
                        "title": "Type",
                        "type": "string"
                    },
                    "mimetype":
                    {
                        "title": "Mimetype",
                        "type": "string"
                    },
                    "modality":
                    {
                        "title": "Modality",
                        "pattern": "[^/]+",
                        "type": "string"
                    },
                    "deid_log_id":
                    {
                        "title": "Deid Log Id",
                        "pattern": "[0-9a-f]{8}-([0-9a-f]{4}-){3}[0-9a-f]{12}",
                        "type": "string"
                    },
                    "classification":
                    {
                        "title": "Classification",
                        "type": "object",
                        "additionalProperties":
                        {
                            "type": "array",
                            "items":
                            {
                                "type": "string"
                            }
                        },
                        "default":
                        {}
                    },
                    "tags":
                    {
                        "title": "Tags",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    },
                    "info":
                    {
                        "title": "Info",
                        "type": "object",
                        "default":
                        {}
                    },
                    "provider_id":
                    {
                        "title": "Provider Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "expected_provider_id":
                    {
                        "title": "Expected Provider Id",
                        "type": "string"
                    },
                    "path":
                    {
                        "title": "Path",
                        "type": "string"
                    },
                    "origin":
                    {
                        "title": "Origin",
                        "allOf": [
                        {
                            "$ref": "#/components/schemas/Origin"
                        }],
                        "default":
                        {
                            "type": "unknown"
                        }
                    },
                    "virus_scan":
                    {
                        "$ref": "#/components/schemas/VirusScan"
                    },
                    "created":
                    {
                        "title": "Created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "modified":
                    {
                        "title": "Modified",
                        "type": "string",
                        "format": "date-time"
                    },
                    "replaced":
                    {
                        "title": "Replaced",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted":
                    {
                        "title": "Deleted",
                        "type": "string",
                        "format": "date-time"
                    },
                    "size":
                    {
                        "title": "Size",
                        "type": "integer"
                    },
                    "hash":
                    {
                        "title": "Hash",
                        "type": "string"
                    },
                    "parent_id":
                    {
                        "title": "Parent Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "info_exists":
                    {
                        "title": "Info Exists",
                        "type": "boolean",
                        "default": false
                    },
                    "zip_member_count":
                    {
                        "title": "Zip Member Count",
                        "type": "integer"
                    }
                }
            },
            "FileClassification":
            {
                "title": "FileClassification",
                "type": "object",
                "properties":
                {
                    "modality":
                    {
                        "title": "Modality",
                        "pattern": "^[0-9a-zA-Z_-]{2,64}$",
                        "type": "string"
                    },
                    "add":
                    {
                        "title": "Add",
                        "type": "object",
                        "additionalProperties":
                        {
                            "type": "array",
                            "items":
                            {
                                "type": "string"
                            }
                        }
                    },
                    "delete":
                    {
                        "title": "Delete",
                        "type": "object",
                        "additionalProperties":
                        {
                            "type": "array",
                            "items":
                            {
                                "type": "string"
                            }
                        }
                    },
                    "replace":
                    {
                        "title": "Replace",
                        "type": "object",
                        "additionalProperties":
                        {
                            "type": "array",
                            "items":
                            {
                                "type": "string"
                            }
                        }
                    }
                },
                "additionalProperties": false
            },
            "FileFilter":
            {
                "title": "FileFilter",
                "required": ["fields"],
                "type": "object",
                "properties":
                {
                    "fields":
                    {
                        "title": "Fields",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "limit":
                    {
                        "title": "Limit",
                        "type": "integer",
                        "default": 50
                    },
                    "sort":
                    {
                        "title": "Sort",
                        "type": "string"
                    },
                    "join-origin":
                    {
                        "title": "Join-Origin",
                        "type": "boolean",
                        "default": false
                    }
                },
                "additionalProperties": false,
                "description": "used to filter the files or inputs in a collection"
            },
            "FileGroup":
            {
                "title": "FileGroup",
                "enum": ["inputs", "files"],
                "type": "string",
                "description": "An enumeration."
            },
            "FileInput":
            {
                "title": "FileInput",
                "type": "object",
                "properties":
                {
                    "name":
                    {
                        "title": "Name",
                        "type": "string"
                    },
                    "type":
                    {
                        "title": "Type",
                        "type": "string"
                    },
                    "mimetype":
                    {
                        "title": "Mimetype",
                        "type": "string"
                    },
                    "modality":
                    {
                        "title": "Modality",
                        "pattern": "[^/]+",
                        "type": "string"
                    },
                    "deid_log_id":
                    {
                        "title": "Deid Log Id",
                        "pattern": "[0-9a-f]{8}-([0-9a-f]{4}-){3}[0-9a-f]{12}",
                        "type": "string"
                    },
                    "classification":
                    {
                        "title": "Classification",
                        "type": "object"
                    },
                    "tags":
                    {
                        "title": "Tags",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    },
                    "info":
                    {
                        "title": "Info",
                        "type": "object",
                        "default":
                        {}
                    },
                    "zip_member_count":
                    {
                        "title": "Zip Member Count",
                        "type": "integer"
                    }
                }
            },
            "FileListOutput":
            {
                "title": "FileListOutput",
                "required": ["_id", "name", "mimetype", "provider_id", "origin", "size"],
                "type": "object",
                "properties":
                {
                    "_id":
                    {
                        "title": " Id",
                        "type": "string"
                    },
                    "name":
                    {
                        "title": "Name",
                        "type": "string"
                    },
                    "type":
                    {
                        "title": "Type",
                        "type": "string"
                    },
                    "mimetype":
                    {
                        "title": "Mimetype",
                        "type": "string"
                    },
                    "modality":
                    {
                        "title": "Modality",
                        "pattern": "[^/]+",
                        "type": "string"
                    },
                    "deid_log_id":
                    {
                        "title": "Deid Log Id",
                        "pattern": "[0-9a-f]{8}-([0-9a-f]{4}-){3}[0-9a-f]{12}",
                        "type": "string"
                    },
                    "classification":
                    {
                        "title": "Classification",
                        "type": "object",
                        "default":
                        {}
                    },
                    "tags":
                    {
                        "title": "Tags",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    },
                    "provider_id":
                    {
                        "title": "Provider Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "path":
                    {
                        "title": "Path",
                        "type": "string"
                    },
                    "origin":
                    {
                        "$ref": "#/components/schemas/Origin"
                    },
                    "virus_scan":
                    {
                        "$ref": "#/components/schemas/VirusScan"
                    },
                    "created":
                    {
                        "title": "Created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "modified":
                    {
                        "title": "Modified",
                        "type": "string",
                        "format": "date-time"
                    },
                    "replaced":
                    {
                        "title": "Replaced",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted":
                    {
                        "title": "Deleted",
                        "type": "string",
                        "format": "date-time"
                    },
                    "size":
                    {
                        "title": "Size",
                        "type": "integer"
                    },
                    "hash":
                    {
                        "title": "Hash",
                        "type": "string"
                    },
                    "info":
                    {
                        "$ref": "#/components/schemas/BIDSInfo"
                    },
                    "info_exists":
                    {
                        "title": "Info Exists",
                        "type": "boolean",
                        "default": false
                    },
                    "zip_member_count":
                    {
                        "title": "Zip Member Count",
                        "type": "integer"
                    }
                }
            },
            "FileModifyInput":
            {
                "title": "FileModifyInput",
                "type": "object",
                "properties":
                {
                    "type":
                    {
                        "title": "Type",
                        "type": "string"
                    },
                    "modality":
                    {
                        "title": "Modality",
                        "type": "string"
                    }
                },
                "additionalProperties": false
            },
            "FileOutput":
            {
                "title": "FileOutput",
                "required": ["_id", "name", "mimetype", "provider_id", "size"],
                "type": "object",
                "properties":
                {
                    "_id":
                    {
                        "title": " Id",
                        "type": "string"
                    },
                    "name":
                    {
                        "title": "Name",
                        "type": "string"
                    },
                    "type":
                    {
                        "title": "Type",
                        "type": "string"
                    },
                    "mimetype":
                    {
                        "title": "Mimetype",
                        "type": "string"
                    },
                    "modality":
                    {
                        "title": "Modality",
                        "pattern": "[^/]+",
                        "type": "string"
                    },
                    "deid_log_id":
                    {
                        "title": "Deid Log Id",
                        "pattern": "[0-9a-f]{8}-([0-9a-f]{4}-){3}[0-9a-f]{12}",
                        "type": "string"
                    },
                    "classification":
                    {
                        "title": "Classification",
                        "type": "object",
                        "additionalProperties":
                        {
                            "type": "array",
                            "items":
                            {
                                "type": "string"
                            }
                        },
                        "default":
                        {}
                    },
                    "tags":
                    {
                        "title": "Tags",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    },
                    "info":
                    {
                        "title": "Info",
                        "type": "object",
                        "default":
                        {}
                    },
                    "provider_id":
                    {
                        "title": "Provider Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "expected_provider_id":
                    {
                        "title": "Expected Provider Id",
                        "type": "string"
                    },
                    "path":
                    {
                        "title": "Path",
                        "type": "string"
                    },
                    "origin":
                    {
                        "title": "Origin",
                        "allOf": [
                        {
                            "$ref": "#/components/schemas/Origin"
                        }],
                        "default":
                        {
                            "type": "unknown"
                        }
                    },
                    "virus_scan":
                    {
                        "$ref": "#/components/schemas/VirusScan"
                    },
                    "created":
                    {
                        "title": "Created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "modified":
                    {
                        "title": "Modified",
                        "type": "string",
                        "format": "date-time"
                    },
                    "replaced":
                    {
                        "title": "Replaced",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted":
                    {
                        "title": "Deleted",
                        "type": "string",
                        "format": "date-time"
                    },
                    "size":
                    {
                        "title": "Size",
                        "type": "integer"
                    },
                    "hash":
                    {
                        "title": "Hash",
                        "type": "string"
                    },
                    "parent_id":
                    {
                        "title": "Parent Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "info_exists":
                    {
                        "title": "Info Exists",
                        "type": "boolean",
                        "default": false
                    },
                    "zip_member_count":
                    {
                        "title": "Zip Member Count",
                        "type": "integer"
                    }
                }
            },
            "FileReference":
            {
                "title": "FileReference",
                "required": ["id", "type", "name"],
                "type": "object",
                "properties":
                {
                    "id":
                    {
                        "title": "Id",
                        "type": "string"
                    },
                    "type":
                    {
                        "$ref": "#/components/schemas/ContainerType"
                    },
                    "name":
                    {
                        "title": "Name",
                        "type": "string"
                    },
                    "group":
                    {
                        "$ref": "#/components/schemas/FileGroup"
                    }
                },
                "additionalProperties": false,
                "description": "Representation of a reference to a file\n\nAttributes:\n    id (str): The id of the container the file is in\n    type (ContainerType): The type of container the file is in\n    name (str): The name of the file\n    group (FileGroup): inputs or outputs/files"
            },
            "FileTemplateOptions":
            {
                "title": "FileTemplateOptions",
                "type": "object",
                "properties":
                {
                    "minimum":
                    {
                        "title": "Minimum",
                        "type": "integer"
                    },
                    "maximum":
                    {
                        "title": "Maximum",
                        "type": "integer"
                    },
                    "mimetype":
                    {
                        "title": "Mimetype",
                        "type": "string"
                    },
                    "modality":
                    {
                        "title": "Modality",
                        "type": "string"
                    },
                    "tags":
                    {
                        "title": "Tags",
                        "type": "string"
                    },
                    "classification":
                    {
                        "title": "Classification",
                        "type": "string"
                    }
                }
            },
            "FilterValues":
            {
                "title": "FilterValues",
                "type": "object",
                "properties":
                {
                    "+":
                    {
                        "title": "+",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "-":
                    {
                        "title": "-",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    }
                },
                "additionalProperties": false
            },
            "FixedInput":
            {
                "title": "FixedInput",
                "required": ["id", "type", "name", "input"],
                "type": "object",
                "properties":
                {
                    "id":
                    {
                        "title": "Id",
                        "type": "string"
                    },
                    "type":
                    {
                        "$ref": "#/components/schemas/ContainerType"
                    },
                    "name":
                    {
                        "title": "Name",
                        "type": "string"
                    },
                    "group":
                    {
                        "$ref": "#/components/schemas/FileGroup"
                    },
                    "input":
                    {
                        "title": "Input",
                        "type": "string"
                    }
                },
                "additionalProperties": false,
                "description": "Representation of a reference to a file\n\nAttributes:\n    id (str): The id of the container the file is in\n    type (ContainerType): The type of container the file is in\n    name (str): The name of the file\n    group (FileGroup): inputs or outputs/files"
            },
            "GcpCreds":
            {
                "title": "GcpCreds",
                "required": ["client_email", "client_id", "private_key_id", "private_key", "client_x509_cert_url", "project_id", "auth_uri", "token_uri", "auth_provider_x509_cert_url", "type"],
                "type": "object",
                "properties":
                {
                    "client_email":
                    {
                        "title": "Client Email",
                        "type": "string"
                    },
                    "client_id":
                    {
                        "title": "Client Id",
                        "type": "string"
                    },
                    "private_key_id":
                    {
                        "title": "Private Key Id",
                        "type": "string"
                    },
                    "private_key":
                    {
                        "title": "Private Key",
                        "type": "string"
                    },
                    "client_x509_cert_url":
                    {
                        "title": "Client X509 Cert Url",
                        "type": "string"
                    },
                    "project_id":
                    {
                        "title": "Project Id",
                        "type": "string"
                    },
                    "auth_uri":
                    {
                        "title": "Auth Uri",
                        "type": "string"
                    },
                    "token_uri":
                    {
                        "title": "Token Uri",
                        "type": "string"
                    },
                    "auth_provider_x509_cert_url":
                    {
                        "title": "Auth Provider X509 Cert Url",
                        "type": "string"
                    },
                    "type":
                    {
                        "title": "Type",
                        "type": "string"
                    }
                },
                "additionalProperties": false
            },
            "GcpStorage":
            {
                "title": "GcpStorage",
                "required": ["bucket"],
                "type": "object",
                "properties":
                {
                    "region":
                    {
                        "title": "Region",
                        "type": "string",
                        "default": ""
                    },
                    "bucket":
                    {
                        "title": "Bucket",
                        "type": "string"
                    },
                    "path":
                    {
                        "title": "Path",
                        "type": "string",
                        "default": ""
                    }
                },
                "additionalProperties": false
            },
            "GearCategory":
            {
                "title": "GearCategory",
                "enum": ["analysis", "converter", "utility", "classifier", "qa"],
                "type": "string",
                "description": "Still gotta decide about this, right now there are no restrictions on\ngear categories"
            },
            "GearContextInput":
            {
                "title": "GearContextInput",
                "type": "object",
                "properties":
                {
                    "base":
                    {
                        "title": "Base",
                        "type": "string"
                    }
                },
                "description": "Represents a context-based input to a gear\n\nAttributes:\n    base (str): The input type"
            },
            "GearDocumentInput":
            {
                "title": "GearDocumentInput",
                "required": ["gear"],
                "type": "object",
                "properties":
                {
                    "category":
                    {
                        "$ref": "#/components/schemas/GearCategory"
                    },
                    "gear":
                    {
                        "$ref": "#/components/schemas/GearManifest"
                    },
                    "exchange":
                    {
                        "$ref": "#/components/schemas/GearExchange"
                    },
                    "created":
                    {
                        "title": "Created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "modified":
                    {
                        "title": "Modified",
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "GearDocumentLegacyInput":
            {
                "title": "GearDocumentLegacyInput",
                "required": ["gear", "exchange"],
                "type": "object",
                "properties":
                {
                    "category":
                    {
                        "$ref": "#/components/schemas/GearCategory"
                    },
                    "gear":
                    {
                        "$ref": "#/components/schemas/GearManifest"
                    },
                    "exchange":
                    {
                        "$ref": "#/components/schemas/GearExchange"
                    },
                    "created":
                    {
                        "title": "Created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "modified":
                    {
                        "title": "Modified",
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "GearExchange":
            {
                "title": "GearExchange",
                "required": ["rootfs-url"],
                "type": "object",
                "properties":
                {
                    "rootfs-url":
                    {
                        "title": "Rootfs-Url",
                        "type": "string"
                    },
                    "git-commit":
                    {
                        "title": "Git-Commit",
                        "type": "string"
                    },
                    "rootfs-hash":
                    {
                        "title": "Rootfs-Hash",
                        "type": "string"
                    }
                }
            },
            "GearFileInput":
            {
                "title": "GearFileInput",
                "type": "object",
                "properties":
                {
                    "base":
                    {
                        "title": "Base",
                        "type": "string"
                    },
                    "optional":
                    {
                        "title": "Optional",
                        "type": "boolean"
                    }
                },
                "description": "Represents a gear file input for a gear\n\nAttributes:\n    base (str): The input type\n    optional (Optional[bool]): A bool representing an optional decision\n    required (Optional[bool]): A bool representing an required decision"
            },
            "GearInfo":
            {
                "title": "GearInfo",
                "required": ["category", "name", "version"],
                "type": "object",
                "properties":
                {
                    "id":
                    {
                        "title": "Id",
                        "type": "string"
                    },
                    "category":
                    {
                        "$ref": "#/components/schemas/GearCategory"
                    },
                    "name":
                    {
                        "title": "Name",
                        "type": "string"
                    },
                    "version":
                    {
                        "title": "Version",
                        "type": "string"
                    },
                    "capabilities":
                    {
                        "title": "Capabilities",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    }
                },
                "description": "Represents user freindly of a gear for a job\n\nAttributes:\n    id (str): The id of the gear\n    category (GearCategory): The category of the gear\n    name (str): The identifying name of the gear, this is not the label\n    version (str): The release version of the gear"
            },
            "GearKeyInput":
            {
                "title": "GearKeyInput",
                "type": "object",
                "properties":
                {
                    "base":
                    {
                        "title": "Base",
                        "type": "string"
                    },
                    "read-only":
                    {
                        "title": "Read-Only",
                        "type": "boolean"
                    }
                },
                "description": "Represents a key-based input to a gear\n\nAttributes:\n    base (str): The input type\n    read_only (Optional[bool]): A bool representing a read only decision"
            },
            "GearManifest":
            {
                "title": "GearManifest",
                "required": ["name", "inputs", "config", "author", "description", "license", "version"],
                "type": "object",
                "properties":
                {
                    "name":
                    {
                        "title": "Name",
                        "type": "string"
                    },
                    "inputs":
                    {
                        "title": "Inputs",
                        "type": "object",
                        "additionalProperties":
                        {
                            "anyOf": [
                            {
                                "$ref": "#/components/schemas/GearFileInput"
                            },
                            {
                                "$ref": "#/components/schemas/GearContextInput"
                            },
                            {
                                "$ref": "#/components/schemas/GearKeyInput"
                            }]
                        }
                    },
                    "config":
                    {
                        "title": "Config",
                        "type": "object"
                    },
                    "custom":
                    {
                        "title": "Custom",
                        "type": "object",
                        "default":
                        {}
                    },
                    "author":
                    {
                        "title": "Author",
                        "type": "string"
                    },
                    "maintainer":
                    {
                        "title": "Maintainer",
                        "type": "string"
                    },
                    "cite":
                    {
                        "title": "Cite",
                        "type": "string"
                    },
                    "capabilities":
                    {
                        "title": "Capabilities",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "description":
                    {
                        "title": "Description",
                        "type": "string"
                    },
                    "environment":
                    {
                        "title": "Environment",
                        "type": "object",
                        "additionalProperties":
                        {
                            "type": "string"
                        }
                    },
                    "command":
                    {
                        "title": "Command",
                        "type": "string"
                    },
                    "license":
                    {
                        "title": "License",
                        "anyOf": [
                        {
                            "type": "array",
                            "items":
                            {
                                "$ref": "#/components/schemas/LicenseType"
                            }
                        },
                        {
                            "$ref": "#/components/schemas/LicenseType"
                        }]
                    },
                    "label":
                    {
                        "title": "Label",
                        "type": "string"
                    },
                    "url":
                    {
                        "title": "Url",
                        "type": "string"
                    },
                    "source":
                    {
                        "title": "Source",
                        "type": "string"
                    },
                    "version":
                    {
                        "title": "Version",
                        "type": "string"
                    },
                    "flywheel":
                    {
                        "title": "Flywheel",
                        "type": "object"
                    }
                },
                "description": "Representation of a gear manifest\n\nAttributes:\n    name (str): The name of the gear\n    inputs (Dict[str, Union[Inputs]]): The input for the gear\n    config (dict): The config for gear options\n    custom (dict): A place for custom information\n    author (str): The name of the author\n    maintainer (Optional[str]): The name of the maintainer of the gear\n    cite (Optional[str]): Any citations relevent to the gear\n    capabilities: The capabilities of the gear\n    description (Optional[str]): A description of the gears purpose\n    environment (Optional[Dict[str, str]]): Environent variables that\n        should be set for the gear\n    command (Optional[str]): The starting command for the gear\n    license (List[LicenseType]): The name of the license that applies to\n        this gear\n    url (Optional[str]): The url where more information about this gear\n        can be found\n    source (Optional[str]): The url where the source code of this gear can\n        be found\n    version (Optional[str]): An explanation of the relase of this gear\n        version\n    flywheel (Optional[str]): A currently unused key"
            },
            "GearRule":
            {
                "title": "GearRule",
                "required": ["project_id", "gear_id", "name", "any", "all", "not"],
                "type": "object",
                "properties":
                {
                    "_id":
                    {
                        "title": " Id",
                        "type": "string"
                    },
                    "project_id":
                    {
                        "title": "Project Id",
                        "pattern": "^([0-9a-fA-F]{24})$|^(site)$",
                        "type": "string"
                    },
                    "gear_id":
                    {
                        "title": "Gear Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name":
                    {
                        "title": "Name",
                        "type": "string"
                    },
                    "config":
                    {
                        "title": "Config",
                        "type": "object"
                    },
                    "fixed_inputs":
                    {
                        "title": "Fixed Inputs",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/FixedInput"
                        },
                        "default": []
                    },
                    "auto_update":
                    {
                        "title": "Auto Update",
                        "type": "boolean",
                        "default": false
                    },
                    "revision":
                    {
                        "title": "Revision",
                        "type": "integer",
                        "default": 1
                    },
                    "any":
                    {
                        "title": "Any",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/GearRuleCondition"
                        }
                    },
                    "all":
                    {
                        "title": "All",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/GearRuleCondition"
                        }
                    },
                    "not":
                    {
                        "title": "Not",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/GearRuleCondition"
                        }
                    },
                    "created":
                    {
                        "title": "Created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "modified":
                    {
                        "title": "Modified",
                        "type": "string",
                        "format": "date-time"
                    },
                    "disabled":
                    {
                        "title": "Disabled",
                        "type": "boolean",
                        "default": false
                    },
                    "compute_provider_id":
                    {
                        "title": "Compute Provider Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    }
                },
                "description": "Domain model for a gear rule\n\nAttributes:\n    id (str): The id of the rule\n    project_id (str): The id of the project the rule runs\n        on or 'site' if it is a site wide rule template\n    gear_id (str): The gear to run\n    name (str): The name of the gear rule\n    config (Optional[dict]): The optional config for the gear\n    fixed_inputs (List[FixedInput]): The fixed inputs for the gear run\n    auto_update (bool): Flag to automatically update the gear version to\n        the latest\n    any (List[GearRuleCondition]): List of match criteria for a job to be created of\n        which any one of must be matched to run the job\n    all (List[GearRuleCondition]): List of match criteria for a job to be created of\n        which all of must be matched to run the job\n    not (List[GearRuleCondition]): List of match criteria for a job to be created of\n        which none of must be matched to run the job\n    disabled (bool): Rule will not be evaluated if set to true\n    compute_provider_id (Optional[str]): Set the compute provider\n        for the jobs"
            },
            "GearRuleCondition":
            {
                "title": "GearRuleCondition",
                "required": ["type", "value"],
                "type": "object",
                "properties":
                {
                    "type":
                    {
                        "$ref": "#/components/schemas/GearRuleConditionType"
                    },
                    "value":
                    {
                        "title": "Value",
                        "type": "string"
                    },
                    "regex":
                    {
                        "title": "Regex",
                        "type": "boolean"
                    }
                }
            },
            "GearRuleConditionType":
            {
                "title": "GearRuleConditionType",
                "enum": ["file.type", "file.name", "file.modality", "file.classification", "container.has-type", "container.has-classification"],
                "type": "string",
                "description": "An enumeration."
            },
            "GearRuleInput":
            {
                "title": "GearRuleInput",
                "required": ["gear_id", "name", "any", "all", "not"],
                "type": "object",
                "properties":
                {
                    "project_id":
                    {
                        "title": "Project Id",
                        "pattern": "^([0-9a-fA-F]{24})$|^(site)$",
                        "type": "string"
                    },
                    "gear_id":
                    {
                        "title": "Gear Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name":
                    {
                        "title": "Name",
                        "type": "string"
                    },
                    "config":
                    {
                        "title": "Config",
                        "type": "object"
                    },
                    "fixed_inputs":
                    {
                        "title": "Fixed Inputs",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/FixedInput"
                        },
                        "default": []
                    },
                    "auto_update":
                    {
                        "title": "Auto Update",
                        "type": "boolean",
                        "default": false
                    },
                    "any":
                    {
                        "title": "Any",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/GearRuleCondition"
                        }
                    },
                    "all":
                    {
                        "title": "All",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/GearRuleCondition"
                        }
                    },
                    "not":
                    {
                        "title": "Not",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/GearRuleCondition"
                        }
                    },
                    "disabled":
                    {
                        "title": "Disabled",
                        "type": "boolean",
                        "default": false
                    },
                    "compute_provider_id":
                    {
                        "title": "Compute Provider Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    }
                },
                "additionalProperties": false
            },
            "GearRuleModifyInput":
            {
                "title": "GearRuleModifyInput",
                "type": "object",
                "properties":
                {
                    "gear_id":
                    {
                        "title": "Gear Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "name":
                    {
                        "title": "Name",
                        "type": "string"
                    },
                    "config":
                    {
                        "title": "Config",
                        "type": "object"
                    },
                    "fixed_inputs":
                    {
                        "title": "Fixed Inputs",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/FixedInput"
                        }
                    },
                    "auto_update":
                    {
                        "title": "Auto Update",
                        "type": "boolean"
                    },
                    "any":
                    {
                        "title": "Any",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/GearRuleCondition"
                        }
                    },
                    "all":
                    {
                        "title": "All",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/GearRuleCondition"
                        }
                    },
                    "not":
                    {
                        "title": "Not",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/GearRuleCondition"
                        }
                    },
                    "disabled":
                    {
                        "title": "Disabled",
                        "type": "boolean"
                    },
                    "compute_provider_id":
                    {
                        "title": "Compute Provider Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    }
                },
                "additionalProperties": false
            },
            "GearSaveSubmition":
            {
                "title": "GearSaveSubmition",
                "required": ["ticket", "repo", "pointer"],
                "type": "object",
                "properties":
                {
                    "ticket":
                    {
                        "title": "Ticket",
                        "type": "string"
                    },
                    "repo":
                    {
                        "title": "Repo",
                        "type": "string"
                    },
                    "pointer":
                    {
                        "title": "Pointer",
                        "type": "string"
                    }
                }
            },
            "GoogleAuth":
            {
                "title": "GoogleAuth",
                "required": ["client_id", "client_secret"],
                "type": "object",
                "properties":
                {
                    "id_endpoint":
                    {
                        "title": "Id Endpoint",
                        "type": "string",
                        "default": "https://www.googleapis.com/oauth2/v3/userinfo"
                    },
                    "client_id":
                    {
                        "title": "Client Id",
                        "type": "string"
                    },
                    "token_endpoint":
                    {
                        "title": "Token Endpoint",
                        "type": "string",
                        "default": "https://accounts.google.com/o/oauth2/token"
                    },
                    "verify_endpoint":
                    {
                        "title": "Verify Endpoint",
                        "type": "string",
                        "default": "https://www.googleapis.com/oauth2/v1/tokeninfo"
                    },
                    "refresh_endpoint":
                    {
                        "title": "Refresh Endpoint",
                        "type": "string",
                        "default": "https://www.googleapis.com/oauth2/v4/token"
                    },
                    "auth_endpoint":
                    {
                        "title": "Auth Endpoint",
                        "type": "string",
                        "default": "https://accounts.google.com/o/oauth2/auth"
                    },
                    "client_secret":
                    {
                        "title": "Client Secret",
                        "type": "string"
                    }
                },
                "description": "Base class for settings, allowing values to be overridden by environment variables.\n\nThis is useful in production for secrets you do not wish to save in code, it plays nicely with docker(-compose),\nHeroku and any 12 factor app design."
            },
            "GoogleAuthOut":
            {
                "title": "GoogleAuthOut",
                "type": "object",
                "properties":
                {
                    "id_endpoint":
                    {
                        "title": "Id Endpoint",
                        "type": "string",
                        "default": "https://www.googleapis.com/oauth2/v3/userinfo"
                    },
                    "client_id":
                    {
                        "title": "Client Id",
                        "type": "string",
                        "default": "979703271380-q85tbsupddmb7996q30244368r7e54lr.apps.googleusercontent.com"
                    },
                    "token_endpoint":
                    {
                        "title": "Token Endpoint",
                        "type": "string",
                        "default": "https://accounts.google.com/o/oauth2/token"
                    },
                    "verify_endpoint":
                    {
                        "title": "Verify Endpoint",
                        "type": "string",
                        "default": "https://www.googleapis.com/oauth2/v1/tokeninfo"
                    },
                    "refresh_endpoint":
                    {
                        "title": "Refresh Endpoint",
                        "type": "string",
                        "default": "https://www.googleapis.com/oauth2/v4/token"
                    },
                    "auth_endpoint":
                    {
                        "title": "Auth Endpoint",
                        "type": "string",
                        "default": "https://accounts.google.com/o/oauth2/auth"
                    }
                },
                "description": "Base class for settings, allowing values to be overridden by environment variables.\n\nThis is useful in production for secrets you do not wish to save in code, it plays nicely with docker(-compose),\nHeroku and any 12 factor app design."
            },
            "GoogleLogin":
            {
                "title": "GoogleLogin",
                "required": ["code"],
                "type": "object",
                "properties":
                {
                    "auth_type":
                    {
                        "$ref": "#/components/schemas/AuthType"
                    },
                    "code":
                    {
                        "title": "Code",
                        "type": "string"
                    }
                }
            },
            "GraphFilter":
            {
                "title": "GraphFilter",
                "type": "object",
                "properties":
                {
                    "groups":
                    {
                        "$ref": "#/components/schemas/GroupSpec"
                    },
                    "projects":
                    {
                        "$ref": "#/components/schemas/ProjectSpec"
                    },
                    "subjects":
                    {
                        "$ref": "#/components/schemas/SubjectSpec"
                    },
                    "sessions":
                    {
                        "$ref": "#/components/schemas/SessionSpec"
                    },
                    "acquisitions":
                    {
                        "$ref": "#/components/schemas/AcquisitionSpec"
                    },
                    "analyses":
                    {
                        "$ref": "#/components/schemas/AnalysesSpec"
                    },
                    "jobs":
                    {
                        "$ref": "#/components/schemas/JobSpec"
                    }
                },
                "additionalProperties": false
            },
            "GroupContainerOutput":
            {
                "title": "GroupContainerOutput",
                "required": ["_id", "permissions", "permissions_template", "created", "modified"],
                "type": "object",
                "properties":
                {
                    "_id":
                    {
                        "title": " Id",
                        "maxLength": 64,
                        "minLength": 3,
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "label":
                    {
                        "title": "Label",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "permissions":
                    {
                        "title": "Permissions",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/AccessPermission"
                        }
                    },
                    "permissions_template":
                    {
                        "title": "Permissions Template",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/RolePermission"
                        }
                    },
                    "created":
                    {
                        "title": "Created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "modified":
                    {
                        "title": "Modified",
                        "type": "string",
                        "format": "date-time"
                    },
                    "revision":
                    {
                        "title": "Revision",
                        "type": "integer"
                    },
                    "tags":
                    {
                        "title": "Tags",
                        "pattern": "^[^/]{1,32}$",
                        "type": "array",
                        "items":
                        {
                            "type": "string",
                            "pattern": "^[^/]{1,32}$"
                        },
                        "default": []
                    },
                    "providers":
                    {
                        "$ref": "#/components/schemas/Providers"
                    },
                    "roles":
                    {
                        "title": "Roles",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    },
                    "editions":
                    {
                        "$ref": "#/components/schemas/Edition"
                    },
                    "settings":
                    {
                        "$ref": "#/components/schemas/SettingsOutput"
                    },
                    "container_type":
                    {
                        "$ref": "#/components/schemas/ContainerType"
                    }
                }
            },
            "GroupInput":
            {
                "title": "GroupInput",
                "required": ["_id"],
                "type": "object",
                "properties":
                {
                    "_id":
                    {
                        "title": " Id",
                        "maxLength": 64,
                        "minLength": 3,
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "label":
                    {
                        "title": "Label",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "providers":
                    {
                        "$ref": "#/components/schemas/Providers"
                    },
                    "editions":
                    {
                        "$ref": "#/components/schemas/Edition"
                    }
                }
            },
            "GroupOutput":
            {
                "title": "GroupOutput",
                "required": ["_id", "permissions", "permissions_template", "created", "modified"],
                "type": "object",
                "properties":
                {
                    "_id":
                    {
                        "title": " Id",
                        "maxLength": 64,
                        "minLength": 3,
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "label":
                    {
                        "title": "Label",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "permissions":
                    {
                        "title": "Permissions",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/AccessPermission"
                        }
                    },
                    "permissions_template":
                    {
                        "title": "Permissions Template",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/RolePermission"
                        }
                    },
                    "created":
                    {
                        "title": "Created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "modified":
                    {
                        "title": "Modified",
                        "type": "string",
                        "format": "date-time"
                    },
                    "revision":
                    {
                        "title": "Revision",
                        "type": "integer"
                    },
                    "tags":
                    {
                        "title": "Tags",
                        "pattern": "^[^/]{1,32}$",
                        "type": "array",
                        "items":
                        {
                            "type": "string",
                            "pattern": "^[^/]{1,32}$"
                        },
                        "default": []
                    },
                    "providers":
                    {
                        "$ref": "#/components/schemas/Providers"
                    },
                    "roles":
                    {
                        "title": "Roles",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    },
                    "editions":
                    {
                        "$ref": "#/components/schemas/Edition"
                    },
                    "settings":
                    {
                        "$ref": "#/components/schemas/SettingsOutput"
                    }
                }
            },
            "GroupRole":
            {
                "title": "GroupRole",
                "required": ["_id"],
                "type": "object",
                "properties":
                {
                    "_id":
                    {
                        "title": " Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    }
                }
            },
            "GroupSpec":
            {
                "title": "GroupSpec",
                "required": ["fields"],
                "type": "object",
                "properties":
                {
                    "fields":
                    {
                        "title": "Fields",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "filter":
                    {
                        "title": "Filter",
                        "type": "string"
                    },
                    "limit":
                    {
                        "title": "Limit",
                        "type": "integer",
                        "default": 50
                    },
                    "sort":
                    {
                        "title": "Sort",
                        "type": "string"
                    },
                    "files":
                    {
                        "$ref": "#/components/schemas/FileFilter"
                    },
                    "projects":
                    {
                        "$ref": "#/components/schemas/ProjectSpec"
                    },
                    "subjects":
                    {
                        "$ref": "#/components/schemas/SubjectSpec"
                    },
                    "sessions":
                    {
                        "$ref": "#/components/schemas/SessionSpec"
                    },
                    "acquisitions":
                    {
                        "$ref": "#/components/schemas/AcquisitionSpec"
                    }
                },
                "additionalProperties": false
            },
            "GroupUpdate":
            {
                "title": "GroupUpdate",
                "type": "object",
                "properties":
                {
                    "label":
                    {
                        "title": "Label",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "providers":
                    {
                        "$ref": "#/components/schemas/Providers"
                    },
                    "editions":
                    {
                        "$ref": "#/components/schemas/Edition"
                    },
                    "modified":
                    {
                        "title": "Modified",
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "HTTPValidationError":
            {
                "title": "HTTPValidationError",
                "type": "object",
                "properties":
                {
                    "detail":
                    {
                        "title": "Detail",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/ValidationError"
                        }
                    }
                }
            },
            "Info":
            {
                "title": "Info",
                "type": "object",
                "properties":
                {
                    "set":
                    {
                        "title": "Set",
                        "type": "object"
                    },
                    "delete":
                    {
                        "title": "Delete",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "replace":
                    {
                        "title": "Replace",
                        "type": "object"
                    }
                }
            },
            "IngressProvider":
            {
                "title": "IngressProvider",
                "required": ["label", "provider_class", "provider_type", "creds", "config"],
                "type": "object",
                "properties":
                {
                    "label":
                    {
                        "title": "Label",
                        "type": "string"
                    },
                    "provider_class":
                    {
                        "$ref": "#/components/schemas/ProviderClass"
                    },
                    "provider_type":
                    {
                        "$ref": "#/components/schemas/ProviderType"
                    },
                    "creds":
                    {
                        "title": "Creds",
                        "type": "object"
                    },
                    "config":
                    {
                        "title": "Config",
                        "type": "object"
                    }
                },
                "additionalProperties": false
            },
            "IngressProviders":
            {
                "title": "IngressProviders",
                "type": "object",
                "properties":
                {
                    "storage":
                    {
                        "title": "Storage",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "compute":
                    {
                        "title": "Compute",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    }
                }
            },
            "IngressSiteSettings":
            {
                "title": "IngressSiteSettings",
                "type": "object",
                "properties":
                {
                    "center_gears":
                    {
                        "title": "Center Gears",
                        "pattern": "^[a-z0-9\\-]+$",
                        "type": "array",
                        "items":
                        {
                            "type": "string",
                            "pattern": "^[a-z0-9\\-]+$"
                        }
                    },
                    "providers":
                    {
                        "$ref": "#/components/schemas/IngressProviders"
                    },
                    "ldap_sync":
                    {
                        "$ref": "#/components/schemas/LdapSyncConfig"
                    },
                    "viewer_apps":
                    {
                        "title": "Viewer Apps",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/ViewerApp"
                        }
                    },
                    "deid_profile":
                    {
                        "title": "Deid Profile",
                        "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "object"
                        }]
                    }
                },
                "additionalProperties": false
            },
            "IngressUpdateProvider":
            {
                "title": "IngressUpdateProvider",
                "type": "object",
                "properties":
                {
                    "label":
                    {
                        "title": "Label",
                        "type": "string"
                    },
                    "creds":
                    {
                        "title": "Creds",
                        "type": "object"
                    },
                    "config":
                    {
                        "title": "Config",
                        "type": "object"
                    }
                },
                "additionalProperties": false
            },
            "InputFilter":
            {
                "title": "InputFilter",
                "type": "object",
                "properties":
                {
                    "tags":
                    {
                        "$ref": "#/components/schemas/FilterValues"
                    },
                    "types":
                    {
                        "$ref": "#/components/schemas/FilterValues"
                    },
                    "since":
                    {
                        "title": "Since",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "additionalProperties": false
            },
            "InputJob":
            {
                "title": "InputJob",
                "required": ["gear_id"],
                "type": "object",
                "properties":
                {
                    "attempt":
                    {
                        "title": "Attempt",
                        "type": "integer",
                        "default": 1
                    },
                    "batch":
                    {
                        "title": "Batch",
                        "type": "string"
                    },
                    "origin":
                    {
                        "$ref": "#/components/schemas/Origin"
                    },
                    "compute_provider_id":
                    {
                        "title": "Compute Provider Id",
                        "type": "string"
                    },
                    "destination":
                    {
                        "$ref": "#/components/schemas/ContainerReference"
                    },
                    "gear_id":
                    {
                        "title": "Gear Id",
                        "type": "string"
                    },
                    "inputs":
                    {
                        "title": "Inputs",
                        "type": "object",
                        "additionalProperties":
                        {
                            "$ref": "#/components/schemas/FileReference"
                        },
                        "default":
                        {}
                    },
                    "parents":
                    {
                        "$ref": "#/components/schemas/JobParents"
                    },
                    "label":
                    {
                        "title": "Label",
                        "type": "string",
                        "default": ""
                    },
                    "previous_job_id":
                    {
                        "title": "Previous Job Id",
                        "type": "string"
                    },
                    "tags":
                    {
                        "title": "Tags",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    },
                    "config":
                    {
                        "title": "Config",
                        "type": "object"
                    }
                }
            },
            "InputJobProfile":
            {
                "title": "InputJobProfile",
                "type": "object",
                "properties":
                {
                    "elapsed_time_ms":
                    {
                        "title": "Elapsed Time Ms",
                        "type": "integer"
                    },
                    "executor":
                    {
                        "$ref": "#/components/schemas/ExecutorInfo"
                    },
                    "preparation_time_ms":
                    {
                        "title": "Preparation Time Ms",
                        "type": "integer"
                    },
                    "upload_time_ms":
                    {
                        "title": "Upload Time Ms",
                        "type": "integer"
                    },
                    "versions":
                    {
                        "title": "Versions",
                        "type": "object",
                        "additionalProperties":
                        {
                            "type": "string"
                        }
                    }
                },
                "additionalProperties": false,
                "description": "Represents the input for jobs profile\n\nAttributes:\n    elapsed_time_ms (Optional[int]): The runtime of the job,\n        in milliseconds\n    executor (Optional[ExecutorInfo]): The information about the job\n        executor, also known as engine\n    preparation_time_ms (Optional[int]): The length of time taken to\n        download gear container and inputs, in milliseconds\n    upload_time_ms (Optional[int]): The length of time taken to upload the\n        job's outputs, in milliseconds\n    versions (Optional[Dict[str, str]]): Version info of components\n        involved in job"
            },
            "InsertedId":
            {
                "title": "InsertedId",
                "required": ["_id"],
                "type": "object",
                "properties":
                {
                    "_id":
                    {
                        "title": " Id",
                        "type": "string"
                    }
                }
            },
            "Job":
            {
                "title": "Job",
                "required": ["parents", "related_container_ids", "state", "gear_id", "inputs", "destination", "tags", "attempt", "origin"],
                "type": "object",
                "properties":
                {
                    "compute_provider_id":
                    {
                        "title": "Compute Provider Id",
                        "type": "string"
                    },
                    "failure_reason":
                    {
                        "title": "Failure Reason",
                        "type": "string"
                    },
                    "label":
                    {
                        "title": "Label",
                        "type": "string"
                    },
                    "modified":
                    {
                        "title": "Modified",
                        "type": "string",
                        "format": "date-time"
                    },
                    "parents":
                    {
                        "$ref": "#/components/schemas/JobParents"
                    },
                    "produced_metadata":
                    {
                        "title": "Produced Metadata",
                        "type": "object"
                    },
                    "related_container_ids":
                    {
                        "title": "Related Container Ids",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "request":
                    {
                        "$ref": "#/components/schemas/JobRequest"
                    },
                    "retried":
                    {
                        "title": "Retried",
                        "type": "string",
                        "format": "date-time"
                    },
                    "saved_files":
                    {
                        "title": "Saved Files",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "state":
                    {
                        "$ref": "#/components/schemas/JobState"
                    },
                    "profile":
                    {
                        "$ref": "#/components/schemas/JobProfile"
                    },
                    "transitions":
                    {
                        "title": "Transitions",
                        "allOf": [
                        {
                            "$ref": "#/components/schemas/Transitions"
                        }],
                        "default":
                        {}
                    },
                    "gear_id":
                    {
                        "title": "Gear Id",
                        "type": "string"
                    },
                    "gear_info":
                    {
                        "$ref": "#/components/schemas/GearInfo"
                    },
                    "inputs":
                    {
                        "title": "Inputs",
                        "type": "object",
                        "additionalProperties":
                        {
                            "anyOf": [
                            {
                                "$ref": "#/components/schemas/JobFileInput"
                            },
                            {
                                "$ref": "#/components/schemas/ContextInput"
                            },
                            {
                                "$ref": "#/components/schemas/ApiKeyInput"
                            }]
                        }
                    },
                    "legacy_inputs":
                    {
                        "title": "Legacy Inputs",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/LegacyInput"
                        }
                    },
                    "destination":
                    {
                        "$ref": "#/components/schemas/ContainerReference"
                    },
                    "tags":
                    {
                        "title": "Tags",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "attempt":
                    {
                        "title": "Attempt",
                        "type": "integer"
                    },
                    "previous_job_id":
                    {
                        "title": "Previous Job Id",
                        "type": "string"
                    },
                    "created":
                    {
                        "title": "Created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "_id":
                    {
                        "title": " Id",
                        "type": "string"
                    },
                    "config":
                    {
                        "title": "Config",
                        "type": "object"
                    },
                    "origin":
                    {
                        "$ref": "#/components/schemas/Origin"
                    },
                    "batch":
                    {
                        "title": "Batch",
                        "type": "string"
                    },
                    "failed_output_accepted":
                    {
                        "title": "Failed Output Accepted",
                        "type": "boolean"
                    },
                    "parent_info":
                    {
                        "$ref": "#/components/schemas/JobDetailParentInfo"
                    }
                },
                "description": "Representation of a job run by an engine\n\nAttributes:\n    gear_id (str): The id of the gear to run\n    gear_info (Optional[GearInfo]): Extra information about the gear\n    inputs (JobInputs): The input dictionary of the job\n    destination (ContainerReference): The destination of the outputs of the\n        job\n    tags (List[str]): List of tags for the jobs\n    attempt (int): The number of attempts made for the job\n    previous_job_id (Optional[str]): The id of the previous job that this\n        job is retry of\n    created (datetime.datetime): Timestamp of when the job was created\n    modified (datetime.datetime): Timestamp of when the job record was last\n        modified\n    retried (Optional[datetime.datetime]): Timestamp of when the job was\n        retried as another job\n    state (JobState): Current state of the job\n    request (Optional[JobRequest)]: Request object for the job, used by the\n        engine for downloading inputs, uploading outputs, etc.\n    id (str): The id of the job\n    config (dict): Configuration object of the job\n    origin (Origin): The origin of the job, who/what created it\n    saved_files (List[str]): Output files uploaded by the engine from the\n        job\n    produced_metadata (Optional[dict]): Raw content of the .metadata.json\n        file to be attached to the flywheel hierarchy\n    batch (Optional[str]): The id of the batch the job belongs to\n    failed_output_accepted (bool): Flag as to whether to upload outputs if\n        the job failed\n    profile (Optional[JobProfile]): The profile of the job, contains\n        information of execution time and resources\n    parents (JobParents): The hierarchy of the jobs destination\n    failure_reason (Optional[str]): Description of how the job failed\n    transitions (Transitions): Mapping of state to timestamp of when the\n        job transitioned to that state\n    related_container_ids (List[str]): List of ids of all containers the\n        job has ever been associated with\n    label (Optional[str]): The label of the job\n    compute_provider_id (Optional[str]): The id of the compute provider"
            },
            "JobAnalysisInput":
            {
                "title": "JobAnalysisInput",
                "required": ["job", "label"],
                "type": "object",
                "properties":
                {
                    "job":
                    {
                        "$ref": "#/components/schemas/InputJob"
                    },
                    "label":
                    {
                        "title": "Label",
                        "type": "string"
                    },
                    "description":
                    {
                        "title": "Description",
                        "type": "string",
                        "default": ""
                    },
                    "compute_provider_id":
                    {
                        "title": "Compute Provider Id",
                        "type": "string",
                        "default": ""
                    },
                    "info":
                    {
                        "title": "Info",
                        "type": "object",
                        "default":
                        {}
                    }
                }
            },
            "JobAsk":
            {
                "title": "JobAsk",
                "required": ["whitelist", "blacklist", "capabilities"],
                "type": "object",
                "properties":
                {
                    "whitelist":
                    {
                        "$ref": "#/components/schemas/JobConfigInput"
                    },
                    "blacklist":
                    {
                        "$ref": "#/components/schemas/JobConfigInput"
                    },
                    "capabilities":
                    {
                        "title": "Capabilities",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "return":
                    {
                        "title": "Return",
                        "allOf": [
                        {
                            "$ref": "#/components/schemas/JobAskReturnCriteria"
                        }],
                        "default":
                        {
                            "jobs": 0,
                            "peek": false,
                            "states": false,
                            "encoded": false
                        }
                    },
                    "limit":
                    {
                        "title": "Limit",
                        "type": "integer",
                        "default": 1000
                    }
                },
                "description": "Represents a query made by a job executor to retrieve a job"
            },
            "JobAskResponse":
            {
                "title": "JobAskResponse",
                "type": "object",
                "properties":
                {
                    "jobs":
                    {
                        "title": "Jobs",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/JobAskResponseJob"
                        }
                    },
                    "states":
                    {
                        "$ref": "#/components/schemas/JobsByState"
                    }
                },
                "description": "Represents the API's reponse to a query for jobs\n\nAttributes:\n    jobs (Optional[List[Job]]): The list of jobs matching the ask query\n    states (Optional[JobsByState]): The number of jobs in each state"
            },
            "JobAskResponseJob":
            {
                "title": "JobAskResponseJob",
                "required": ["parents", "related_container_ids", "state", "gear_id", "inputs", "destination", "tags", "attempt", "id", "origin"],
                "type": "object",
                "properties":
                {
                    "compute_provider_id":
                    {
                        "title": "Compute Provider Id",
                        "type": "string"
                    },
                    "failure_reason":
                    {
                        "title": "Failure Reason",
                        "type": "string"
                    },
                    "label":
                    {
                        "title": "Label",
                        "type": "string"
                    },
                    "modified":
                    {
                        "title": "Modified",
                        "type": "string",
                        "format": "date-time"
                    },
                    "parents":
                    {
                        "$ref": "#/components/schemas/JobParents"
                    },
                    "produced_metadata":
                    {
                        "title": "Produced Metadata",
                        "type": "object"
                    },
                    "related_container_ids":
                    {
                        "title": "Related Container Ids",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "request":
                    {
                        "$ref": "#/components/schemas/JobRequest"
                    },
                    "retried":
                    {
                        "title": "Retried",
                        "type": "string",
                        "format": "date-time"
                    },
                    "saved_files":
                    {
                        "title": "Saved Files",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "state":
                    {
                        "$ref": "#/components/schemas/JobState"
                    },
                    "profile":
                    {
                        "$ref": "#/components/schemas/JobProfile"
                    },
                    "transitions":
                    {
                        "title": "Transitions",
                        "allOf": [
                        {
                            "$ref": "#/components/schemas/Transitions"
                        }],
                        "default":
                        {}
                    },
                    "gear_id":
                    {
                        "title": "Gear Id",
                        "type": "string"
                    },
                    "gear_info":
                    {
                        "$ref": "#/components/schemas/GearInfo"
                    },
                    "inputs":
                    {
                        "title": "Inputs",
                        "type": "object",
                        "additionalProperties":
                        {
                            "anyOf": [
                            {
                                "$ref": "#/components/schemas/JobFileInput"
                            },
                            {
                                "$ref": "#/components/schemas/ContextInput"
                            },
                            {
                                "$ref": "#/components/schemas/ApiKeyInput"
                            }]
                        }
                    },
                    "legacy_inputs":
                    {
                        "title": "Legacy Inputs",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/LegacyInput"
                        }
                    },
                    "destination":
                    {
                        "$ref": "#/components/schemas/ContainerReference"
                    },
                    "tags":
                    {
                        "title": "Tags",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "attempt":
                    {
                        "title": "Attempt",
                        "type": "integer"
                    },
                    "previous_job_id":
                    {
                        "title": "Previous Job Id",
                        "type": "string"
                    },
                    "created":
                    {
                        "title": "Created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "id":
                    {
                        "title": "Id",
                        "type": "string"
                    },
                    "config":
                    {
                        "title": "Config",
                        "type": "object"
                    },
                    "origin":
                    {
                        "$ref": "#/components/schemas/Origin"
                    },
                    "batch":
                    {
                        "title": "Batch",
                        "type": "string"
                    },
                    "failed_output_accepted":
                    {
                        "title": "Failed Output Accepted",
                        "type": "boolean"
                    },
                    "parent_info":
                    {
                        "$ref": "#/components/schemas/JobDetailParentInfo"
                    }
                },
                "description": "Representation of a job run by an engine\n\nAttributes:\n    gear_id (str): The id of the gear to run\n    gear_info (Optional[GearInfo]): Extra information about the gear\n    inputs (JobInputs): The input dictionary of the job\n    destination (ContainerReference): The destination of the outputs of the\n        job\n    tags (List[str]): List of tags for the jobs\n    attempt (int): The number of attempts made for the job\n    previous_job_id (Optional[str]): The id of the previous job that this\n        job is retry of\n    created (datetime.datetime): Timestamp of when the job was created\n    modified (datetime.datetime): Timestamp of when the job record was last\n        modified\n    retried (Optional[datetime.datetime]): Timestamp of when the job was\n        retried as another job\n    state (JobState): Current state of the job\n    request (Optional[JobRequest)]: Request object for the job, used by the\n        engine for downloading inputs, uploading outputs, etc.\n    id (str): The id of the job\n    config (dict): Configuration object of the job\n    origin (Origin): The origin of the job, who/what created it\n    saved_files (List[str]): Output files uploaded by the engine from the\n        job\n    produced_metadata (Optional[dict]): Raw content of the .metadata.json\n        file to be attached to the flywheel hierarchy\n    batch (Optional[str]): The id of the batch the job belongs to\n    failed_output_accepted (bool): Flag as to whether to upload outputs if\n        the job failed\n    profile (Optional[JobProfile]): The profile of the job, contains\n        information of execution time and resources\n    parents (JobParents): The hierarchy of the jobs destination\n    failure_reason (Optional[str]): Description of how the job failed\n    transitions (Transitions): Mapping of state to timestamp of when the\n        job transitioned to that state\n    related_container_ids (List[str]): List of ids of all containers the\n        job has ever been associated with\n    label (Optional[str]): The label of the job\n    compute_provider_id (Optional[str]): The id of the compute provider"
            },
            "JobAskReturnCriteria":
            {
                "title": "JobAskReturnCriteria",
                "type": "object",
                "properties":
                {
                    "jobs":
                    {
                        "title": "Jobs",
                        "type": "integer",
                        "default": 0
                    },
                    "peek":
                    {
                        "title": "Peek",
                        "type": "boolean",
                        "default": false
                    },
                    "states":
                    {
                        "title": "States",
                        "type": "boolean",
                        "default": false
                    },
                    "encoded":
                    {
                        "title": "Encoded",
                        "type": "boolean",
                        "default": false
                    }
                },
                "description": "Model that specifies what to return\n\nAttributes:\n    jobs (int): The number of jobs to return\n    peek (bool): Whether to start the jobs or not\n    states (bool): To return the jobs by state object\n    encoded (bool): To return the request urls for the jobs encoded. The uri is\n        always stored in the persistence layer encoded, however if encoded is false,\n        the uri's will be decoded in the handler layer for the response"
            },
            "JobBulkInput":
            {
                "title": "JobBulkInput",
                "required": ["jobs"],
                "type": "object",
                "properties":
                {
                    "jobs":
                    {
                        "title": "Jobs",
                        "pattern": "[^/]+",
                        "type": "array",
                        "items":
                        {
                            "type": "string",
                            "pattern": "[^/]+"
                        }
                    }
                },
                "additionalProperties": false
            },
            "JobComplete":
            {
                "title": "JobComplete",
                "required": ["success"],
                "type": "object",
                "properties":
                {
                    "success":
                    {
                        "title": "Success",
                        "type": "boolean"
                    },
                    "failure_reason":
                    {
                        "title": "Failure Reason",
                        "type": "string"
                    },
                    "profile":
                    {
                        "$ref": "#/components/schemas/InputJobProfile"
                    }
                },
                "description": "Payload required to complete a job using a ticket\n\nAttributes:\n    success (bool): Did the job complete successfully\n    failure_reason (Optional[str]): If the job failed, a short description\n         as to why\n    profile (Optional[JobProfile]): An update to the job profile"
            },
            "JobConfigInput":
            {
                "title": "JobConfigInput",
                "type": "object",
                "properties":
                {
                    "group":
                    {
                        "title": "Group",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "gear-name":
                    {
                        "title": "Gear-Name",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "tag":
                    {
                        "title": "Tag",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "compute-provider":
                    {
                        "title": "Compute-Provider",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "created-by":
                    {
                        "title": "Created-By",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    }
                },
                "additionalProperties": false,
                "description": "Represents the properties of a job\n\nAttributes:\n    group (Optional[str]): The group id of the job to match\n    gear_name (Optional[str]): The gear name of the job to match\n    tag (Optional[str]): A tag value of the job to match\n    compute_provider (Optional[str]): The id of the compute provider of the\n        job to match\n    created_by (Optional[str]): The id of the origin of the job to match"
            },
            "JobDetail":
            {
                "title": "JobDetail",
                "required": ["gear_id", "destination", "tags", "attempt", "state", "origin", "related_container_ids", "parents"],
                "type": "object",
                "properties":
                {
                    "gear_id":
                    {
                        "title": "Gear Id",
                        "type": "string"
                    },
                    "destination":
                    {
                        "$ref": "#/components/schemas/ContainerReference"
                    },
                    "tags":
                    {
                        "title": "Tags",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "attempt":
                    {
                        "title": "Attempt",
                        "type": "integer"
                    },
                    "previous_job_id":
                    {
                        "title": "Previous Job Id",
                        "type": "string"
                    },
                    "created":
                    {
                        "title": "Created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "modified":
                    {
                        "title": "Modified",
                        "type": "string",
                        "format": "date-time"
                    },
                    "retried":
                    {
                        "title": "Retried",
                        "type": "string",
                        "format": "date-time"
                    },
                    "state":
                    {
                        "$ref": "#/components/schemas/JobState"
                    },
                    "request":
                    {
                        "$ref": "#/components/schemas/JobRequest"
                    },
                    "_id":
                    {
                        "title": " Id",
                        "type": "string"
                    },
                    "config":
                    {
                        "title": "Config",
                        "type": "object"
                    },
                    "origin":
                    {
                        "$ref": "#/components/schemas/Origin"
                    },
                    "produced_metadata":
                    {
                        "title": "Produced Metadata",
                        "type": "object"
                    },
                    "batch":
                    {
                        "title": "Batch",
                        "type": "string"
                    },
                    "failed_output_accepted":
                    {
                        "title": "Failed Output Accepted",
                        "type": "boolean"
                    },
                    "profile":
                    {
                        "$ref": "#/components/schemas/JobProfile"
                    },
                    "failure_reason":
                    {
                        "title": "Failure Reason",
                        "type": "string"
                    },
                    "related_container_ids":
                    {
                        "title": "Related Container Ids",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "label":
                    {
                        "title": "Label",
                        "type": "string"
                    },
                    "compute_provider_id":
                    {
                        "title": "Compute Provider Id",
                        "type": "string"
                    },
                    "parents":
                    {
                        "title": "Parents",
                        "anyOf": [
                        {
                            "$ref": "#/components/schemas/AnalysisParents"
                        },
                        {
                            "$ref": "#/components/schemas/ProjectParents"
                        },
                        {
                            "$ref": "#/components/schemas/SubjectParents"
                        },
                        {
                            "$ref": "#/components/schemas/SessionParents"
                        },
                        {
                            "$ref": "#/components/schemas/AcquisitionParents"
                        }]
                    },
                    "transitions":
                    {
                        "title": "Transitions",
                        "allOf": [
                        {
                            "$ref": "#/components/schemas/Transitions"
                        }],
                        "default":
                        {}
                    },
                    "parent_info":
                    {
                        "$ref": "#/components/schemas/JobDetailParentInfo"
                    },
                    "inputs":
                    {
                        "title": "Inputs",
                        "type": "object",
                        "additionalProperties":
                        {
                            "$ref": "#/components/schemas/JobDetailFileEntry"
                        }
                    },
                    "outputs":
                    {
                        "title": "Outputs",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/JobDetailFileEntry"
                        }
                    }
                }
            },
            "JobDetailContainer":
            {
                "title": "JobDetailContainer",
                "required": ["_id"],
                "type": "object",
                "properties":
                {
                    "_id":
                    {
                        "title": " Id",
                        "type": "string"
                    },
                    "label":
                    {
                        "title": "Label",
                        "type": "string"
                    }
                }
            },
            "JobDetailFileEntry":
            {
                "title": "JobDetailFileEntry",
                "required": ["ref"],
                "type": "object",
                "properties":
                {
                    "ref":
                    {
                        "$ref": "#/components/schemas/FileReference"
                    },
                    "object":
                    {
                        "$ref": "#/components/schemas/File"
                    }
                }
            },
            "JobDetailParentInfo":
            {
                "title": "JobDetailParentInfo",
                "type": "object",
                "properties":
                {
                    "group":
                    {
                        "$ref": "#/components/schemas/JobDetailContainer"
                    },
                    "project":
                    {
                        "$ref": "#/components/schemas/JobDetailContainer"
                    },
                    "subject":
                    {
                        "$ref": "#/components/schemas/JobDetailContainer"
                    },
                    "session":
                    {
                        "$ref": "#/components/schemas/JobDetailContainer"
                    },
                    "acquisition":
                    {
                        "$ref": "#/components/schemas/JobDetailContainer"
                    },
                    "analysis":
                    {
                        "$ref": "#/components/schemas/JobDetailContainer"
                    }
                }
            },
            "JobFileInput":
            {
                "title": "JobFileInput",
                "required": ["hierarchy", "object", "location"],
                "type": "object",
                "properties":
                {
                    "hierarchy":
                    {
                        "$ref": "#/components/schemas/ContainerReference"
                    },
                    "object":
                    {
                        "$ref": "#/components/schemas/JobFileObject"
                    },
                    "location":
                    {
                        "$ref": "#/components/schemas/Location"
                    },
                    "base":
                    {
                        "title": "Base",
                        "type": "string"
                    }
                },
                "description": "Represents a file-based input to a job\n\nAttributes:\n    hierarchy (ContainerReference): The reference to the parent of the file\n    object (File): The file metadata object itself\n    location (Location): The file's location inside the gear container\n    base (str): The input type"
            },
            "JobFileInputListOutput":
            {
                "title": "JobFileInputListOutput",
                "required": ["hierarchy", "object", "location"],
                "type": "object",
                "properties":
                {
                    "hierarchy":
                    {
                        "$ref": "#/components/schemas/ContainerReference"
                    },
                    "object":
                    {
                        "$ref": "#/components/schemas/JobFileObjectListOutput"
                    },
                    "location":
                    {
                        "$ref": "#/components/schemas/Location"
                    },
                    "base":
                    {
                        "title": "Base",
                        "type": "string"
                    }
                }
            },
            "JobFileObject":
            {
                "title": "JobFileObject",
                "required": ["type", "mimetype"],
                "type": "object",
                "properties":
                {
                    "type":
                    {
                        "title": "Type",
                        "type": "string"
                    },
                    "mimetype":
                    {
                        "title": "Mimetype",
                        "type": "string"
                    },
                    "modality":
                    {
                        "title": "Modality",
                        "type": "string"
                    },
                    "classification":
                    {
                        "title": "Classification",
                        "type": "object",
                        "default":
                        {}
                    },
                    "tags":
                    {
                        "title": "Tags",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    },
                    "info":
                    {
                        "title": "Info",
                        "type": "object",
                        "default":
                        {}
                    },
                    "size":
                    {
                        "title": "Size",
                        "type": "integer"
                    },
                    "zip_member_count":
                    {
                        "title": "Zip Member Count",
                        "type": "integer"
                    },
                    "origin":
                    {
                        "$ref": "#/components/schemas/Origin"
                    }
                }
            },
            "JobFileObjectListOutput":
            {
                "title": "JobFileObjectListOutput",
                "required": ["type", "mimetype"],
                "type": "object",
                "properties":
                {
                    "type":
                    {
                        "title": "Type",
                        "type": "string"
                    },
                    "mimetype":
                    {
                        "title": "Mimetype",
                        "type": "string"
                    },
                    "modality":
                    {
                        "title": "Modality",
                        "type": "string"
                    },
                    "classification":
                    {
                        "title": "Classification",
                        "type": "object",
                        "default":
                        {}
                    },
                    "tags":
                    {
                        "title": "Tags",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    },
                    "size":
                    {
                        "title": "Size",
                        "type": "integer"
                    },
                    "zip_member_count":
                    {
                        "title": "Zip Member Count",
                        "type": "integer"
                    },
                    "origin":
                    {
                        "$ref": "#/components/schemas/Origin"
                    }
                }
            },
            "JobListOutput":
            {
                "title": "JobListOutput",
                "required": ["gear_id", "inputs", "destination", "tags", "attempt", "state", "config", "origin", "related_container_ids", "parents"],
                "type": "object",
                "properties":
                {
                    "gear_id":
                    {
                        "title": "Gear Id",
                        "type": "string"
                    },
                    "gear_info":
                    {
                        "$ref": "#/components/schemas/GearInfo"
                    },
                    "inputs":
                    {
                        "title": "Inputs",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/LegacyInput"
                        }
                    },
                    "destination":
                    {
                        "$ref": "#/components/schemas/ContainerReference"
                    },
                    "tags":
                    {
                        "title": "Tags",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "attempt":
                    {
                        "title": "Attempt",
                        "type": "integer"
                    },
                    "previous_job_id":
                    {
                        "title": "Previous Job Id",
                        "type": "string"
                    },
                    "created":
                    {
                        "title": "Created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "modified":
                    {
                        "title": "Modified",
                        "type": "string",
                        "format": "date-time"
                    },
                    "retried":
                    {
                        "title": "Retried",
                        "type": "string",
                        "format": "date-time"
                    },
                    "state":
                    {
                        "$ref": "#/components/schemas/JobState"
                    },
                    "request":
                    {
                        "$ref": "#/components/schemas/JobRequest"
                    },
                    "_id":
                    {
                        "title": " Id",
                        "type": "string"
                    },
                    "config":
                    {
                        "$ref": "#/components/schemas/JobListOutputConfig"
                    },
                    "origin":
                    {
                        "$ref": "#/components/schemas/Origin"
                    },
                    "saved_files":
                    {
                        "title": "Saved Files",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "batch":
                    {
                        "title": "Batch",
                        "type": "string"
                    },
                    "failed_output_accepted":
                    {
                        "title": "Failed Output Accepted",
                        "type": "boolean"
                    },
                    "profile":
                    {
                        "$ref": "#/components/schemas/JobProfile"
                    },
                    "failure_reason":
                    {
                        "title": "Failure Reason",
                        "type": "string"
                    },
                    "related_container_ids":
                    {
                        "title": "Related Container Ids",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "label":
                    {
                        "title": "Label",
                        "type": "string"
                    },
                    "compute_provider_id":
                    {
                        "title": "Compute Provider Id",
                        "type": "string"
                    },
                    "parents":
                    {
                        "$ref": "#/components/schemas/JobParents"
                    },
                    "parent_info":
                    {
                        "$ref": "#/components/schemas/JobDetailParentInfo"
                    },
                    "transitions":
                    {
                        "title": "Transitions",
                        "allOf": [
                        {
                            "$ref": "#/components/schemas/Transitions"
                        }],
                        "default":
                        {}
                    }
                }
            },
            "JobListOutputConfig":
            {
                "title": "JobListOutputConfig",
                "required": ["destination"],
                "type": "object",
                "properties":
                {
                    "destination":
                    {
                        "$ref": "#/components/schemas/ContainerReference"
                    },
                    "inputs":
                    {
                        "title": "Inputs",
                        "type": "object",
                        "additionalProperties":
                        {
                            "anyOf": [
                            {
                                "$ref": "#/components/schemas/JobFileInputListOutput"
                            },
                            {
                                "$ref": "#/components/schemas/ContextInput"
                            },
                            {
                                "$ref": "#/components/schemas/ApiKeyInput"
                            }]
                        }
                    },
                    "config":
                    {
                        "title": "Config",
                        "type": "object"
                    }
                }
            },
            "JobLog":
            {
                "title": "JobLog",
                "required": ["fd", "msg"],
                "type": "object",
                "properties":
                {
                    "fd":
                    {
                        "title": "Fd",
                        "type": "integer"
                    },
                    "msg":
                    {
                        "title": "Msg",
                        "type": "string"
                    }
                }
            },
            "JobLogRecord":
            {
                "title": "JobLogRecord",
                "required": ["_id", "logs"],
                "type": "object",
                "properties":
                {
                    "_id":
                    {
                        "title": " Id",
                        "type": "string"
                    },
                    "logs":
                    {
                        "title": "Logs",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/JobLog"
                        }
                    }
                }
            },
            "JobModify":
            {
                "title": "JobModify",
                "required": ["state"],
                "type": "object",
                "properties":
                {
                    "state":
                    {
                        "$ref": "#/components/schemas/JobState"
                    },
                    "failure_reason":
                    {
                        "title": "Failure Reason",
                        "type": "string"
                    }
                }
            },
            "JobOutput":
            {
                "title": "JobOutput",
                "required": ["gear_id", "inputs", "destination", "tags", "attempt", "state", "id", "config", "origin", "related_container_ids", "parents"],
                "type": "object",
                "properties":
                {
                    "gear_id":
                    {
                        "title": "Gear Id",
                        "type": "string"
                    },
                    "gear_info":
                    {
                        "$ref": "#/components/schemas/GearInfo"
                    },
                    "inputs":
                    {
                        "title": "Inputs",
                        "type": "object",
                        "additionalProperties":
                        {
                            "$ref": "#/components/schemas/FileReference"
                        }
                    },
                    "destination":
                    {
                        "$ref": "#/components/schemas/ContainerReference"
                    },
                    "tags":
                    {
                        "title": "Tags",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "attempt":
                    {
                        "title": "Attempt",
                        "type": "integer"
                    },
                    "previous_job_id":
                    {
                        "title": "Previous Job Id",
                        "type": "string"
                    },
                    "created":
                    {
                        "title": "Created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "modified":
                    {
                        "title": "Modified",
                        "type": "string",
                        "format": "date-time"
                    },
                    "retried":
                    {
                        "title": "Retried",
                        "type": "string",
                        "format": "date-time"
                    },
                    "state":
                    {
                        "$ref": "#/components/schemas/JobState"
                    },
                    "request":
                    {
                        "$ref": "#/components/schemas/JobRequest"
                    },
                    "id":
                    {
                        "title": "Id",
                        "type": "string"
                    },
                    "config":
                    {
                        "$ref": "#/components/schemas/JobOutputConfig"
                    },
                    "origin":
                    {
                        "$ref": "#/components/schemas/Origin"
                    },
                    "saved_files":
                    {
                        "title": "Saved Files",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "produced_metadata":
                    {
                        "title": "Produced Metadata",
                        "type": "object"
                    },
                    "batch":
                    {
                        "title": "Batch",
                        "type": "string"
                    },
                    "failed_output_accepted":
                    {
                        "title": "Failed Output Accepted",
                        "type": "boolean"
                    },
                    "profile":
                    {
                        "$ref": "#/components/schemas/JobProfile"
                    },
                    "failure_reason":
                    {
                        "title": "Failure Reason",
                        "type": "string"
                    },
                    "related_container_ids":
                    {
                        "title": "Related Container Ids",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "label":
                    {
                        "title": "Label",
                        "type": "string"
                    },
                    "compute_provider_id":
                    {
                        "title": "Compute Provider Id",
                        "type": "string"
                    },
                    "parents":
                    {
                        "$ref": "#/components/schemas/JobParents"
                    },
                    "transitions":
                    {
                        "title": "Transitions",
                        "allOf": [
                        {
                            "$ref": "#/components/schemas/Transitions"
                        }],
                        "default":
                        {}
                    },
                    "parent_info":
                    {
                        "$ref": "#/components/schemas/JobDetailParentInfo"
                    }
                },
                "description": "Output of a Job"
            },
            "JobOutputConfig":
            {
                "title": "JobOutputConfig",
                "required": ["destination"],
                "type": "object",
                "properties":
                {
                    "destination":
                    {
                        "$ref": "#/components/schemas/ContainerReference"
                    },
                    "inputs":
                    {
                        "title": "Inputs",
                        "type": "object",
                        "additionalProperties":
                        {
                            "anyOf": [
                            {
                                "$ref": "#/components/schemas/JobFileInput"
                            },
                            {
                                "$ref": "#/components/schemas/ContextInput"
                            },
                            {
                                "$ref": "#/components/schemas/ApiKeyInput"
                            }]
                        }
                    },
                    "config":
                    {
                        "title": "Config",
                        "type": "object"
                    }
                }
            },
            "JobParents":
            {
                "title": "JobParents",
                "required": ["group", "project"],
                "type": "object",
                "properties":
                {
                    "group":
                    {
                        "title": "Group",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "project":
                    {
                        "title": "Project",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "subject":
                    {
                        "title": "Subject",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "session":
                    {
                        "title": "Session",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "acquisition":
                    {
                        "title": "Acquisition",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "analysis":
                    {
                        "title": "Analysis",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    }
                }
            },
            "JobProfile":
            {
                "title": "JobProfile",
                "type": "object",
                "properties":
                {
                    "elapsed_time_ms":
                    {
                        "title": "Elapsed Time Ms",
                        "type": "integer"
                    },
                    "executor":
                    {
                        "$ref": "#/components/schemas/ExecutorInfo"
                    },
                    "preparation_time_ms":
                    {
                        "title": "Preparation Time Ms",
                        "type": "integer"
                    },
                    "total_input_files":
                    {
                        "title": "Total Input Files",
                        "type": "integer"
                    },
                    "total_input_size_bytes":
                    {
                        "title": "Total Input Size Bytes",
                        "type": "integer"
                    },
                    "total_output_files":
                    {
                        "title": "Total Output Files",
                        "type": "integer"
                    },
                    "total_output_size_bytes":
                    {
                        "title": "Total Output Size Bytes",
                        "type": "integer"
                    },
                    "total_time_ms":
                    {
                        "title": "Total Time Ms",
                        "type": "integer"
                    },
                    "upload_time_ms":
                    {
                        "title": "Upload Time Ms",
                        "type": "integer"
                    },
                    "versions":
                    {
                        "title": "Versions",
                        "type": "object",
                        "additionalProperties":
                        {
                            "type": "string"
                        }
                    }
                },
                "description": "Represents the optional jobs profile\n\nAttributes:\n    elapsed_time_ms (Optional[int]): The runtime of the job,\n        in milliseconds\n    executor (Optional[ExecutorInfo]): The information about the job\n        executor, also known as engine\n    preparation_time_ms (Optional[int]): The length of time taken to\n        download gear container and inputs, in milliseconds\n    total_input_files (Optional[int]): The number of input files\n    total_input_size_bytes (Optional[int]): The combined size of all input\n        files, in bytes\n    total_output_files (Optional[int]): The number of output files\n    total_output_size_bytes (Optional[int]): The combined size of all\n        output files, in bytes\n    total_time_ms (Optional[int]): The total length of time from start to\n        finish, in milliseconds\n    upload_time_ms (Optional[int]): The length of time taken to upload the\n        job's outputs, in milliseconds\n    versions (Optional[Dict[str, str]]): Version info of components\n        involved in job"
            },
            "JobRequest":
            {
                "title": "JobRequest",
                "required": ["inputs", "target", "outputs"],
                "type": "object",
                "properties":
                {
                    "inputs":
                    {
                        "title": "Inputs",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/JobRequestItem"
                        }
                    },
                    "target":
                    {
                        "$ref": "#/components/schemas/JobRequestTarget"
                    },
                    "outputs":
                    {
                        "title": "Outputs",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/JobRequestItem"
                        }
                    }
                },
                "description": "Represents the requests to be made by the engine to retrieve inputs and\n    upload outputs\n\nAttributes:\n    inputs (List[JobRequestItem]): List of inputs with information for\n        retrieving input data\n    target (dict): The target object ( no idea )\n    outputs (List): A list of output objects"
            },
            "JobRequestItem":
            {
                "title": "JobRequestItem",
                "required": ["type", "location"],
                "type": "object",
                "properties":
                {
                    "type":
                    {
                        "$ref": "#/components/schemas/JobRequestItemType"
                    },
                    "uri":
                    {
                        "title": "Uri",
                        "type": "string"
                    },
                    "location":
                    {
                        "title": "Location",
                        "type": "string"
                    },
                    "vu":
                    {
                        "title": "Vu",
                        "type": "string"
                    }
                },
                "description": "Representation of a request input item that the engine must download\n\nAttributes:\n    type (JobRequestItemType): The type of request to be made\n    uri (str): The uri to make the request to\n    location (str): Where to download the the input to\n    vu (Optional[str]): Absolutely no idea"
            },
            "JobRequestItemType":
            {
                "title": "JobRequestItemType",
                "enum": ["http", "scitran", "docker"],
                "type": "string",
                "description": "An enumeration."
            },
            "JobRequestTarget":
            {
                "title": "JobRequestTarget",
                "required": ["command", "env"],
                "type": "object",
                "properties":
                {
                    "command":
                    {
                        "title": "Command",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "env":
                    {
                        "title": "Env",
                        "type": "object",
                        "additionalProperties":
                        {
                            "type": "string"
                        }
                    },
                    "uid":
                    {
                        "title": "Uid",
                        "type": "integer"
                    },
                    "gid":
                    {
                        "title": "Gid",
                        "type": "integer"
                    },
                    "dir":
                    {
                        "title": "Dir",
                        "type": "string",
                        "default": "/flywheel/v0"
                    }
                },
                "description": "Represents the information needed to run the gear\n\nAttributes:\n    command (List[str]): The command run inside the docker container to run\n        the gear\n    environment (Dict[str, str]): The environment variables to set inside\n        the container\n    uid (Optional[int]): The uid\n    gid (Optional[int]): The gid\n    dir (str): The directory to place assets under"
            },
            "JobSpec":
            {
                "title": "JobSpec",
                "required": ["fields"],
                "type": "object",
                "properties":
                {
                    "fields":
                    {
                        "title": "Fields",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "filter":
                    {
                        "title": "Filter",
                        "type": "string"
                    },
                    "limit":
                    {
                        "title": "Limit",
                        "type": "integer",
                        "default": 50
                    },
                    "sort":
                    {
                        "title": "Sort",
                        "type": "string"
                    },
                    "files":
                    {
                        "$ref": "#/components/schemas/FileFilter"
                    },
                    "inputs":
                    {
                        "$ref": "#/components/schemas/FileFilter"
                    },
                    "group":
                    {
                        "$ref": "#/components/schemas/GroupSpec"
                    },
                    "project":
                    {
                        "$ref": "#/components/schemas/ProjectSpec"
                    },
                    "subject":
                    {
                        "$ref": "#/components/schemas/SubjectSpec"
                    },
                    "session":
                    {
                        "$ref": "#/components/schemas/SessionSpec"
                    },
                    "acquisition":
                    {
                        "$ref": "#/components/schemas/AcquisitionSpec"
                    },
                    "analysis":
                    {
                        "$ref": "#/components/schemas/ContainerSpecWithInputs"
                    }
                },
                "additionalProperties": false,
                "description": "Only used for the top level tree graph"
            },
            "JobState":
            {
                "title": "JobState",
                "enum": ["pending", "running", "failed", "complete", "cancelled"],
                "type": "string",
                "description": "The valid states of a job"
            },
            "JobTicketOutput":
            {
                "title": "JobTicketOutput",
                "required": ["ticket"],
                "type": "object",
                "properties":
                {
                    "ticket":
                    {
                        "title": "Ticket",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    }
                }
            },
            "JobsByState":
            {
                "title": "JobsByState",
                "type": "object",
                "properties":
                {
                    "pending":
                    {
                        "title": "Pending",
                        "type": "integer",
                        "default": 0
                    },
                    "running":
                    {
                        "title": "Running",
                        "type": "integer",
                        "default": 0
                    },
                    "failed":
                    {
                        "title": "Failed",
                        "type": "integer",
                        "default": 0
                    },
                    "complete":
                    {
                        "title": "Complete",
                        "type": "integer",
                        "default": 0
                    },
                    "cancelled":
                    {
                        "title": "Cancelled",
                        "type": "integer",
                        "default": 0
                    }
                },
                "description": "Represents the count of jobs in each state\n\nAttributes:\n    pending (int): Number of jobs pending\n    running (int): Number of jobs running\n    failed (int): Number of jobs failed\n    complete (int): Number of jobs complete\n    cancelled (int): Number of jobs cancelled"
            },
            "JobsList":
            {
                "title": "JobsList",
                "required": ["jobs"],
                "type": "object",
                "properties":
                {
                    "jobs":
                    {
                        "title": "Jobs",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/JobListOutput"
                        }
                    }
                }
            },
            "JoinOriginDevice":
            {
                "title": "JoinOriginDevice",
                "type": "object",
                "properties":
                {
                    "name":
                    {
                        "title": "Name",
                        "type": "string"
                    }
                }
            },
            "JoinOriginJob":
            {
                "title": "JoinOriginJob",
                "required": ["created", "modified"],
                "type": "object",
                "properties":
                {
                    "created":
                    {
                        "title": "Created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "modified":
                    {
                        "title": "Modified",
                        "type": "string",
                        "format": "date-time"
                    },
                    "gear_info":
                    {
                        "$ref": "#/components/schemas/GearInfo"
                    }
                }
            },
            "JoinOriginUser":
            {
                "title": "JoinOriginUser",
                "required": ["firstname", "lastname"],
                "type": "object",
                "properties":
                {
                    "firstname":
                    {
                        "title": "Firstname",
                        "type": "string"
                    },
                    "lastname":
                    {
                        "title": "Lastname",
                        "type": "string"
                    }
                }
            },
            "JoinOrigins":
            {
                "title": "JoinOrigins",
                "type": "object",
                "properties":
                {
                    "device":
                    {
                        "title": "Device",
                        "type": "object",
                        "additionalProperties":
                        {
                            "$ref": "#/components/schemas/JoinOriginDevice"
                        },
                        "default":
                        {}
                    },
                    "job":
                    {
                        "title": "Job",
                        "type": "object",
                        "additionalProperties":
                        {
                            "$ref": "#/components/schemas/JoinOriginJob"
                        },
                        "default":
                        {}
                    },
                    "user":
                    {
                        "title": "User",
                        "type": "object",
                        "additionalProperties":
                        {
                            "$ref": "#/components/schemas/JoinOriginUser"
                        },
                        "default":
                        {}
                    }
                }
            },
            "JwtAuth":
            {
                "title": "JwtAuth",
                "type": "object",
                "properties":
                {
                    "auth_endpoint":
                    {
                        "title": "Auth Endpoint",
                        "type": "string",
                        "default": "https://local.flywheel.io/authenticate"
                    },
                    "verify_endpoint":
                    {
                        "title": "Verify Endpoint",
                        "type": "string",
                        "default": "https://local.flywheel.io/verify"
                    }
                },
                "additionalProperties": false,
                "description": "Base class for settings, allowing values to be overridden by environment variables.\n\nThis is useful in production for secrets you do not wish to save in code, it plays nicely with docker(-compose),\nHeroku and any 12 factor app design."
            },
            "KeyType":
            {
                "title": "KeyType",
                "enum": ["device", "user", "job"],
                "type": "string",
                "description": "An enumeration."
            },
            "LdapAuth":
            {
                "title": "LdapAuth",
                "type": "object",
                "properties":
                {
                    "auth_endpoint":
                    {
                        "title": "Auth Endpoint",
                        "type": "string",
                        "default": "http://flywheel-ldap-jwt:3000/authenticate"
                    },
                    "verify_endpoint":
                    {
                        "title": "Verify Endpoint",
                        "type": "string",
                        "default": "http://flywheel-ldap-jwt:3000/verify"
                    },
                    "check_ssl":
                    {
                        "title": "Check Ssl",
                        "type": "boolean",
                        "default": true
                    },
                    "username_field_label":
                    {
                        "title": "Username Field Label",
                        "type": "string"
                    },
                    "strip_mail_domain":
                    {
                        "title": "Strip Mail Domain",
                        "type": "boolean"
                    },
                    "mail_format":
                    {
                        "title": "Mail Format",
                        "type": "string"
                    }
                },
                "additionalProperties": false,
                "description": "Base class for settings, allowing values to be overridden by environment variables.\n\nThis is useful in production for secrets you do not wish to save in code, it plays nicely with docker(-compose),\nHeroku and any 12 factor app design."
            },
            "LdapLogin":
            {
                "title": "LdapLogin",
                "required": ["code"],
                "type": "object",
                "properties":
                {
                    "auth_type":
                    {
                        "$ref": "#/components/schemas/AuthType"
                    },
                    "code":
                    {
                        "title": "Code",
                        "type": "string"
                    }
                }
            },
            "LdapSyncConfig":
            {
                "title": "LdapSyncConfig",
                "required": ["group_dn"],
                "type": "object",
                "properties":
                {
                    "group_dn":
                    {
                        "title": "Group Dn",
                        "type": "string"
                    }
                },
                "description": "LDAP sync configuration / user input"
            },
            "LdapSyncResult":
            {
                "title": "LdapSyncResult",
                "type": "object",
                "properties":
                {
                    "created":
                    {
                        "title": "Created",
                        "type": "integer",
                        "default": 0
                    },
                    "granted":
                    {
                        "title": "Granted",
                        "type": "integer",
                        "default": 0
                    },
                    "revoked":
                    {
                        "title": "Revoked",
                        "type": "integer",
                        "default": 0
                    }
                },
                "description": "Result model w/ no. of users created/granted/revoked upon sync"
            },
            "LdapSyncStatus":
            {
                "title": "LdapSyncStatus",
                "type": "object",
                "properties":
                {
                    "group_dn":
                    {
                        "title": "Group Dn",
                        "type": "string"
                    },
                    "last_attempt":
                    {
                        "title": "Last Attempt",
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_success":
                    {
                        "title": "Last Success",
                        "type": "string",
                        "format": "date-time"
                    },
                    "sync_error":
                    {
                        "title": "Sync Error",
                        "type": "string"
                    }
                },
                "description": "LDAP sync status embedded in site settings / projects"
            },
            "LdapSyncUpdate":
            {
                "title": "LdapSyncUpdate",
                "type": "object",
                "properties":
                {
                    "users":
                    {
                        "title": "Users",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/LdapSyncUser"
                        }
                    },
                    "error":
                    {
                        "title": "Error",
                        "type": "string"
                    }
                },
                "additionalProperties": false,
                "description": "LDAP update as sent by the sync service"
            },
            "LdapSyncUser":
            {
                "title": "LdapSyncUser",
                "required": ["uid", "firstname", "lastname"],
                "type": "object",
                "properties":
                {
                    "uid":
                    {
                        "title": "Uid",
                        "type": "string"
                    },
                    "firstname":
                    {
                        "title": "Firstname",
                        "type": "string"
                    },
                    "lastname":
                    {
                        "title": "Lastname",
                        "type": "string"
                    }
                },
                "description": "LDAP user info model as extracted by the sync service"
            },
            "LegacyInput":
            {
                "title": "LegacyInput",
                "required": ["input", "type", "id", "name"],
                "type": "object",
                "properties":
                {
                    "input":
                    {
                        "title": "Input",
                        "type": "string"
                    },
                    "type":
                    {
                        "$ref": "#/components/schemas/ContainerType"
                    },
                    "id":
                    {
                        "title": "Id",
                        "type": "string"
                    },
                    "name":
                    {
                        "title": "Name",
                        "type": "string"
                    }
                },
                "description": "Represent a legacy form of the input, when inputs are in arrays\n\nAttributes:\n    input (str): The input key in the gear\n    type (ContainerType): The type of container the file is in\n    id (str): The id of the container the file is in\n    name (str): The name of the file"
            },
            "LicenseType":
            {
                "title": "LicenseType",
                "enum": ["AFL-1.1", "AFL-1.2", "AFL-2.0", "AFL-2.1", "AFL-2.2", "AFL-3.0", "AFL-1.0", "Apache-1.1", "Apache-2.0", "APSL-1.1", "APSL-1.2", "APSL-2.0", "Artistic-1.0-Perl", "Artistic-2.0-cl8", "Artistic-2.0", "AAL", "BSL-1.0", "BSD-2-Clause", "BSD-3-Clause", "0BSD", "CECILL-2.1", "CNRI-Python", "CDDL-1.0", "CPAL-1.0", "CPL-1.0", "CATOSL-1.1", "CUA-OPL-1.0", "EPL-1.0", "ECL-1.0", "ECL-2.0", "EFL-2.0", "Entessa", "EUDatagrid", "EUPL-1.1", "Fair", "Flywheel MSA", "Frameworx-1.0", "AGPL-3.0", "GPL-2.0", "GPL-3.0", "LGPL-2.0", "HPND", "IPL-1.0", "Intel", "IPA", "ISC", "LPPL-1.3c", "LiLiQ-P-1.1", "LiLiQ-Rplus-1.1", "LiLiQ-R-1.1", "LPL-1.02", "LPL-1.0", "MS-PL", "MS-RL", "MirOS", "MIT", "Motosoto", "MPL-1.0", "MPL-1.1", "MPL-2.0", "MPL-2.0-no-copyleft-exception", "Multics", "NASA-1.3", "Naumen", "NGPL", "Nokia", "NPOSL-3.0", "NTP", "OCLC-2.0", "OGTSL", "OSL-1.0", "OSL-2.0", "OSL-3.0", "OSET-PL-2.1", "PHP-3.0", "PostgreSQL", "Python-2.0", "QPL-1.0", "RPSL-1.0", "RPL-1.1", "RPL-1.5", "RSCPl", "OFL-1.1", "SimPL-2.0", "Sleepycat", "SISSL", "SPL-1.0", "Watcom-1.0", "UPL-1.0", "NCSA", "VSL-1.0", "W3C", "Xnet", "Zlib", "ZPL-2.0", "Other"],
                "type": "string",
                "description": "Valid license types"
            },
            "LocalStorage":
            {
                "title": "LocalStorage",
                "required": ["path"],
                "type": "object",
                "properties":
                {
                    "path":
                    {
                        "title": "Path",
                        "type": "string"
                    }
                },
                "additionalProperties": false
            },
            "Location":
            {
                "title": "Location",
                "required": ["path", "name"],
                "type": "object",
                "properties":
                {
                    "path":
                    {
                        "title": "Path",
                        "type": "string"
                    },
                    "name":
                    {
                        "title": "Name",
                        "type": "string"
                    }
                },
                "description": "Representation of a file's location inside the gear container\n\nAttributes:\n    path (str): The path to the file inside the gear container\n    name (str): The name of the file"
            },
            "MasterSubjectCode":
            {
                "title": "MasterSubjectCode",
                "type": "object",
                "properties":
                {
                    "size":
                    {
                        "title": "Size",
                        "type": "string",
                        "default": "6"
                    },
                    "prefix":
                    {
                        "title": "Prefix",
                        "type": "string",
                        "default": "fw"
                    },
                    "chars":
                    {
                        "title": "Chars",
                        "type": "string",
                        "default": "BCDFGHJKLMNPQRSTVWXYZ123456789"
                    },
                    "verify_config":
                    {
                        "title": "Verify Config",
                        "type": "string"
                    }
                },
                "additionalProperties": false,
                "description": "Base class for settings, allowing values to be overridden by environment variables.\n\nThis is useful in production for secrets you do not wish to save in code, it plays nicely with docker(-compose),\nHeroku and any 12 factor app design."
            },
            "MasterSubjectCodeDobInput":
            {
                "title": "MasterSubjectCodeDobInput",
                "required": ["first_name", "last_name", "date_of_birth", "use_patient_id"],
                "type": "object",
                "properties":
                {
                    "first_name":
                    {
                        "title": "First Name",
                        "pattern": ".*[a-zA-Z]+.*",
                        "type": "string"
                    },
                    "last_name":
                    {
                        "title": "Last Name",
                        "pattern": ".*[a-zA-Z]+.*",
                        "type": "string"
                    },
                    "date_of_birth":
                    {
                        "title": "Date Of Birth",
                        "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
                        "type": "string"
                    },
                    "patient_id":
                    {
                        "title": "Patient Id",
                        "pattern": "^.*[0-9a-zA-Z]+.*$",
                        "type": "string"
                    },
                    "use_patient_id":
                    {
                        "title": "Use Patient Id",
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "MasterSubjectCodeInput":
            {
                "title": "MasterSubjectCodeInput",
                "required": ["patient_id", "use_patient_id"],
                "type": "object",
                "properties":
                {
                    "patient_id":
                    {
                        "title": "Patient Id",
                        "maxLength": 64,
                        "minLength": 1,
                        "pattern": "^.*[0-9a-zA-Z]+.*$",
                        "type": "string"
                    },
                    "use_patient_id":
                    {
                        "title": "Use Patient Id",
                        "type": "boolean"
                    },
                    "first_name":
                    {
                        "title": "First Name",
                        "maxLength": 64,
                        "minLength": 1,
                        "pattern": ".*[a-zA-Z]+.*",
                        "type": "string"
                    },
                    "last_name":
                    {
                        "title": "Last Name",
                        "minLength": 1,
                        "pattern": ".*[a-zA-Z]+.*",
                        "type": "string"
                    },
                    "date_of_birth":
                    {
                        "title": "Date Of Birth",
                        "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
                        "type": "string"
                    }
                },
                "additionalProperties": false
            },
            "ModalityInput":
            {
                "title": "ModalityInput",
                "type": "object",
                "properties":
                {
                    "classification":
                    {
                        "title": "Classification",
                        "type": "object",
                        "additionalProperties":
                        {
                            "type": "array",
                            "items":
                            {
                                "type": "string"
                            }
                        }
                    },
                    "active":
                    {
                        "title": "Active",
                        "type": "boolean"
                    },
                    "description":
                    {
                        "title": "Description",
                        "type": "string"
                    },
                    "_id":
                    {
                        "title": " Id",
                        "pattern": "^[0-9a-zA-Z_-]{2,64}$",
                        "type": "string",
                        "default": "MR"
                    }
                },
                "additionalProperties": false
            },
            "ModalityModify":
            {
                "title": "ModalityModify",
                "type": "object",
                "properties":
                {
                    "classification":
                    {
                        "title": "Classification",
                        "type": "object",
                        "additionalProperties":
                        {
                            "type": "array",
                            "items":
                            {
                                "type": "string"
                            }
                        }
                    },
                    "active":
                    {
                        "title": "Active",
                        "type": "boolean"
                    },
                    "description":
                    {
                        "title": "Description",
                        "type": "string"
                    }
                },
                "additionalProperties": false
            },
            "ModifiedResult":
            {
                "title": "ModifiedResult",
                "required": ["modified"],
                "type": "object",
                "properties":
                {
                    "modified":
                    {
                        "title": "Modified",
                        "type": "integer"
                    }
                }
            },
            "ModifyUserInput":
            {
                "title": "ModifyUserInput",
                "type": "object",
                "properties":
                {
                    "firstname":
                    {
                        "title": "Firstname",
                        "type": "string"
                    },
                    "lastname":
                    {
                        "title": "Lastname",
                        "type": "string"
                    },
                    "email":
                    {
                        "title": "Email",
                        "type": "string"
                    },
                    "avatars":
                    {
                        "$ref": "#/components/schemas/AvatarList"
                    },
                    "avatar":
                    {
                        "title": "Avatar",
                        "type": "string"
                    },
                    "roles":
                    {
                        "title": "Roles",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/RoleType"
                        }
                    },
                    "disabled":
                    {
                        "title": "Disabled",
                        "type": "boolean"
                    },
                    "preferences":
                    {
                        "title": "Preferences",
                        "type": "object"
                    },
                    "root":
                    {
                        "title": "Root",
                        "type": "boolean"
                    },
                    "password":
                    {
                        "title": "Password",
                        "type": "string"
                    }
                }
            },
            "Note":
            {
                "title": "Note",
                "required": ["text"],
                "type": "object",
                "properties":
                {
                    "_id":
                    {
                        "title": " Id",
                        "type": "string"
                    },
                    "created":
                    {
                        "title": "Created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "modified":
                    {
                        "title": "Modified",
                        "type": "string",
                        "format": "date-time"
                    },
                    "timestamp":
                    {
                        "title": "Timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "text":
                    {
                        "title": "Text",
                        "type": "string"
                    },
                    "user":
                    {
                        "title": "User",
                        "type": "string"
                    },
                    "avatar":
                    {
                        "title": "Avatar",
                        "type": "string"
                    }
                }
            },
            "NoteInput":
            {
                "title": "NoteInput",
                "required": ["text"],
                "type": "object",
                "properties":
                {
                    "text":
                    {
                        "title": "Text",
                        "type": "string"
                    }
                }
            },
            "OptionalInputPolicy":
            {
                "title": "OptionalInputPolicy",
                "enum": ["ignored", "flexible", "required"],
                "type": "string",
                "description": "The policies to set inputs when running jobs\n\nAttributes:\n    ignored: Ignore all optional inputs\n    flexible: match a file if it's there, otherwise still match the container\n    required: treat all optional inputs as required inputs."
            },
            "Origin":
            {
                "title": "Origin",
                "required": ["type"],
                "type": "object",
                "properties":
                {
                    "type":
                    {
                        "$ref": "#/components/schemas/OriginType"
                    },
                    "id":
                    {
                        "title": "Id",
                        "type": "string"
                    }
                }
            },
            "OriginType":
            {
                "title": "OriginType",
                "enum": ["user", "device", "job", "system", "unknown"],
                "type": "string",
                "description": "An enumeration."
            },
            "OrphanedCount":
            {
                "title": "OrphanedCount",
                "required": ["orphaned"],
                "type": "object",
                "properties":
                {
                    "orphaned":
                    {
                        "title": "Orphaned",
                        "type": "integer"
                    }
                }
            },
            "OutputUserPage":
            {
                "title": "OutputUserPage",
                "required": ["total", "results"],
                "type": "object",
                "properties":
                {
                    "count":
                    {
                        "title": "Count",
                        "type": "integer"
                    },
                    "total":
                    {
                        "title": "Total",
                        "type": "integer"
                    },
                    "results":
                    {
                        "title": "Results",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/UserOutput"
                        }
                    }
                },
                "description": "A page"
            },
            "Page":
            {
                "title": "Page",
                "required": ["total", "results"],
                "type": "object",
                "properties":
                {
                    "count":
                    {
                        "title": "Count",
                        "type": "integer"
                    },
                    "total":
                    {
                        "title": "Total",
                        "type": "integer"
                    },
                    "results":
                    {
                        "title": "Results",
                        "type": "array",
                        "items":
                        {}
                    }
                },
                "description": "A page"
            },
            "ParentType":
            {
                "title": "ParentType",
                "enum": ["site", "user", "group", "project"],
                "type": "string",
                "description": "An enumeration."
            },
            "Persistent":
            {
                "title": "Persistent",
                "type": "object",
                "properties":
                {
                    "data_path":
                    {
                        "title": "Data Path",
                        "type": "string",
                        "default": "/var/scitran/data"
                    },
                    "fs_url":
                    {
                        "title": "Fs Url",
                        "type": "string"
                    },
                    "db_connect_timeout":
                    {
                        "title": "Db Connect Timeout",
                        "type": "integer",
                        "default": 2000
                    },
                    "elasticsearch_timeout":
                    {
                        "title": "Elasticsearch Timeout",
                        "type": "integer",
                        "default": 10
                    },
                    "db_uri":
                    {
                        "title": "Db Uri",
                        "type": "string",
                        "default": "mongodb://flywheel-mongodb:27017/scitran?replicaSet=elasticflywheel"
                    },
                    "support_legacy_fs":
                    {
                        "title": "Support Legacy Fs",
                        "type": "boolean",
                        "default": true
                    },
                    "db_log_uri":
                    {
                        "title": "Db Log Uri",
                        "type": "string",
                        "default": "mongodb://flywheel-mongodb:27017/logs?replicaSet=elasticflywheel"
                    },
                    "elasticsearch_host":
                    {
                        "title": "Elasticsearch Host",
                        "type": "string",
                        "default": "elasticsearch-master:9200"
                    },
                    "db_server_selection_timeout":
                    {
                        "title": "Db Server Selection Timeout",
                        "type": "integer",
                        "default": 3000
                    }
                },
                "additionalProperties": false,
                "description": "Base class for settings, allowing values to be overridden by environment variables.\n\nThis is useful in production for secrets you do not wish to save in code, it plays nicely with docker(-compose),\nHeroku and any 12 factor app design."
            },
            "PremadeJobsBatchProposalInput":
            {
                "title": "PremadeJobsBatchProposalInput",
                "required": ["jobs"],
                "type": "object",
                "properties":
                {
                    "jobs":
                    {
                        "title": "Jobs",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/InputJob"
                        }
                    }
                }
            },
            "Project":
            {
                "title": "Project",
                "required": ["parents", "editions", "providers", "permissions", "files", "info", "notes", "tags", "revision", "modified", "created"],
                "type": "object",
                "properties":
                {
                    "_id":
                    {
                        "title": " Id",
                        "type": "string"
                    },
                    "label":
                    {
                        "title": "Label",
                        "type": "string"
                    },
                    "description":
                    {
                        "title": "Description",
                        "type": "string",
                        "default": ""
                    },
                    "parents":
                    {
                        "$ref": "#/components/schemas/ProjectParents"
                    },
                    "editions":
                    {
                        "$ref": "#/components/schemas/Edition"
                    },
                    "providers":
                    {
                        "$ref": "#/components/schemas/Providers"
                    },
                    "ldap_sync":
                    {
                        "$ref": "#/components/schemas/LdapSyncStatus"
                    },
                    "permissions":
                    {
                        "title": "Permissions",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/RolePermission"
                        }
                    },
                    "files":
                    {
                        "title": "Files",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/File"
                        }
                    },
                    "info":
                    {
                        "title": "Info",
                        "type": "object"
                    },
                    "notes":
                    {
                        "title": "Notes",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/Note"
                        }
                    },
                    "tags":
                    {
                        "title": "Tags",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "templates":
                    {
                        "title": "Templates",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/ProjectTemplate"
                        },
                        "default": []
                    },
                    "locked":
                    {
                        "title": "Locked",
                        "type": "boolean",
                        "default": false
                    },
                    "revision":
                    {
                        "title": "Revision",
                        "type": "integer"
                    },
                    "modified":
                    {
                        "title": "Modified",
                        "type": "string",
                        "format": "date-time"
                    },
                    "created":
                    {
                        "title": "Created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted":
                    {
                        "title": "Deleted",
                        "type": "string",
                        "format": "date-time"
                    },
                    "settings":
                    {
                        "$ref": "#/components/schemas/SettingsOutput"
                    }
                }
            },
            "ProjectAET":
            {
                "title": "ProjectAET",
                "required": ["_id", "created", "aet", "creator", "project_id"],
                "type": "object",
                "properties":
                {
                    "_id":
                    {
                        "title": " Id",
                        "type": "string"
                    },
                    "created":
                    {
                        "title": "Created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "aet":
                    {
                        "title": "Aet",
                        "type": "string"
                    },
                    "creator":
                    {
                        "title": "Creator",
                        "type": "string"
                    },
                    "host":
                    {
                        "title": "Host",
                        "type": "string"
                    },
                    "port":
                    {
                        "title": "Port",
                        "type": "integer"
                    },
                    "project_id":
                    {
                        "title": "Project Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    }
                },
                "description": "Create new ProjectAET enabling DIMSE C-FIND on a FW project.\n\nArgs:\n    project_id (str|ObjectId): The Flywheel project the AET refers to."
            },
            "ProjectAETInput":
            {
                "title": "ProjectAETInput",
                "required": ["project_id"],
                "type": "object",
                "properties":
                {
                    "aet":
                    {
                        "title": "Aet",
                        "pattern": "^[\\!-\\[\\]-\\~]+(?:[\\ -\\[\\]-\\~]*[\\!-\\[\\]-\\~]+)*$",
                        "type": "string"
                    },
                    "created":
                    {
                        "title": "Created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "creator":
                    {
                        "title": "Creator",
                        "type": "string"
                    },
                    "project_id":
                    {
                        "title": "Project Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    }
                }
            },
            "ProjectContainerOutput":
            {
                "title": "ProjectContainerOutput",
                "required": ["_id", "description", "group", "parents", "editions", "providers", "permissions", "files", "info", "notes", "tags", "templates", "locked", "revision", "modified", "created"],
                "type": "object",
                "properties":
                {
                    "_id":
                    {
                        "title": " Id",
                        "type": "string"
                    },
                    "label":
                    {
                        "title": "Label",
                        "type": "string"
                    },
                    "description":
                    {
                        "title": "Description",
                        "type": "string"
                    },
                    "group":
                    {
                        "title": "Group",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "parents":
                    {
                        "$ref": "#/components/schemas/ProjectParents"
                    },
                    "editions":
                    {
                        "$ref": "#/components/schemas/Edition"
                    },
                    "providers":
                    {
                        "$ref": "#/components/schemas/Providers"
                    },
                    "ldap_sync":
                    {
                        "$ref": "#/components/schemas/LdapSyncStatus"
                    },
                    "permissions":
                    {
                        "title": "Permissions",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/RolePermission"
                        }
                    },
                    "files":
                    {
                        "title": "Files",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/FileOutput"
                        }
                    },
                    "info":
                    {
                        "title": "Info",
                        "type": "object"
                    },
                    "info_exists":
                    {
                        "title": "Info Exists",
                        "type": "boolean"
                    },
                    "notes":
                    {
                        "title": "Notes",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/Note"
                        }
                    },
                    "tags":
                    {
                        "title": "Tags",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "templates":
                    {
                        "title": "Templates",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/ProjectTemplate"
                        }
                    },
                    "join-origin":
                    {
                        "$ref": "#/components/schemas/JoinOrigins"
                    },
                    "analyses":
                    {
                        "title": "Analyses",
                        "type": "array",
                        "items":
                        {
                            "anyOf": [
                            {
                                "$ref": "#/components/schemas/AnalysisOutput"
                            },
                            {
                                "$ref": "#/components/schemas/AnalysisOutputInflatedJob"
                            }]
                        },
                        "default": []
                    },
                    "settings":
                    {
                        "$ref": "#/components/schemas/SettingsOutput"
                    },
                    "locked":
                    {
                        "title": "Locked",
                        "type": "boolean"
                    },
                    "revision":
                    {
                        "title": "Revision",
                        "type": "integer"
                    },
                    "modified":
                    {
                        "title": "Modified",
                        "type": "string",
                        "format": "date-time"
                    },
                    "created":
                    {
                        "title": "Created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "container_type":
                    {
                        "$ref": "#/components/schemas/ContainerType"
                    }
                }
            },
            "ProjectInput":
            {
                "title": "ProjectInput",
                "required": ["group"],
                "type": "object",
                "properties":
                {
                    "label":
                    {
                        "title": "Label",
                        "type": "string"
                    },
                    "description":
                    {
                        "title": "Description",
                        "type": "string",
                        "default": ""
                    },
                    "group":
                    {
                        "title": "Group",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "editions":
                    {
                        "$ref": "#/components/schemas/Edition"
                    },
                    "providers":
                    {
                        "$ref": "#/components/schemas/Providers"
                    },
                    "ldap_sync":
                    {
                        "$ref": "#/components/schemas/LdapSyncConfig"
                    },
                    "permissions":
                    {
                        "title": "Permissions",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/RolePermission"
                        }
                    },
                    "info":
                    {
                        "title": "Info",
                        "type": "object",
                        "default":
                        {}
                    }
                }
            },
            "ProjectListOutput":
            {
                "title": "ProjectListOutput",
                "required": ["_id", "description", "group", "parents", "editions", "providers", "permissions", "files", "notes", "tags", "templates", "revision", "modified", "created"],
                "type": "object",
                "properties":
                {
                    "_id":
                    {
                        "title": " Id",
                        "type": "string"
                    },
                    "label":
                    {
                        "title": "Label",
                        "type": "string"
                    },
                    "description":
                    {
                        "title": "Description",
                        "type": "string"
                    },
                    "group":
                    {
                        "title": "Group",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "parents":
                    {
                        "$ref": "#/components/schemas/ProjectParents"
                    },
                    "editions":
                    {
                        "$ref": "#/components/schemas/Edition"
                    },
                    "providers":
                    {
                        "$ref": "#/components/schemas/Providers"
                    },
                    "ldap_sync":
                    {
                        "$ref": "#/components/schemas/LdapSyncStatus"
                    },
                    "permissions":
                    {
                        "title": "Permissions",
                        "anyOf": [
                        {
                            "type": "array",
                            "items":
                            {
                                "$ref": "#/components/schemas/RolePermissionAvatarsOutput"
                            }
                        },
                        {
                            "type": "array",
                            "items":
                            {
                                "$ref": "#/components/schemas/RolePermission"
                            }
                        }]
                    },
                    "files":
                    {
                        "title": "Files",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/FileListOutput"
                        }
                    },
                    "info":
                    {
                        "$ref": "#/components/schemas/BIDSInfo"
                    },
                    "info_exists":
                    {
                        "title": "Info Exists",
                        "type": "boolean"
                    },
                    "notes":
                    {
                        "title": "Notes",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/Note"
                        }
                    },
                    "tags":
                    {
                        "title": "Tags",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "templates":
                    {
                        "title": "Templates",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/ProjectTemplate"
                        }
                    },
                    "session_count":
                    {
                        "title": "Session Count",
                        "type": "integer"
                    },
                    "join-origin":
                    {
                        "$ref": "#/components/schemas/JoinOrigins"
                    },
                    "analyses":
                    {
                        "title": "Analyses",
                        "type": "array",
                        "items":
                        {
                            "anyOf": [
                            {
                                "$ref": "#/components/schemas/AnalysisListOutput"
                            },
                            {
                                "$ref": "#/components/schemas/AnalysisListOutputInflatedJob"
                            }]
                        },
                        "default": []
                    },
                    "revision":
                    {
                        "title": "Revision",
                        "type": "integer"
                    },
                    "modified":
                    {
                        "title": "Modified",
                        "type": "string",
                        "format": "date-time"
                    },
                    "created":
                    {
                        "title": "Created",
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "ProjectModify":
            {
                "title": "ProjectModify",
                "type": "object",
                "properties":
                {
                    "label":
                    {
                        "title": "Label",
                        "type": "string"
                    },
                    "group":
                    {
                        "title": "Group",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "description":
                    {
                        "title": "Description",
                        "type": "string"
                    },
                    "editions":
                    {
                        "$ref": "#/components/schemas/Edition"
                    },
                    "providers":
                    {
                        "$ref": "#/components/schemas/Providers"
                    },
                    "ldap_sync":
                    {
                        "$ref": "#/components/schemas/LdapSyncStatus"
                    }
                }
            },
            "ProjectOutput":
            {
                "title": "ProjectOutput",
                "required": ["_id", "description", "group", "parents", "editions", "providers", "permissions", "files", "info", "notes", "tags", "templates", "locked", "revision", "modified", "created"],
                "type": "object",
                "properties":
                {
                    "_id":
                    {
                        "title": " Id",
                        "type": "string"
                    },
                    "label":
                    {
                        "title": "Label",
                        "type": "string"
                    },
                    "description":
                    {
                        "title": "Description",
                        "type": "string"
                    },
                    "group":
                    {
                        "title": "Group",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "parents":
                    {
                        "$ref": "#/components/schemas/ProjectParents"
                    },
                    "editions":
                    {
                        "$ref": "#/components/schemas/Edition"
                    },
                    "providers":
                    {
                        "$ref": "#/components/schemas/Providers"
                    },
                    "ldap_sync":
                    {
                        "$ref": "#/components/schemas/LdapSyncStatus"
                    },
                    "permissions":
                    {
                        "title": "Permissions",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/RolePermission"
                        }
                    },
                    "files":
                    {
                        "title": "Files",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/FileOutput"
                        }
                    },
                    "info":
                    {
                        "title": "Info",
                        "type": "object"
                    },
                    "info_exists":
                    {
                        "title": "Info Exists",
                        "type": "boolean"
                    },
                    "notes":
                    {
                        "title": "Notes",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/Note"
                        }
                    },
                    "tags":
                    {
                        "title": "Tags",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "templates":
                    {
                        "title": "Templates",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/ProjectTemplate"
                        }
                    },
                    "join-origin":
                    {
                        "$ref": "#/components/schemas/JoinOrigins"
                    },
                    "analyses":
                    {
                        "title": "Analyses",
                        "type": "array",
                        "items":
                        {
                            "anyOf": [
                            {
                                "$ref": "#/components/schemas/AnalysisOutput"
                            },
                            {
                                "$ref": "#/components/schemas/AnalysisOutputInflatedJob"
                            }]
                        },
                        "default": []
                    },
                    "settings":
                    {
                        "$ref": "#/components/schemas/SettingsOutput"
                    },
                    "locked":
                    {
                        "title": "Locked",
                        "type": "boolean"
                    },
                    "revision":
                    {
                        "title": "Revision",
                        "type": "integer"
                    },
                    "modified":
                    {
                        "title": "Modified",
                        "type": "string",
                        "format": "date-time"
                    },
                    "created":
                    {
                        "title": "Created",
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "ProjectParents":
            {
                "title": "ProjectParents",
                "required": ["group"],
                "type": "object",
                "properties":
                {
                    "group":
                    {
                        "title": "Group",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    }
                }
            },
            "ProjectSpec":
            {
                "title": "ProjectSpec",
                "required": ["fields"],
                "type": "object",
                "properties":
                {
                    "fields":
                    {
                        "title": "Fields",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "filter":
                    {
                        "title": "Filter",
                        "type": "string"
                    },
                    "limit":
                    {
                        "title": "Limit",
                        "type": "integer",
                        "default": 50
                    },
                    "sort":
                    {
                        "title": "Sort",
                        "type": "string"
                    },
                    "files":
                    {
                        "$ref": "#/components/schemas/FileFilter"
                    },
                    "jobs":
                    {
                        "$ref": "#/components/schemas/JobSpec"
                    },
                    "analyses":
                    {
                        "$ref": "#/components/schemas/ContainerSpecWithInputs"
                    },
                    "group":
                    {
                        "$ref": "#/components/schemas/GroupSpec"
                    },
                    "subjects":
                    {
                        "$ref": "#/components/schemas/SubjectSpec"
                    },
                    "sessions":
                    {
                        "$ref": "#/components/schemas/SessionSpec"
                    },
                    "acquisitions":
                    {
                        "$ref": "#/components/schemas/AcquisitionSpec"
                    }
                },
                "additionalProperties": false
            },
            "ProjectTemplate":
            {
                "title": "ProjectTemplate",
                "type": "object",
                "properties":
                {
                    "session":
                    {
                        "$ref": "#/components/schemas/SessionTemplateOptions"
                    },
                    "acquisitions":
                    {
                        "title": "Acquisitions",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/AcquisitionTemplateOptions"
                        },
                        "default": []
                    }
                },
                "additionalProperties": false
            },
            "ProjectTemplateList":
            {
                "title": "ProjectTemplateList",
                "required": ["templates"],
                "type": "object",
                "properties":
                {
                    "templates":
                    {
                        "title": "Templates",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/ProjectTemplate"
                        }
                    }
                },
                "additionalProperties": false
            },
            "Provider":
            {
                "title": "Provider",
                "required": ["label", "provider_class", "provider_type", "origin", "created", "modified"],
                "type": "object",
                "properties":
                {
                    "_id":
                    {
                        "title": " Id",
                        "type": "string"
                    },
                    "label":
                    {
                        "title": "Label",
                        "type": "string"
                    },
                    "provider_class":
                    {
                        "$ref": "#/components/schemas/ProviderClass"
                    },
                    "provider_type":
                    {
                        "$ref": "#/components/schemas/ProviderType"
                    },
                    "creds":
                    {
                        "title": "Creds",
                        "anyOf": [
                        {
                            "$ref": "#/components/schemas/Creds"
                        },
                        {
                            "$ref": "#/components/schemas/AwsCreds"
                        },
                        {
                            "$ref": "#/components/schemas/GcpCreds"
                        },
                        {
                            "$ref": "#/components/schemas/AzureCreds"
                        }]
                    },
                    "origin":
                    {
                        "$ref": "#/components/schemas/Origin"
                    },
                    "config":
                    {
                        "title": "Config",
                        "anyOf": [
                        {
                            "$ref": "#/components/schemas/BaseCompute"
                        },
                        {
                            "$ref": "#/components/schemas/S3CompatStorage"
                        },
                        {
                            "$ref": "#/components/schemas/AwsStorage"
                        },
                        {
                            "$ref": "#/components/schemas/GcpStorage"
                        },
                        {
                            "$ref": "#/components/schemas/LocalStorage"
                        },
                        {
                            "$ref": "#/components/schemas/StaticCompute"
                        },
                        {
                            "$ref": "#/components/schemas/AsStorage"
                        }]
                    },
                    "created":
                    {
                        "title": "Created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "modified":
                    {
                        "title": "Modified",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "additionalProperties": false,
                "description": "Instantiable provider class that contains a full detail to\nutilize a provider"
            },
            "ProviderClass":
            {
                "title": "ProviderClass",
                "enum": ["compute", "storage"],
                "type": "string",
                "description": "An enumeration."
            },
            "ProviderType":
            {
                "title": "ProviderType",
                "enum": ["local", "static", "aws", "azure", "gcp", "s3_compat"],
                "type": "string",
                "description": "Represents all types that can be instantiated.\nNot all combinations are valid as addressed in service layer"
            },
            "Providers":
            {
                "title": "Providers",
                "type": "object",
                "properties":
                {
                    "storage":
                    {
                        "title": "Storage",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "compute":
                    {
                        "title": "Compute",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    }
                },
                "description": "Is the association of providers on a container like object"
            },
            "Queue":
            {
                "title": "Queue",
                "type": "object",
                "properties":
                {
                    "max_retries":
                    {
                        "title": "Max Retries",
                        "type": "integer",
                        "default": 3
                    },
                    "retry_on_fail":
                    {
                        "title": "Retry On Fail",
                        "type": "boolean",
                        "default": false
                    }
                },
                "additionalProperties": false,
                "description": "Base class for settings, allowing values to be overridden by environment variables.\n\nThis is useful in production for secrets you do not wish to save in code, it plays nicely with docker(-compose),\nHeroku and any 12 factor app design."
            },
            "ResolveInput":
            {
                "title": "ResolveInput",
                "required": ["path"],
                "type": "object",
                "properties":
                {
                    "path":
                    {
                        "title": "Path",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    }
                },
                "additionalProperties": false
            },
            "RoleInput":
            {
                "title": "RoleInput",
                "required": ["label", "actions"],
                "type": "object",
                "properties":
                {
                    "label":
                    {
                        "title": "Label",
                        "type": "string"
                    },
                    "actions":
                    {
                        "title": "Actions",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/Action"
                        }
                    }
                },
                "additionalProperties": false
            },
            "RolePermission":
            {
                "title": "RolePermission",
                "required": ["_id", "role_ids"],
                "type": "object",
                "properties":
                {
                    "_id":
                    {
                        "title": " Id",
                        "pattern": "[0-9a-zA-Z.@_-]*",
                        "type": "string"
                    },
                    "role_ids":
                    {
                        "title": "Role Ids",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "minItems": 1,
                        "type": "array",
                        "items":
                        {
                            "type": "string",
                            "pattern": "^[0-9a-fA-F]{24}$"
                        }
                    }
                },
                "description": "Model for a role permission\n\nAttributes:\n    id: The id of the user\n    role_ids: List of ids of the roles user has on the resource"
            },
            "RolePermissionAvatarsOutput":
            {
                "title": "RolePermissionAvatarsOutput",
                "required": ["_id", "role_ids", "firstname", "lastname"],
                "type": "object",
                "properties":
                {
                    "_id":
                    {
                        "title": " Id",
                        "pattern": "[0-9a-zA-Z.@_-]*",
                        "type": "string"
                    },
                    "role_ids":
                    {
                        "title": "Role Ids",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "minItems": 1,
                        "type": "array",
                        "items":
                        {
                            "type": "string",
                            "pattern": "^[0-9a-fA-F]{24}$"
                        }
                    },
                    "firstname":
                    {
                        "title": "Firstname",
                        "type": "string"
                    },
                    "lastname":
                    {
                        "title": "Lastname",
                        "type": "string"
                    },
                    "avatar":
                    {
                        "title": "Avatar",
                        "type": "string"
                    }
                }
            },
            "RolePermissionOutput":
            {
                "title": "RolePermissionOutput",
                "required": ["_id", "role_ids"],
                "type": "object",
                "properties":
                {
                    "_id":
                    {
                        "title": " Id",
                        "pattern": "[0-9a-zA-Z.@_-]*",
                        "type": "string"
                    },
                    "role_ids":
                    {
                        "title": "Role Ids",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "minItems": 1,
                        "type": "array",
                        "items":
                        {
                            "type": "string",
                            "pattern": "^[0-9a-fA-F]{24}$"
                        }
                    }
                }
            },
            "RolePermissionUpdate":
            {
                "title": "RolePermissionUpdate",
                "required": ["role_ids"],
                "type": "object",
                "properties":
                {
                    "role_ids":
                    {
                        "title": "Role Ids",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "minItems": 1,
                        "type": "array",
                        "items":
                        {
                            "type": "string",
                            "pattern": "^[0-9a-fA-F]{24}$"
                        }
                    }
                }
            },
            "RoleType":
            {
                "title": "RoleType",
                "enum": ["public", "user", "developer", "site_admin", "drone", "<class 'core.models.user.RoleType.Config'>"],
                "type": "string",
                "description": "An enumeration."
            },
            "RoleUpdate":
            {
                "title": "RoleUpdate",
                "type": "object",
                "properties":
                {
                    "label":
                    {
                        "title": "Label",
                        "type": "string"
                    },
                    "actions":
                    {
                        "title": "Actions",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/Action"
                        }
                    }
                }
            },
            "S3CompatStorage":
            {
                "title": "S3CompatStorage",
                "required": ["bucket", "endpoint_url"],
                "type": "object",
                "properties":
                {
                    "region":
                    {
                        "title": "Region",
                        "type": "string"
                    },
                    "bucket":
                    {
                        "title": "Bucket",
                        "type": "string"
                    },
                    "path":
                    {
                        "title": "Path",
                        "type": "string",
                        "default": ""
                    },
                    "endpoint_url":
                    {
                        "title": "Endpoint Url",
                        "maxLength": 65536,
                        "minLength": 1,
                        "type": "string",
                        "format": "uri"
                    },
                    "verify_certs":
                    {
                        "title": "Verify Certs",
                        "type": "boolean",
                        "default": false
                    },
                    "signed_urls":
                    {
                        "title": "Signed Urls",
                        "type": "boolean",
                        "default": false
                    }
                },
                "additionalProperties": false
            },
            "SamlAuth":
            {
                "title": "SamlAuth",
                "type": "object",
                "properties":
                {
                    "display_string":
                    {
                        "title": "Display String",
                        "type": "string",
                        "default": "Shibboleth SSO"
                    },
                    "verify_endpoint":
                    {
                        "title": "Verify Endpoint",
                        "type": "string",
                        "default": "https://local.flywheel.io/Shibboleth.sso/Session"
                    },
                    "refresh_rate":
                    {
                        "title": "Refresh Rate",
                        "type": "integer",
                        "default": 300
                    },
                    "auth_endpoint":
                    {
                        "title": "Auth Endpoint",
                        "type": "string",
                        "default": "http://local.flywheel.io/secure/login/saml"
                    },
                    "uid_key_name":
                    {
                        "title": "Uid Key Name",
                        "type": "string",
                        "default": "mail"
                    }
                },
                "additionalProperties": false,
                "description": "Base class for settings, allowing values to be overridden by environment variables.\n\nThis is useful in production for secrets you do not wish to save in code, it plays nicely with docker(-compose),\nHeroku and any 12 factor app design."
            },
            "SaveSearchInput":
            {
                "title": "SaveSearchInput",
                "required": ["label", "search", "parent"],
                "type": "object",
                "properties":
                {
                    "label":
                    {
                        "title": "Label",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "search":
                    {
                        "$ref": "#/components/schemas/SearchQuery"
                    },
                    "parent":
                    {
                        "$ref": "#/components/schemas/SaveSearchParent"
                    }
                },
                "additionalProperties": false
            },
            "SaveSearchOutput":
            {
                "title": "SaveSearchOutput",
                "required": ["_id", "label", "parent"],
                "type": "object",
                "properties":
                {
                    "_id":
                    {
                        "title": " Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "label":
                    {
                        "title": "Label",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "search":
                    {
                        "$ref": "#/components/schemas/SearchQuery"
                    },
                    "parent":
                    {
                        "$ref": "#/components/schemas/SaveSearchParent"
                    },
                    "created":
                    {
                        "title": "Created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "modified":
                    {
                        "title": "Modified",
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "SaveSearchPage":
            {
                "title": "SaveSearchPage",
                "required": ["total", "results"],
                "type": "object",
                "properties":
                {
                    "count":
                    {
                        "title": "Count",
                        "type": "integer"
                    },
                    "total":
                    {
                        "title": "Total",
                        "type": "integer"
                    },
                    "results":
                    {
                        "title": "Results",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/SaveSearchOutput"
                        }
                    }
                },
                "description": "A page"
            },
            "SaveSearchParent":
            {
                "title": "SaveSearchParent",
                "required": ["type", "id"],
                "type": "object",
                "properties":
                {
                    "type":
                    {
                        "$ref": "#/components/schemas/ParentType"
                    },
                    "id":
                    {
                        "title": "Id",
                        "type": "string"
                    }
                }
            },
            "SaveSearchUpdate":
            {
                "title": "SaveSearchUpdate",
                "type": "object",
                "properties":
                {
                    "label":
                    {
                        "title": "Label",
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "search":
                    {
                        "$ref": "#/components/schemas/SearchQuery"
                    }
                },
                "additionalProperties": false
            },
            "Scope":
            {
                "title": "Scope",
                "required": ["level", "id", "access"],
                "type": "object",
                "properties":
                {
                    "level":
                    {
                        "$ref": "#/components/schemas/ContainerType"
                    },
                    "id":
                    {
                        "title": "Id",
                        "type": "string"
                    },
                    "access":
                    {
                        "$ref": "#/components/schemas/AccessLevel"
                    }
                }
            },
            "SearchFieldSuggestionQuery":
            {
                "title": "SearchFieldSuggestionQuery",
                "required": ["field"],
                "type": "object",
                "properties":
                {
                    "field":
                    {
                        "title": "Field",
                        "type": "string"
                    }
                }
            },
            "SearchQuery":
            {
                "title": "SearchQuery",
                "required": ["return_type"],
                "type": "object",
                "properties":
                {
                    "return_type":
                    {
                        "$ref": "#/components/schemas/SearchReturnType"
                    },
                    "structured_query":
                    {
                        "title": "Structured Query",
                        "type": "string"
                    },
                    "search_string":
                    {
                        "title": "Search String",
                        "type": "string"
                    },
                    "all_data":
                    {
                        "title": "All Data",
                        "type": "boolean",
                        "default": false
                    },
                    "filters":
                    {
                        "title": "Filters",
                        "type": "array",
                        "items":
                        {
                            "type": "object"
                        }
                    },
                    "size":
                    {
                        "title": "Size",
                        "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "exclusiveMaximum": 10000
                        }],
                        "default": 100
                    }
                }
            },
            "SearchReturnType":
            {
                "title": "SearchReturnType",
                "enum": ["file", "acquisition", "session", "analysis", "project", "subject", "collection"],
                "type": "string",
                "description": "An enumeration."
            },
            "SearchTrainingSetFile":
            {
                "title": "SearchTrainingSetFile",
                "required": ["_id"],
                "type": "object",
                "properties":
                {
                    "_id":
                    {
                        "title": " Id",
                        "type": "string"
                    }
                }
            },
            "SearchTrainingSetInput":
            {
                "title": "SearchTrainingSetInput",
                "required": ["output"],
                "type": "object",
                "properties":
                {
                    "output":
                    {
                        "$ref": "#/components/schemas/ContainerReference"
                    },
                    "search_query":
                    {
                        "$ref": "#/components/schemas/SearchQuery"
                    },
                    "files":
                    {
                        "title": "Files",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/SearchTrainingSetFile"
                        }
                    },
                    "filename":
                    {
                        "title": "Filename",
                        "type": "string"
                    },
                    "description":
                    {
                        "title": "Description",
                        "type": "string"
                    },
                    "labels":
                    {
                        "title": "Labels",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    }
                }
            },
            "ServiceAET":
            {
                "title": "ServiceAET",
                "required": ["_id", "created", "aet", "creator", "host", "port"],
                "type": "object",
                "properties":
                {
                    "_id":
                    {
                        "title": " Id",
                        "type": "string"
                    },
                    "created":
                    {
                        "title": "Created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "aet":
                    {
                        "title": "Aet",
                        "type": "string"
                    },
                    "creator":
                    {
                        "title": "Creator",
                        "type": "string"
                    },
                    "host":
                    {
                        "title": "Host",
                        "type": "string"
                    },
                    "port":
                    {
                        "title": "Port",
                        "type": "integer"
                    }
                },
                "description": "Create new ServiceAET enabling DIMSE C-MOVE to it as a destination.\n\nArgs:\n    host (str): The DICOM service hostname or IP.\n    port (int): The DICOM service port."
            },
            "ServiceAETInput":
            {
                "title": "ServiceAETInput",
                "required": ["aet", "host", "port"],
                "type": "object",
                "properties":
                {
                    "aet":
                    {
                        "title": "Aet",
                        "pattern": "^[\\!-\\[\\]-\\~]+(?:[\\ -\\[\\]-\\~]*[\\!-\\[\\]-\\~]+)*$",
                        "type": "string"
                    },
                    "created":
                    {
                        "title": "Created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "creator":
                    {
                        "title": "Creator",
                        "type": "string"
                    },
                    "host":
                    {
                        "title": "Host",
                        "type": "string"
                    },
                    "port":
                    {
                        "title": "Port",
                        "type": "integer"
                    }
                }
            },
            "Session":
            {
                "title": "Session",
                "required": ["parents"],
                "type": "object",
                "properties":
                {
                    "_id":
                    {
                        "title": " Id",
                        "type": "string"
                    },
                    "created":
                    {
                        "title": "Created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "modified":
                    {
                        "title": "Modified",
                        "type": "string",
                        "format": "date-time"
                    },
                    "revision":
                    {
                        "title": "Revision",
                        "type": "integer",
                        "default": 1
                    },
                    "deleted":
                    {
                        "title": "Deleted",
                        "type": "string",
                        "format": "date-time"
                    },
                    "timezone":
                    {
                        "title": "Timezone",
                        "type": "string"
                    },
                    "timestamp":
                    {
                        "title": "Timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "parents":
                    {
                        "$ref": "#/components/schemas/SessionParents"
                    },
                    "label":
                    {
                        "title": "Label",
                        "type": "string"
                    },
                    "uid":
                    {
                        "title": "Uid",
                        "pattern": ".*",
                        "type": "string"
                    },
                    "files":
                    {
                        "title": "Files",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/File"
                        },
                        "default": []
                    },
                    "info":
                    {
                        "title": "Info",
                        "type": "object",
                        "default":
                        {}
                    },
                    "tags":
                    {
                        "title": "Tags",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    },
                    "notes":
                    {
                        "title": "Notes",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/Note"
                        },
                        "default": []
                    },
                    "permissions":
                    {
                        "title": "Permissions",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/RolePermission"
                        }
                    },
                    "age":
                    {
                        "title": "Age",
                        "type": "integer"
                    },
                    "weight":
                    {
                        "title": "Weight",
                        "type": "number"
                    },
                    "operator":
                    {
                        "title": "Operator",
                        "type": "string"
                    },
                    "satisfies_template":
                    {
                        "title": "Satisfies Template",
                        "type": "boolean"
                    },
                    "project_has_template":
                    {
                        "title": "Project Has Template",
                        "type": "boolean",
                        "default": false
                    }
                },
                "additionalProperties": false
            },
            "SessionContainerOutput":
            {
                "title": "SessionContainerOutput",
                "required": ["group", "project", "parents", "tags", "notes", "subject", "files", "created", "modified", "revision"],
                "type": "object",
                "properties":
                {
                    "_id":
                    {
                        "title": " Id",
                        "type": "string"
                    },
                    "group":
                    {
                        "title": "Group",
                        "type": "string"
                    },
                    "project":
                    {
                        "title": "Project",
                        "type": "string"
                    },
                    "parents":
                    {
                        "$ref": "#/components/schemas/SessionParents"
                    },
                    "label":
                    {
                        "title": "Label",
                        "type": "string"
                    },
                    "info":
                    {
                        "title": "Info",
                        "type": "object"
                    },
                    "uid":
                    {
                        "title": "Uid",
                        "type": "string"
                    },
                    "timestamp":
                    {
                        "title": "Timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "timezone":
                    {
                        "title": "Timezone",
                        "type": "string"
                    },
                    "tags":
                    {
                        "title": "Tags",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "notes":
                    {
                        "title": "Notes",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/Note"
                        }
                    },
                    "subject":
                    {
                        "$ref": "#/components/schemas/SubjectOutput"
                    },
                    "age":
                    {
                        "title": "Age",
                        "type": "integer"
                    },
                    "weight":
                    {
                        "title": "Weight",
                        "type": "number"
                    },
                    "operator":
                    {
                        "title": "Operator",
                        "type": "string"
                    },
                    "files":
                    {
                        "title": "Files",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/File"
                        }
                    },
                    "created":
                    {
                        "title": "Created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "modified":
                    {
                        "title": "Modified",
                        "type": "string",
                        "format": "date-time"
                    },
                    "revision":
                    {
                        "title": "Revision",
                        "type": "integer"
                    },
                    "satisfies_template":
                    {
                        "title": "Satisfies Template",
                        "type": "boolean"
                    },
                    "analyses":
                    {
                        "title": "Analyses",
                        "type": "array",
                        "items":
                        {
                            "anyOf": [
                            {
                                "$ref": "#/components/schemas/AnalysisOutput"
                            },
                            {
                                "$ref": "#/components/schemas/AnalysisOutputInflatedJob"
                            }]
                        },
                        "default": []
                    },
                    "project_has_template":
                    {
                        "title": "Project Has Template",
                        "type": "boolean",
                        "default": false
                    },
                    "join-origin":
                    {
                        "$ref": "#/components/schemas/JoinOrigins"
                    },
                    "container_type":
                    {
                        "$ref": "#/components/schemas/ContainerType"
                    }
                }
            },
            "SessionEmbeddedSubject":
            {
                "title": "SessionEmbeddedSubject",
                "type": "object",
                "properties":
                {
                    "project":
                    {
                        "title": "Project",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "_id":
                    {
                        "title": " Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "master_code":
                    {
                        "title": "Master Code",
                        "pattern": "^.{1,64}$",
                        "type": "string"
                    },
                    "code":
                    {
                        "title": "Code",
                        "pattern": "^.{1,64}$",
                        "type": "string"
                    },
                    "label":
                    {
                        "title": "Label",
                        "type": "string"
                    },
                    "age":
                    {
                        "title": "Age",
                        "type": "integer"
                    }
                },
                "additionalProperties": false,
                "description": "Project is not required on embedded subjects but old schema allows it.\nIn this case project is used from the session and the subject found\nbased on lookup order of _id, master_code, code/label.\nThis model is only used on Sessions so it belongs here only\nIf project is provided then we use the identifer code/label for that\nproject to determine the embedded subject"
            },
            "SessionInput":
            {
                "title": "SessionInput",
                "required": ["project", "label", "subject"],
                "type": "object",
                "properties":
                {
                    "project":
                    {
                        "title": "Project",
                        "type": "string"
                    },
                    "label":
                    {
                        "title": "Label",
                        "type": "string"
                    },
                    "info":
                    {
                        "title": "Info",
                        "type": "object",
                        "default":
                        {}
                    },
                    "uid":
                    {
                        "title": "Uid",
                        "pattern": ".*",
                        "type": "string"
                    },
                    "timestamp":
                    {
                        "title": "Timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "timezone":
                    {
                        "title": "Timezone",
                        "type": "string"
                    },
                    "subject":
                    {
                        "title": "Subject",
                        "anyOf": [
                        {
                            "$ref": "#/components/schemas/SessionEmbeddedSubject"
                        },
                        {
                            "type": "string"
                        }]
                    },
                    "age":
                    {
                        "title": "Age",
                        "type": "integer"
                    },
                    "weight":
                    {
                        "title": "Weight",
                        "type": "number"
                    },
                    "operator":
                    {
                        "title": "Operator",
                        "type": "string"
                    }
                }
            },
            "SessionListOutput":
            {
                "title": "SessionListOutput",
                "required": ["group", "project", "parents", "subject", "files", "info_exists", "created", "modified", "revision"],
                "type": "object",
                "properties":
                {
                    "_id":
                    {
                        "title": " Id",
                        "type": "string"
                    },
                    "group":
                    {
                        "title": "Group",
                        "type": "string"
                    },
                    "project":
                    {
                        "title": "Project",
                        "type": "string"
                    },
                    "parents":
                    {
                        "$ref": "#/components/schemas/SessionParents"
                    },
                    "label":
                    {
                        "title": "Label",
                        "type": "string"
                    },
                    "uid":
                    {
                        "title": "Uid",
                        "type": "string"
                    },
                    "timestamp":
                    {
                        "title": "Timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "timezone":
                    {
                        "title": "Timezone",
                        "type": "string"
                    },
                    "subject":
                    {
                        "$ref": "#/components/schemas/SubjectOutputForList"
                    },
                    "age":
                    {
                        "title": "Age",
                        "type": "integer"
                    },
                    "weight":
                    {
                        "title": "Weight",
                        "type": "number"
                    },
                    "operator":
                    {
                        "title": "Operator",
                        "type": "string"
                    },
                    "files":
                    {
                        "title": "Files",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/FileListOutput"
                        }
                    },
                    "info":
                    {
                        "$ref": "#/components/schemas/BIDSInfo"
                    },
                    "info_exists":
                    {
                        "title": "Info Exists",
                        "type": "boolean"
                    },
                    "created":
                    {
                        "title": "Created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "modified":
                    {
                        "title": "Modified",
                        "type": "string",
                        "format": "date-time"
                    },
                    "revision":
                    {
                        "title": "Revision",
                        "type": "integer"
                    },
                    "satisfies_template":
                    {
                        "title": "Satisfies Template",
                        "type": "boolean"
                    },
                    "project_has_template":
                    {
                        "title": "Project Has Template",
                        "type": "boolean",
                        "default": false
                    },
                    "join-origin":
                    {
                        "$ref": "#/components/schemas/JoinOrigins"
                    },
                    "analyses":
                    {
                        "title": "Analyses",
                        "type": "array",
                        "items":
                        {
                            "anyOf": [
                            {
                                "$ref": "#/components/schemas/AnalysisListOutput"
                            },
                            {
                                "$ref": "#/components/schemas/AnalysisListOutputInflatedJob"
                            }]
                        },
                        "default": []
                    }
                }
            },
            "SessionModify":
            {
                "title": "SessionModify",
                "type": "object",
                "properties":
                {
                    "timestamp":
                    {
                        "title": "Timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "project":
                    {
                        "title": "Project",
                        "type": "string"
                    },
                    "subject":
                    {
                        "title": "Subject",
                        "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "$ref": "#/components/schemas/SessionEmbeddedSubject"
                        }]
                    },
                    "label":
                    {
                        "title": "Label",
                        "type": "string"
                    },
                    "files":
                    {
                        "title": "Files",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/File"
                        }
                    },
                    "info":
                    {
                        "title": "Info",
                        "type": "object"
                    },
                    "tags":
                    {
                        "title": "Tags",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "permissions":
                    {
                        "title": "Permissions",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/RolePermission"
                        }
                    },
                    "age":
                    {
                        "title": "Age",
                        "type": "integer"
                    },
                    "weight":
                    {
                        "title": "Weight",
                        "type": "number"
                    }
                }
            },
            "SessionOutput":
            {
                "title": "SessionOutput",
                "required": ["group", "project", "parents", "tags", "notes", "subject", "files", "created", "modified", "revision"],
                "type": "object",
                "properties":
                {
                    "_id":
                    {
                        "title": " Id",
                        "type": "string"
                    },
                    "group":
                    {
                        "title": "Group",
                        "type": "string"
                    },
                    "project":
                    {
                        "title": "Project",
                        "type": "string"
                    },
                    "parents":
                    {
                        "$ref": "#/components/schemas/SessionParents"
                    },
                    "label":
                    {
                        "title": "Label",
                        "type": "string"
                    },
                    "info":
                    {
                        "title": "Info",
                        "type": "object"
                    },
                    "uid":
                    {
                        "title": "Uid",
                        "type": "string"
                    },
                    "timestamp":
                    {
                        "title": "Timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "timezone":
                    {
                        "title": "Timezone",
                        "type": "string"
                    },
                    "tags":
                    {
                        "title": "Tags",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "notes":
                    {
                        "title": "Notes",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/Note"
                        }
                    },
                    "subject":
                    {
                        "$ref": "#/components/schemas/SubjectOutput"
                    },
                    "age":
                    {
                        "title": "Age",
                        "type": "integer"
                    },
                    "weight":
                    {
                        "title": "Weight",
                        "type": "number"
                    },
                    "operator":
                    {
                        "title": "Operator",
                        "type": "string"
                    },
                    "files":
                    {
                        "title": "Files",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/File"
                        }
                    },
                    "created":
                    {
                        "title": "Created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "modified":
                    {
                        "title": "Modified",
                        "type": "string",
                        "format": "date-time"
                    },
                    "revision":
                    {
                        "title": "Revision",
                        "type": "integer"
                    },
                    "satisfies_template":
                    {
                        "title": "Satisfies Template",
                        "type": "boolean"
                    },
                    "analyses":
                    {
                        "title": "Analyses",
                        "type": "array",
                        "items":
                        {
                            "anyOf": [
                            {
                                "$ref": "#/components/schemas/AnalysisOutput"
                            },
                            {
                                "$ref": "#/components/schemas/AnalysisOutputInflatedJob"
                            }]
                        },
                        "default": []
                    },
                    "project_has_template":
                    {
                        "title": "Project Has Template",
                        "type": "boolean",
                        "default": false
                    },
                    "join-origin":
                    {
                        "$ref": "#/components/schemas/JoinOrigins"
                    }
                }
            },
            "SessionParents":
            {
                "title": "SessionParents",
                "required": ["group", "subject", "project"],
                "type": "object",
                "properties":
                {
                    "group":
                    {
                        "title": "Group",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "subject":
                    {
                        "title": "Subject",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "project":
                    {
                        "title": "Project",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    }
                }
            },
            "SessionSpec":
            {
                "title": "SessionSpec",
                "required": ["fields"],
                "type": "object",
                "properties":
                {
                    "fields":
                    {
                        "title": "Fields",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "filter":
                    {
                        "title": "Filter",
                        "type": "string"
                    },
                    "limit":
                    {
                        "title": "Limit",
                        "type": "integer",
                        "default": 50
                    },
                    "sort":
                    {
                        "title": "Sort",
                        "type": "string"
                    },
                    "files":
                    {
                        "$ref": "#/components/schemas/FileFilter"
                    },
                    "jobs":
                    {
                        "$ref": "#/components/schemas/JobSpec"
                    },
                    "analyses":
                    {
                        "$ref": "#/components/schemas/ContainerSpecWithInputs"
                    },
                    "group":
                    {
                        "$ref": "#/components/schemas/GroupSpec"
                    },
                    "project":
                    {
                        "$ref": "#/components/schemas/ProjectSpec"
                    },
                    "subject":
                    {
                        "$ref": "#/components/schemas/SubjectSpec"
                    },
                    "acquisitions":
                    {
                        "$ref": "#/components/schemas/AcquisitionSpec"
                    }
                },
                "additionalProperties": false
            },
            "SessionTemplateOptions":
            {
                "title": "SessionTemplateOptions",
                "type": "object",
                "properties":
                {
                    "label":
                    {
                        "title": "Label",
                        "type": "string"
                    },
                    "tags":
                    {
                        "title": "Tags",
                        "type": "string"
                    },
                    "subject":
                    {
                        "$ref": "#/components/schemas/SubjectTemplateOptions"
                    }
                }
            },
            "SettingsInput":
            {
                "title": "SettingsInput",
                "type": "object",
                "properties":
                {
                    "viewer_apps":
                    {
                        "title": "Viewer Apps",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/ViewerApp"
                        }
                    },
                    "deid_profile":
                    {
                        "title": "Deid Profile",
                        "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "object"
                        }]
                    }
                }
            },
            "SettingsOutput":
            {
                "title": "SettingsOutput",
                "type": "object",
                "properties":
                {
                    "viewer_apps":
                    {
                        "title": "Viewer Apps",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/ViewerApp"
                        },
                        "default": []
                    },
                    "deid_profile":
                    {
                        "title": "Deid Profile",
                        "type": "object",
                        "default":
                        {}
                    }
                }
            },
            "Site":
            {
                "title": "Site",
                "type": "object",
                "properties":
                {
                    "id":
                    {
                        "title": "Id",
                        "type": "string",
                        "default": "local"
                    },
                    "api_url":
                    {
                        "title": "Api Url",
                        "type": "string",
                        "default": "https://localhost/api"
                    },
                    "central_url":
                    {
                        "title": "Central Url",
                        "type": "string",
                        "default": "https://sdmc.scitran.io/api"
                    },
                    "deid_log_url":
                    {
                        "title": "Deid Log Url",
                        "type": "string"
                    },
                    "dimse_host":
                    {
                        "title": "Dimse Host",
                        "type": "string"
                    },
                    "dimse_port":
                    {
                        "title": "Dimse Port",
                        "type": "integer"
                    },
                    "inactivity_timeout":
                    {
                        "title": "Inactivity Timeout",
                        "type": "integer"
                    },
                    "name":
                    {
                        "title": "Name",
                        "type": "string",
                        "default": "Local"
                    },
                    "redirect_url":
                    {
                        "title": "Redirect Url",
                        "type": "string",
                        "default": "https://local.flywheel.io"
                    },
                    "registered":
                    {
                        "title": "Registered",
                        "type": "boolean",
                        "default": false
                    },
                    "ssl_cert":
                    {
                        "title": "Ssl Cert",
                        "type": "string"
                    },
                    "upload_maximum_bytes":
                    {
                        "title": "Upload Maximum Bytes",
                        "type": "string",
                        "default": "10737418240"
                    }
                },
                "additionalProperties": false,
                "description": "Base class for settings, allowing values to be overridden by environment variables.\n\nThis is useful in production for secrets you do not wish to save in code, it plays nicely with docker(-compose),\nHeroku and any 12 factor app design."
            },
            "StaticCompute":
            {
                "title": "StaticCompute",
                "type": "object",
                "properties":
                {},
                "additionalProperties": false
            },
            "StructuredQuery":
            {
                "title": "StructuredQuery",
                "required": ["structured_query"],
                "type": "object",
                "properties":
                {
                    "structured_query":
                    {
                        "title": "Structured Query",
                        "type": "string"
                    }
                }
            },
            "SubContainerType":
            {
                "title": "SubContainerType",
                "enum": ["acquisitions", "all", "analyses", "collections", "groups", "projects", "sessions", "subjects"],
                "type": "string",
                "description": "An enumeration."
            },
            "SubjectContainerOutput":
            {
                "title": "SubjectContainerOutput",
                "required": ["project", "created", "modified", "revision", "parents", "permissions", "notes", "tags", "info", "info_exists", "files"],
                "type": "object",
                "properties":
                {
                    "_id":
                    {
                        "title": " Id",
                        "type": "string"
                    },
                    "project":
                    {
                        "title": "Project",
                        "type": "string"
                    },
                    "created":
                    {
                        "title": "Created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "modified":
                    {
                        "title": "Modified",
                        "type": "string",
                        "format": "date-time"
                    },
                    "revision":
                    {
                        "title": "Revision",
                        "type": "integer"
                    },
                    "parents":
                    {
                        "$ref": "#/components/schemas/SubjectParents"
                    },
                    "permissions":
                    {
                        "title": "Permissions",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/RolePermission"
                        }
                    },
                    "firstname":
                    {
                        "title": "Firstname",
                        "pattern": "[^/]+",
                        "type": "string"
                    },
                    "lastname":
                    {
                        "title": "Lastname",
                        "pattern": "[^/]+",
                        "type": "string"
                    },
                    "sex":
                    {
                        "title": "Sex",
                        "pattern": "male|female|other|unknown",
                        "type": "string"
                    },
                    "age":
                    {
                        "title": "Age",
                        "type": "integer"
                    },
                    "cohort":
                    {
                        "title": "Cohort",
                        "pattern": "Control|Study|Training|Test|Validation",
                        "type": "string"
                    },
                    "type":
                    {
                        "title": "Type",
                        "pattern": "human|animal|phantom",
                        "type": "string"
                    },
                    "race":
                    {
                        "title": "Race",
                        "pattern": "American Indian or Alaska Native|Asian|Native Hawaiian or Other Pacific Islander|Black or African American|White|More Than One Race|Unknown or Not Reported",
                        "type": "string"
                    },
                    "ethnicity":
                    {
                        "title": "Ethnicity",
                        "pattern": "Not Hispanic or Latino|Hispanic or Latino|Unknown or Not Reported",
                        "type": "string"
                    },
                    "species":
                    {
                        "title": "Species",
                        "type": "string"
                    },
                    "strain":
                    {
                        "title": "Strain",
                        "type": "string"
                    },
                    "label":
                    {
                        "title": "Label",
                        "type": "string"
                    },
                    "code":
                    {
                        "title": "Code",
                        "pattern": "^.{1,64}$",
                        "type": "string"
                    },
                    "master_code":
                    {
                        "title": "Master Code",
                        "type": "string"
                    },
                    "notes":
                    {
                        "title": "Notes",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/Note"
                        }
                    },
                    "tags":
                    {
                        "title": "Tags",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "info":
                    {
                        "title": "Info",
                        "type": "object"
                    },
                    "info_exists":
                    {
                        "title": "Info Exists",
                        "type": "boolean"
                    },
                    "files":
                    {
                        "title": "Files",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/File"
                        }
                    },
                    "analyses":
                    {
                        "title": "Analyses",
                        "type": "array",
                        "items":
                        {
                            "anyOf": [
                            {
                                "$ref": "#/components/schemas/AnalysisOutput"
                            },
                            {
                                "$ref": "#/components/schemas/AnalysisOutputInflatedJob"
                            }]
                        },
                        "default": []
                    },
                    "join-origin":
                    {
                        "$ref": "#/components/schemas/JoinOrigins"
                    },
                    "container_type":
                    {
                        "$ref": "#/components/schemas/ContainerType"
                    }
                }
            },
            "SubjectInput":
            {
                "title": "SubjectInput",
                "required": ["project"],
                "type": "object",
                "properties":
                {
                    "firstname":
                    {
                        "title": "Firstname",
                        "pattern": "[^/]+",
                        "type": "string"
                    },
                    "lastname":
                    {
                        "title": "Lastname",
                        "pattern": "[^/]+",
                        "type": "string"
                    },
                    "sex":
                    {
                        "title": "Sex",
                        "pattern": "male|female|other|unknown",
                        "type": "string"
                    },
                    "cohort":
                    {
                        "title": "Cohort",
                        "pattern": "Control|Study|Training|Test|Validation",
                        "type": "string"
                    },
                    "type":
                    {
                        "title": "Type",
                        "pattern": "human|animal|phantom",
                        "type": "string"
                    },
                    "race":
                    {
                        "title": "Race",
                        "pattern": "American Indian or Alaska Native|Asian|Native Hawaiian or Other Pacific Islander|Black or African American|White|More Than One Race|Unknown or Not Reported",
                        "type": "string"
                    },
                    "ethnicity":
                    {
                        "title": "Ethnicity",
                        "pattern": "Not Hispanic or Latino|Hispanic or Latino|Unknown or Not Reported",
                        "type": "string"
                    },
                    "species":
                    {
                        "title": "Species",
                        "type": "string"
                    },
                    "strain":
                    {
                        "title": "Strain",
                        "type": "string"
                    },
                    "label":
                    {
                        "title": "Label",
                        "type": "string"
                    },
                    "code":
                    {
                        "title": "Code",
                        "pattern": "^.{1,64}$",
                        "type": "string"
                    },
                    "master_code":
                    {
                        "title": "Master Code",
                        "pattern": "^.+$",
                        "type": "string"
                    },
                    "tags":
                    {
                        "title": "Tags",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    },
                    "info":
                    {
                        "title": "Info",
                        "type": "object",
                        "default":
                        {}
                    },
                    "project":
                    {
                        "title": "Project",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    }
                },
                "additionalProperties": false
            },
            "SubjectModify":
            {
                "title": "SubjectModify",
                "type": "object",
                "properties":
                {
                    "firstname":
                    {
                        "title": "Firstname",
                        "pattern": "[^/]+",
                        "type": "string"
                    },
                    "lastname":
                    {
                        "title": "Lastname",
                        "pattern": "[^/]+",
                        "type": "string"
                    },
                    "sex":
                    {
                        "title": "Sex",
                        "pattern": "male|female|other|unknown",
                        "type": "string"
                    },
                    "cohort":
                    {
                        "title": "Cohort",
                        "pattern": "Control|Study|Training|Test|Validation",
                        "type": "string"
                    },
                    "type":
                    {
                        "title": "Type",
                        "pattern": "human|animal|phantom",
                        "type": "string"
                    },
                    "race":
                    {
                        "title": "Race",
                        "pattern": "American Indian or Alaska Native|Asian|Native Hawaiian or Other Pacific Islander|Black or African American|White|More Than One Race|Unknown or Not Reported",
                        "type": "string"
                    },
                    "ethnicity":
                    {
                        "title": "Ethnicity",
                        "pattern": "Not Hispanic or Latino|Hispanic or Latino|Unknown or Not Reported",
                        "type": "string"
                    },
                    "species":
                    {
                        "title": "Species",
                        "type": "string"
                    },
                    "strain":
                    {
                        "title": "Strain",
                        "type": "string"
                    },
                    "label":
                    {
                        "title": "Label",
                        "type": "string"
                    },
                    "code":
                    {
                        "title": "Code",
                        "pattern": "^.{1,64}$",
                        "type": "string"
                    },
                    "master_code":
                    {
                        "title": "Master Code",
                        "pattern": "^.+$",
                        "type": "string"
                    },
                    "tags":
                    {
                        "title": "Tags",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        },
                        "default": []
                    },
                    "info":
                    {
                        "title": "Info",
                        "type": "object",
                        "default":
                        {}
                    },
                    "project":
                    {
                        "title": "Project",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "permissions":
                    {
                        "title": "Permissions",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/RolePermission"
                        }
                    },
                    "notes":
                    {
                        "title": "Notes",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/Note"
                        }
                    },
                    "files":
                    {
                        "title": "Files",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/File"
                        }
                    }
                }
            },
            "SubjectOutput":
            {
                "title": "SubjectOutput",
                "required": ["project", "created", "modified", "revision", "parents", "permissions", "notes", "tags", "info", "info_exists", "files"],
                "type": "object",
                "properties":
                {
                    "_id":
                    {
                        "title": " Id",
                        "type": "string"
                    },
                    "project":
                    {
                        "title": "Project",
                        "type": "string"
                    },
                    "created":
                    {
                        "title": "Created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "modified":
                    {
                        "title": "Modified",
                        "type": "string",
                        "format": "date-time"
                    },
                    "revision":
                    {
                        "title": "Revision",
                        "type": "integer"
                    },
                    "parents":
                    {
                        "$ref": "#/components/schemas/SubjectParents"
                    },
                    "permissions":
                    {
                        "title": "Permissions",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/RolePermission"
                        }
                    },
                    "firstname":
                    {
                        "title": "Firstname",
                        "pattern": "[^/]+",
                        "type": "string"
                    },
                    "lastname":
                    {
                        "title": "Lastname",
                        "pattern": "[^/]+",
                        "type": "string"
                    },
                    "sex":
                    {
                        "title": "Sex",
                        "pattern": "male|female|other|unknown",
                        "type": "string"
                    },
                    "age":
                    {
                        "title": "Age",
                        "type": "integer"
                    },
                    "cohort":
                    {
                        "title": "Cohort",
                        "pattern": "Control|Study|Training|Test|Validation",
                        "type": "string"
                    },
                    "type":
                    {
                        "title": "Type",
                        "pattern": "human|animal|phantom",
                        "type": "string"
                    },
                    "race":
                    {
                        "title": "Race",
                        "pattern": "American Indian or Alaska Native|Asian|Native Hawaiian or Other Pacific Islander|Black or African American|White|More Than One Race|Unknown or Not Reported",
                        "type": "string"
                    },
                    "ethnicity":
                    {
                        "title": "Ethnicity",
                        "pattern": "Not Hispanic or Latino|Hispanic or Latino|Unknown or Not Reported",
                        "type": "string"
                    },
                    "species":
                    {
                        "title": "Species",
                        "type": "string"
                    },
                    "strain":
                    {
                        "title": "Strain",
                        "type": "string"
                    },
                    "label":
                    {
                        "title": "Label",
                        "type": "string"
                    },
                    "code":
                    {
                        "title": "Code",
                        "pattern": "^.{1,64}$",
                        "type": "string"
                    },
                    "master_code":
                    {
                        "title": "Master Code",
                        "type": "string"
                    },
                    "notes":
                    {
                        "title": "Notes",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/Note"
                        }
                    },
                    "tags":
                    {
                        "title": "Tags",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "info":
                    {
                        "title": "Info",
                        "type": "object"
                    },
                    "info_exists":
                    {
                        "title": "Info Exists",
                        "type": "boolean"
                    },
                    "files":
                    {
                        "title": "Files",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/File"
                        }
                    },
                    "analyses":
                    {
                        "title": "Analyses",
                        "type": "array",
                        "items":
                        {
                            "anyOf": [
                            {
                                "$ref": "#/components/schemas/AnalysisOutput"
                            },
                            {
                                "$ref": "#/components/schemas/AnalysisOutputInflatedJob"
                            }]
                        },
                        "default": []
                    },
                    "join-origin":
                    {
                        "$ref": "#/components/schemas/JoinOrigins"
                    }
                }
            },
            "SubjectOutputForList":
            {
                "title": "SubjectOutputForList",
                "required": ["project", "created", "modified", "revision", "parents", "permissions", "notes", "tags", "info_exists", "files"],
                "type": "object",
                "properties":
                {
                    "_id":
                    {
                        "title": " Id",
                        "type": "string"
                    },
                    "project":
                    {
                        "title": "Project",
                        "type": "string"
                    },
                    "created":
                    {
                        "title": "Created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "modified":
                    {
                        "title": "Modified",
                        "type": "string",
                        "format": "date-time"
                    },
                    "revision":
                    {
                        "title": "Revision",
                        "type": "integer"
                    },
                    "parents":
                    {
                        "$ref": "#/components/schemas/SubjectParents"
                    },
                    "permissions":
                    {
                        "title": "Permissions",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/RolePermission"
                        }
                    },
                    "cohort":
                    {
                        "title": "Cohort",
                        "pattern": "Control|Study|Training|Test|Validation",
                        "type": "string"
                    },
                    "type":
                    {
                        "title": "Type",
                        "pattern": "human|animal|phantom",
                        "type": "string"
                    },
                    "species":
                    {
                        "title": "Species",
                        "type": "string"
                    },
                    "strain":
                    {
                        "title": "Strain",
                        "type": "string"
                    },
                    "label":
                    {
                        "title": "Label",
                        "type": "string"
                    },
                    "code":
                    {
                        "title": "Code",
                        "type": "string"
                    },
                    "master_code":
                    {
                        "title": "Master Code",
                        "type": "string"
                    },
                    "notes":
                    {
                        "title": "Notes",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/Note"
                        }
                    },
                    "tags":
                    {
                        "title": "Tags",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "info":
                    {
                        "$ref": "#/components/schemas/BIDSInfo"
                    },
                    "info_exists":
                    {
                        "title": "Info Exists",
                        "type": "boolean"
                    },
                    "files":
                    {
                        "title": "Files",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/FileListOutput"
                        }
                    },
                    "analyses":
                    {
                        "title": "Analyses",
                        "type": "array",
                        "items":
                        {
                            "anyOf": [
                            {
                                "$ref": "#/components/schemas/AnalysisListOutput"
                            },
                            {
                                "$ref": "#/components/schemas/AnalysisListOutputInflatedJob"
                            }]
                        },
                        "default": []
                    },
                    "join-origin":
                    {
                        "$ref": "#/components/schemas/JoinOrigins"
                    }
                },
                "description": "Simplified version of the list output that does not have any PHI\nand thus does not require logging of the response"
            },
            "SubjectParents":
            {
                "title": "SubjectParents",
                "required": ["group", "project"],
                "type": "object",
                "properties":
                {
                    "group":
                    {
                        "title": "Group",
                        "pattern": "^[0-9a-z][0-9a-z.@_-]{0,62}[0-9a-z]$",
                        "type": "string"
                    },
                    "project":
                    {
                        "title": "Project",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    }
                }
            },
            "SubjectSpec":
            {
                "title": "SubjectSpec",
                "required": ["fields"],
                "type": "object",
                "properties":
                {
                    "fields":
                    {
                        "title": "Fields",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "filter":
                    {
                        "title": "Filter",
                        "type": "string"
                    },
                    "limit":
                    {
                        "title": "Limit",
                        "type": "integer",
                        "default": 50
                    },
                    "sort":
                    {
                        "title": "Sort",
                        "type": "string"
                    },
                    "files":
                    {
                        "$ref": "#/components/schemas/FileFilter"
                    },
                    "jobs":
                    {
                        "$ref": "#/components/schemas/JobSpec"
                    },
                    "analyses":
                    {
                        "$ref": "#/components/schemas/ContainerSpecWithInputs"
                    },
                    "group":
                    {
                        "$ref": "#/components/schemas/GroupSpec"
                    },
                    "project":
                    {
                        "$ref": "#/components/schemas/ProjectSpec"
                    },
                    "sessions":
                    {
                        "$ref": "#/components/schemas/SessionSpec"
                    },
                    "acquisitions":
                    {
                        "$ref": "#/components/schemas/AcquisitionSpec"
                    }
                },
                "additionalProperties": false
            },
            "SubjectTemplateOptions":
            {
                "title": "SubjectTemplateOptions",
                "type": "object",
                "properties":
                {
                    "code":
                    {
                        "title": "Code",
                        "type": "string"
                    },
                    "tags":
                    {
                        "title": "Tags",
                        "type": "string"
                    }
                }
            },
            "Tag":
            {
                "title": "Tag",
                "required": ["value"],
                "type": "object",
                "properties":
                {
                    "value":
                    {
                        "title": "Value",
                        "maxLength": 32,
                        "minLength": 1,
                        "pattern": "^[^/]{1,32}$",
                        "type": "string"
                    }
                }
            },
            "Transitions":
            {
                "title": "Transitions",
                "type": "object",
                "properties":
                {
                    "pending":
                    {
                        "title": "Pending",
                        "type": "string",
                        "format": "date-time"
                    },
                    "running":
                    {
                        "title": "Running",
                        "type": "string",
                        "format": "date-time"
                    },
                    "failed":
                    {
                        "title": "Failed",
                        "type": "string",
                        "format": "date-time"
                    },
                    "complete":
                    {
                        "title": "Complete",
                        "type": "string",
                        "format": "date-time"
                    },
                    "cancelled":
                    {
                        "title": "Cancelled",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "description": "The representation of the object holding information about when a job\n    made transitions to the different states\n\nAttributes:\n    pending (Optional[datetime.datetime]): Timestamp of when the job\n        transitioned to pending state\n    running (Optional[datetime.datetime]): Timestamp of when the job\n        transitioned to running state\n    failed (Optional[datetime.datetime]): Timestamp of when the job\n        transitioned to failed state\n    complete (Optional[datetime.datetime]): Timestamp of when the job\n        transitioned to complete state\n    cancelled (Optional[datetime.datetime]): Timestamp of when the job\n        transitioned to cancelled state"
            },
            "UidCheckInputAcquisitions":
            {
                "title": "UidCheckInputAcquisitions",
                "required": ["acquisitions"],
                "type": "object",
                "properties":
                {
                    "project_id":
                    {
                        "title": "Project Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "project_ids":
                    {
                        "title": "Project Ids",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "array",
                        "items":
                        {
                            "type": "string",
                            "pattern": "^[0-9a-fA-F]{24}$"
                        },
                        "default": []
                    },
                    "sessions":
                    {
                        "title": "Sessions",
                        "pattern": ".*",
                        "type": "array",
                        "items":
                        {
                            "type": "string",
                            "pattern": ".*"
                        },
                        "default": []
                    },
                    "acquisitions":
                    {
                        "title": "Acquisitions",
                        "pattern": ".*",
                        "type": "array",
                        "items":
                        {
                            "type": "string",
                            "pattern": ".*"
                        }
                    }
                },
                "additionalProperties": false
            },
            "UidCheckInputSessions":
            {
                "title": "UidCheckInputSessions",
                "required": ["sessions"],
                "type": "object",
                "properties":
                {
                    "project_id":
                    {
                        "title": "Project Id",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "string"
                    },
                    "project_ids":
                    {
                        "title": "Project Ids",
                        "pattern": "^[0-9a-fA-F]{24}$",
                        "type": "array",
                        "items":
                        {
                            "type": "string",
                            "pattern": "^[0-9a-fA-F]{24}$"
                        },
                        "default": []
                    },
                    "sessions":
                    {
                        "title": "Sessions",
                        "pattern": ".*",
                        "type": "array",
                        "items":
                        {
                            "type": "string",
                            "pattern": ".*"
                        }
                    },
                    "acquisitions":
                    {
                        "title": "Acquisitions",
                        "pattern": ".*",
                        "type": "array",
                        "items":
                        {
                            "type": "string",
                            "pattern": ".*"
                        },
                        "default": []
                    }
                },
                "additionalProperties": false
            },
            "UidCheckOutput":
            {
                "title": "UidCheckOutput",
                "type": "object",
                "properties":
                {
                    "sessions":
                    {
                        "title": "Sessions",
                        "pattern": ".*",
                        "type": "array",
                        "items":
                        {
                            "type": "string",
                            "pattern": ".*"
                        }
                    },
                    "acquisitions":
                    {
                        "title": "Acquisitions",
                        "pattern": ".*",
                        "type": "array",
                        "items":
                        {
                            "type": "string",
                            "pattern": ".*"
                        }
                    }
                }
            },
            "UploadTicketOutput":
            {
                "title": "UploadTicketOutput",
                "required": ["ticket", "urls", "headers"],
                "type": "object",
                "properties":
                {
                    "ticket":
                    {
                        "title": "Ticket",
                        "type": "string"
                    },
                    "urls":
                    {
                        "title": "Urls",
                        "type": "object",
                        "additionalProperties":
                        {
                            "type": "string"
                        }
                    },
                    "headers":
                    {
                        "title": "Headers",
                        "type": "object",
                        "additionalProperties":
                        {
                            "type": "string"
                        }
                    }
                },
                "description": "The output of the ticket\n\nAttributes:\n    ticket: The id of the ticket\n    urls: A mapping of filename to respective url"
            },
            "UploadTokenOutput":
            {
                "title": "UploadTokenOutput",
                "required": ["token"],
                "type": "object",
                "properties":
                {
                    "token":
                    {
                        "title": "Token",
                        "type": "string"
                    }
                }
            },
            "UserInput":
            {
                "title": "UserInput",
                "required": ["_id", "firstname", "lastname"],
                "type": "object",
                "properties":
                {
                    "_id":
                    {
                        "title": " Id",
                        "type": "string"
                    },
                    "firstname":
                    {
                        "title": "Firstname",
                        "type": "string"
                    },
                    "lastname":
                    {
                        "title": "Lastname",
                        "type": "string"
                    },
                    "email":
                    {
                        "title": "Email",
                        "type": "string"
                    },
                    "password":
                    {
                        "title": "Password",
                        "type": "string"
                    },
                    "roles":
                    {
                        "title": "Roles",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/RoleType"
                        }
                    },
                    "disabled":
                    {
                        "title": "Disabled",
                        "type": "boolean"
                    },
                    "avatar":
                    {
                        "title": "Avatar",
                        "type": "string"
                    },
                    "root":
                    {
                        "title": "Root",
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "UserJobs":
            {
                "title": "UserJobs",
                "required": ["total", "jobs", "stats"],
                "type": "object",
                "properties":
                {
                    "total":
                    {
                        "title": "Total",
                        "type": "integer"
                    },
                    "jobs":
                    {
                        "title": "Jobs",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/Job"
                        }
                    },
                    "stats":
                    {
                        "$ref": "#/components/schemas/JobsByState"
                    }
                }
            },
            "UserOutput":
            {
                "title": "UserOutput",
                "required": ["_id", "firstname", "lastname", "email", "roles", "created", "modified"],
                "type": "object",
                "properties":
                {
                    "_id":
                    {
                        "title": " Id",
                        "type": "string"
                    },
                    "user_id":
                    {
                        "title": "User Id",
                        "type": "string"
                    },
                    "firstname":
                    {
                        "title": "Firstname",
                        "type": "string"
                    },
                    "lastname":
                    {
                        "title": "Lastname",
                        "type": "string"
                    },
                    "email":
                    {
                        "title": "Email",
                        "type": "string"
                    },
                    "roles":
                    {
                        "title": "Roles",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/RoleType"
                        }
                    },
                    "root":
                    {
                        "title": "Root",
                        "type": "boolean",
                        "default": false
                    },
                    "avatar":
                    {
                        "title": "Avatar",
                        "type": "string"
                    },
                    "avatars":
                    {
                        "title": "Avatars",
                        "allOf": [
                        {
                            "$ref": "#/components/schemas/AvatarList"
                        }],
                        "default":
                        {}
                    },
                    "created":
                    {
                        "title": "Created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "modified":
                    {
                        "title": "Modified",
                        "type": "string",
                        "format": "date-time"
                    },
                    "info":
                    {
                        "title": "Info",
                        "type": "object"
                    }
                }
            },
            "ValidationError":
            {
                "title": "ValidationError",
                "required": ["loc", "msg", "type"],
                "type": "object",
                "properties":
                {
                    "loc":
                    {
                        "title": "Location",
                        "type": "array",
                        "items":
                        {
                            "type": "string"
                        }
                    },
                    "msg":
                    {
                        "title": "Message",
                        "type": "string"
                    },
                    "type":
                    {
                        "title": "Error Type",
                        "type": "string"
                    }
                }
            },
            "ViewerApp":
            {
                "title": "ViewerApp",
                "required": ["name", "url"],
                "type": "object",
                "properties":
                {
                    "type":
                    {
                        "$ref": "#/components/schemas/ViewerAppType"
                    },
                    "name":
                    {
                        "title": "Name",
                        "type": "string"
                    },
                    "description":
                    {
                        "title": "Description",
                        "type": "string"
                    },
                    "url":
                    {
                        "title": "Url",
                        "type": "string"
                    },
                    "origin":
                    {
                        "$ref": "#/components/schemas/Origin"
                    },
                    "options":
                    {
                        "title": "Options",
                        "type": "object"
                    },
                    "files":
                    {
                        "title": "Files",
                        "type": "object"
                    },
                    "containers":
                    {
                        "title": "Containers",
                        "type": "object"
                    }
                }
            },
            "ViewerAppType":
            {
                "title": "ViewerAppType",
                "enum": ["viewer", "form"],
                "type": "string",
                "description": "An enumeration."
            },
            "VirusScan":
            {
                "title": "VirusScan",
                "required": ["state"],
                "type": "object",
                "properties":
                {
                    "state":
                    {
                        "$ref": "#/components/schemas/VirusScanState"
                    }
                }
            },
            "VirusScanState":
            {
                "title": "VirusScanState",
                "enum": ["clean", "virus", "quarantined"],
                "type": "string",
                "description": "An enumeration."
            },
            "WebHooks":
            {
                "title": "WebHooks",
                "type": "object",
                "properties":
                {
                    "virus_scan":
                    {
                        "title": "Virus Scan",
                        "type": "string"
                    }
                },
                "additionalProperties": false,
                "description": "Base class for settings, allowing values to be overridden by environment variables.\n\nThis is useful in production for secrets you do not wish to save in code, it plays nicely with docker(-compose),\nHeroku and any 12 factor app design."
            },
            "ZipfileInfo":
            {
                "title": "ZipfileInfo",
                "required": ["comment", "members"],
                "type": "object",
                "properties":
                {
                    "comment":
                    {
                        "title": "Comment",
                        "type": "string",
                        "format": "binary"
                    },
                    "members":
                    {
                        "title": "Members",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/ZipfileMemberInfo"
                        }
                    }
                }
            },
            "ZipfileMemberInfo":
            {
                "title": "ZipfileMemberInfo",
                "required": ["path", "size", "timestamp", "comment"],
                "type": "object",
                "properties":
                {
                    "path":
                    {
                        "title": "Path",
                        "type": "string"
                    },
                    "size":
                    {
                        "title": "Size",
                        "type": "integer"
                    },
                    "timestamp":
                    {
                        "title": "Timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "comment":
                    {
                        "title": "Comment",
                        "type": "string",
                        "format": "binary"
                    }
                }
            }
        }
    }
}